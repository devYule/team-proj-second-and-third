{"version":3,"file":"static/js/243.4ba8dc94.chunk.js","mappings":"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","sources":["api/free/free_api.js","styles/free/FreeDetailsPageStyle.js","pages/free/FreeDetailsPage.js","styles/free/FreePageStyle.js","styles/free/FreeRegisterPageStyle.js","util/jwtUtil.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport { jwtAxios } from \"../../util/jwtUtil\";\r\n\r\n// FreePage 전체 게시글 호출\r\nexport const getFreeList = async ({ sendData }) => {\r\n  try {\r\n    const url = `${SERVER_URL}/api/board?page=${sendData.page}&search=${sendData.search}&type=${sendData.type}`;\r\n\r\n    const res = await axios.get(url);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 게시글 DetailsPage\r\nexport const getFreeData = async iboard => {\r\n  try {\r\n    const url = `${SERVER_URL}/api/board/${iboard}`;\r\n\r\n    const res = await axios.get(url);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 게시글 등록\r\nexport const postFreeData = async () => {\r\n  try {\r\n    const url = `${SERVER_URL}/api/board`;\r\n\r\n    const res = await jwtAxios.get(url);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FreeDetailsPageStyle = styled.div`\r\n  width: 1260px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const FreeDetailsMain = styled.div`\r\n  display: flex;\r\n`;\r\nexport const TitleSection = styled.div`\r\n  height: 80px;\r\n  border-bottom: 1px solid #e4e7ff;\r\n  padding-top: 15px;\r\n  padding-left: 5px;\r\n  h1 {\r\n    color: #000;\r\n    font-size: 20px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n  h2 {\r\n    color: #000;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const ContentSection = styled.div`\r\n  padding-top: 20px;\r\n  padding-left: 10px;\r\n  padding-bottom: 100px;\r\n  border-bottom: 1px solid #e4e7ff;\r\n  img {\r\n    width: 300px;\r\n    height: 300px;\r\n    margin-right: 65px;\r\n  }\r\n  p {\r\n    margin-top: 20px;\r\n    color: #000;\r\n    font-size: 16px; \r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const ReviewSection = styled.div`\r\nwidth: 1080px;\r\n  h1 {\r\n    margin-top: 10px;\r\n    margin-bottom: 15px;\r\n    color: #000;\r\n    font-size: 20px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const ReviewRegister = styled.div`\r\n  width: 1080px;\r\n  background: #f9f9f9;\r\n  border: 1px solid #d9d9d9;\r\n  margin-bottom: 30px;\r\n  p {\r\n    width: 1080px;\r\n    height: 80px;\r\n    padding-top: 15px;\r\n    padding-left: 20px;\r\n    border-bottom: 1px solid #d9d9d9;\r\n\r\n    color: #777;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n  textarea {\r\n    width: 920px;\r\n    height: 70px;\r\n    resize: none;\r\n    background: #f9f9f9;\r\n    padding-left: 20px;\r\n    padding-top: 10px;\r\n    border: none;\r\n\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n  span {\r\n    width: 30px;\r\n    padding-bottom: 10px;\r\n  }\r\n  button {\r\n    width: 100px;\r\n    height: 70px;\r\n    background: #2c39b5;\r\n    border: none;\r\n\r\n    color: #fff;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const ReviewList = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid #d9d9d9;\r\n  img {\r\n    margin-top: 10px;\r\n    width: 50px;\r\n    height: 50px;\r\n    margin-right: 10px;\r\n    border-radius: 100%;\r\n  }\r\n  h1 {\r\n    margin-top: 10px;\r\n    margin-bottom: 15px;\r\n\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n  p {\r\n    margin-bottom: 15px;\r\n\r\n    color: #777;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const MoreBt = styled.div`\r\ntext-align: center;\r\nimg {\r\n    margin: 40px auto 30px;\r\n  }`\r\n\r\nexport const SideSection = styled.div`\r\n  width: 150px;\r\n  border: 1px solid #e4e7ff;\r\n  /* background: orange; */\r\n`;\r\n\r\nexport const WriterSection = styled.div`\r\n  background: #e4e7ff;\r\n  padding: 15px;\r\n\r\n  img {\r\n    width: 120px;\r\n    height: 120px;\r\n    border-radius: 5px;\r\n  }\r\n  h1 {\r\n    margin-top: 5px;\r\n    color: #000;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\n\r\nexport const ContentState = styled.div`\r\nwidth: 130px;\r\nmargin: 0 auto;\r\n  border-bottom: 1px solid #e4e7ff;\r\n  padding: 7px 10px;\r\n  h1 {\r\n    color: #000;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport {\r\n  ContentSection,\r\n  ContentState,\r\n  FreeDetailsMain,\r\n  FreeDetailsPageStyle,\r\n  MoreBt,\r\n  ReviewList,\r\n  ReviewRegister,\r\n  ReviewSection,\r\n  SideSection,\r\n  TitleSection,\r\n  WriterSection,\r\n} from \"../../styles/free/FreeDetailsPageStyle\";\r\nimport { FreeHeader } from \"../../styles/free/FreePageStyle\";\r\nimport { GoToListBt } from \"../../styles/free/FreeRegisterPageStyle\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { getFreeData } from \"../../api/free/free_api\";\r\n\r\nconst contentData = [\r\n  {\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    content: \"바보준*님 잘 좀 했으면 좋겠습니다.\",\r\n    date: \"2024.02.23\",\r\n    reviews: [\r\n      {\r\n        writer: \"바보준서\",\r\n        text: \"허 어이가 없네 내가 잘해줬더만 그렇게 이야기하기있나 이제 너랑 안봐!!!!! 연락하지마!\",\r\n      },\r\n      {\r\n        writer: \"바보아니다\",\r\n        text: \"그래 다신 연락안할거다 흥! 니도 연락하지마 이미 차단했음\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst FreeDetailsPage = () => {\r\n  // 데이터 연동(상세페이지)\r\n  // const [freeData, setFreeData] = useState(null);\r\n  // // const searchParams = new URLSearchParams(location.search);\r\n  // // const iboard = parseInt(searchParams.get(\"iboard\"));\r\n  // const iboard = useParams();\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await getFreeData(iboard);\r\n  //       setFreeData(response.data);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching product data:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, [iboard]);\r\n\r\n  // if (!freeData) {\r\n  //   return <div></div>;\r\n  // }\r\n\r\n  // 댓글 작성\r\n\r\n  // 페이지 이동\r\n  const navigate = useNavigate();\r\n  const MoveToList = () => {\r\n    navigate(`/free`);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <FreeDetailsPageStyle>\r\n        <FreeHeader>\r\n          <p>자유게시판</p>\r\n          <GoToListBt onClick={MoveToList}></GoToListBt>\r\n        </FreeHeader>\r\n\r\n        {contentData.map(item => (\r\n          <FreeDetailsMain key={item.title}>\r\n            <div style={{ width: \"1110px\" }}>\r\n              <TitleSection>\r\n                <h1>{item.title}</h1>\r\n                <h2>{item.date}</h2>\r\n              </TitleSection>\r\n\r\n              <ContentSection>\r\n                <div>\r\n                  <img src={`/images/kong.jpg`} alt=\"업로드이미지1\" />\r\n                  <img src={`/images/kong.jpg`} alt=\"업로드이미지2\" />\r\n                  <img src={`/images/kong.jpg`} alt=\"업로드이미지3\" />\r\n                </div>\r\n                <p>{item.content}</p>\r\n              </ContentSection>\r\n\r\n              <ReviewSection>\r\n                <h1>댓글 {item.reviews.length}</h1>\r\n                <ReviewRegister>\r\n                  <p>\r\n                    저작권 등 다른 사람의 권리를 침해하거나 명예를 훼손하는\r\n                    게시물은 이용약관 및 관련 법률에 의해 제재를 받을 수\r\n                    있습니다.\r\n                    <br />\r\n                    건전한 토론 문화와 양질의 댓글 문화를 위해, 타인에게\r\n                    불쾌감을 주는 욕설 또는 특정 계층/민족, 종교 등을 비하하는\r\n                    단어들은 표시가 제한됩니다.\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"end\",\r\n                    }}\r\n                  >\r\n                    <textarea\r\n                      maxLength={200}\r\n                      placeholder=\"댓글을 입력해주세요\"\r\n                      onChange={e => {\r\n                        const inputText = e.target.value;\r\n                        const inputLength = inputText.length;\r\n                        const maxLength = 200;\r\n                        const counterText = `${inputLength}/${maxLength}`;\r\n\r\n                        // 입력된 글자수와 최대 글자수를 표시하는 부분\r\n                        document.getElementById(\"counter\").innerText =\r\n                          counterText;\r\n                      }}\r\n                    />\r\n                    <span id=\"counter\">0/200</span>\r\n                    <button>등록</button>\r\n                  </div>\r\n                </ReviewRegister>\r\n\r\n                {item.reviews.map(listItem => (\r\n                  <ReviewList key={listItem.text}>\r\n                    <img src={`/images/kong.jpg`} alt=\"유저이미지\" />\r\n                    <div>\r\n                      <h1>{listItem.writer}</h1>\r\n                      <p>{listItem.text}</p>\r\n                    </div>\r\n                  </ReviewList>\r\n                ))}\r\n                <MoreBt>\r\n                  <img src=\"/images/free/bt_more.svg\" />\r\n                </MoreBt>\r\n              </ReviewSection>\r\n            </div>\r\n\r\n            <SideSection>\r\n              <WriterSection>\r\n                <img src={`/images/kong.jpg`} alt=\"작성자 이미지\" />\r\n                <h1>바보준서</h1>\r\n              </WriterSection>\r\n              <ContentState>\r\n                <h1>댓글</h1>\r\n              </ContentState>\r\n              <ContentState>\r\n                <h1>좋아요</h1>\r\n              </ContentState>\r\n              <ContentState>\r\n                <h1>조회수</h1>\r\n              </ContentState>\r\n            </SideSection>\r\n          </FreeDetailsMain>\r\n        ))}\r\n      </FreeDetailsPageStyle>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FreeDetailsPage;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FreePageStyle = styled.div`\r\n  width: 1260px;\r\n  margin: 0 auto;\r\n`;\r\nexport const FreeHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #2c39b5;\r\n  padding-bottom: 17px;\r\n  p {\r\n    color: #000;\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const SearchSection = styled.div`\r\n  display: flex;\r\n  width: 330px;\r\n  height: 35px;\r\n  border: 1px solid #bebebe;\r\n  select {\r\n    width: 100px;\r\n    border: none;\r\n    border-right: 1px solid #bebebe;\r\n  }\r\n`;\r\nexport const FreeSearchForm = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 230px;\r\n  height: 35px;\r\n  padding: 0 10px;\r\n  /* border: 1px solid #BEBEBE; */\r\n  input {\r\n    border: none;\r\n    width: 180px;\r\n    height: 30px;\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n  }\r\n  button {\r\n    width: 16px;\r\n    height: 16px;\r\n    background-image: url(\"/images/free/bt_search.svg\");\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const FreeMain = styled.div`\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  th {\r\n    height: 50px;\r\n    border-bottom: 1px solid #bebebe;\r\n    text-align: center;\r\n    background: #e4e7ff;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n  }\r\n  td {\r\n    height: 60px;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #bebebe;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    background: #fff;\r\n  }\r\n`;\r\n\r\nexport const SortWrap = styled.div`\r\n  margin-top: 25px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 10px;\r\n  button {\r\n    border: none;\r\n    background: transparent;\r\n    font-size: 15px;\r\n    color: #777;\r\n    cursor: pointer;\r\n  }\r\n  img {\r\n    width: 2px;\r\n    height: 15px;\r\n  }\r\n`;\r\n\r\nexport const BtSection = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n  button {\r\n    width: 150px;\r\n    height: 40px;\r\n    background: #2c39b5;\r\n    border: none;\r\n\r\n    color: #fff;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const PaginationContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n`;\r\nexport const PaginationButton = styled.button`\r\n  padding: 5px 10px;\r\n  font-size: 16px;\r\n  margin-right: 10px;\r\n  background-color: #ffffff;\r\n  border: none;\r\n  cursor: pointer;\r\n  &.active {\r\n    font-weight: bold;\r\n    background-color: #ffffff;\r\n    color: #fff;\r\n    background-color: #ffd4d4;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #ffd4d4;\r\n  }\r\n\r\n  &.next-page,\r\n  &.last-page {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FreeRegisterPageStyle = styled.div`\r\n  width: 1260px;\r\n  margin: 0 auto;\r\n`;\r\nexport const GoToListBt = styled.button`\r\n  width: 94px;\r\n  height: 30px;\r\n  background-image: url(\"/images/free/goToList.svg\");\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nexport const FreeRegisterMain = styled.div`\r\n  margin-top: 20px;\r\n  margin-bottom: 50px;\r\n  input {\r\n    width: 1260px;\r\n    height: 40px;\r\n    border: 1px solid #d9d9d9;\r\n    margin-bottom: 30px;\r\n    padding-left: 10px;\r\n\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./cookieUtil\";\r\nimport { SERVER_URL } from \"../api/config\";\r\n\r\nexport const jwtAxios = axios.create();\r\n\r\nconst beforeReq = config => {\r\n  // console.log(\"1. 요청전 전달\", config);\r\n  // console.log(\"2. 쿠키로 토큰가져오기\");\r\n  const memberInfo = getCookie(\"member\");\r\n\r\n  if (!memberInfo) {\r\n    // console.log(\"쿠키 정보 없네요.\");\r\n    return Promise.reject({ response: { data: { error: \"Login하세요.\" } } });\r\n  }\r\n  // console.log(\"3. 쿠키에서 토큰 정보를 뜯는다.\");\r\n  const { accessToken } = memberInfo;\r\n  // console.log(\"4. 엑세스토큰 정보\", accessToken);\r\n  config.headers.Authorization = `Bearer ${accessToken}`;\r\n  return config;\r\n};\r\n\r\nconst requestFail = error => {\r\n  // console.log(\"요청후 실패시\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst refreshJWT = async (accessToken, refreshToken) => {\r\n  const host = SERVER_URL;\r\n  const header = { headers: { Authorization: `Bearer ${accessToken}` } };\r\n  const res = await axios.get(\r\n    `${host}/api/user/refresh-token?refreshToken=${refreshToken}`,\r\n    header,\r\n  );\r\n  // console.log(\"1. refreshToken 토큰 요청\");\r\n  // console.log(\"2. 백엔드에서 새로 준 값\", res.data);\r\n  return res.data;\r\n};\r\n\r\nconst beforeRes = async res => {\r\n  // console.log(\"Response 전처리\", res);\r\n  const data = res.data;\r\n  // console.log(\"1. Response 오기전 서버 전달해준 데이터, data\");\r\n  if (data && data.error === \"ERROR_ACCESS_TOKEN\") {\r\n    // console.log(\"2. 일반적 오류가 아닌 엑세스 토큰 에러입니다.\");\r\n    // console.log(\"3. 새로운 토큰을 요청해야 합니다.\");\r\n    // console.log(\"4. 쿠키에 있는 정보를 읽어서 다시 시도합니다.\");\r\n    const memberInfo = getCookie(\"member\");\r\n    // console.log(\"5. 쿠키 토큰 정보 AccessToken\", memberInfo.accessToken);\r\n    // console.log(\"6. 쿠키 토큰 정보 RefreshToken\", memberInfo.refreshToken);\r\n    // console.log(\"7. 위의 정보로 새로운 토큰을 요청합니다.\");\r\n    const result = await refreshJWT(\r\n      memberInfo.accessToken,\r\n      memberInfo.refreshToken,\r\n    );\r\n    // console.log(\"8. 요청 이후 되돌아와서 새로운 정보로 쿠키를 업데이트\");\r\n    (memberInfo.accessToken = result.accessToken),\r\n      (memberInfo.refreshToken = result.refreshToken),\r\n      setCookie(\"member\", JSON.stringify(memberInfo));\r\n\r\n    // console.log(\"9. 데이터 요청하던 API 재요청\");\r\n    const originalRequest = res.config;\r\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`;\r\n    return await axios(originalRequest);\r\n  }\r\n  return res;\r\n};\r\n\r\nconst responseFail = error => {\r\n  // console.log(\"Response Fail Err\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\njwtAxios.interceptors.request.use(beforeReq, requestFail);\r\njwtAxios.interceptors.response.use(beforeRes, responseFail);\r\n"],"names":["getFreeList","async","sendData","_ref","url","concat","SERVER_URL","page","search","type","axios","get","data","error","console","log","FreeDetailsPageStyle","styled","div","_templateObject","_taggedTemplateLiteral","FreeDetailsMain","_templateObject2","TitleSection","_templateObject3","ContentSection","_templateObject4","ReviewSection","_templateObject5","ReviewRegister","_templateObject6","ReviewList","_templateObject7","MoreBt","_templateObject8","SideSection","_templateObject9","WriterSection","_templateObject10","ContentState","_templateObject11","contentData","title","content","date","reviews","writer","text","FreeDetailsPage","navigate","useNavigate","_jsx","Layout","children","_jsxs","FreeHeader","GoToListBt","onClick","MoveToList","map","item","style","width","src","alt","length","display","justifyContent","alignItems","maxLength","placeholder","onChange","e","inputLength","target","value","counterText","document","getElementById","innerText","id","listItem","FreePageStyle","SearchSection","FreeSearchForm","FreeMain","SortWrap","BtSection","PaginationContainer","PaginationButton","button","FreeRegisterPageStyle","FreeRegisterMain","jwtAxios","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","response","accessToken","headers","Authorization","res","result","refreshToken","host","header","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}