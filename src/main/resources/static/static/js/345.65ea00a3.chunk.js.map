{"version":3,"file":"static/js/345.65ea00a3.chunk.js","mappings":"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","sources":["components/joinpopup/JoinPopUp.js","components/login/IdFind.js","components/login/PwFind.js","pages/login/LoginPage.js","styles/join/JoinPageStyle.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nexport const ModalBackground = styled.div`\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground: rgba(0, 0, 0, 0.5);\r\nz-index: 999;\r\n`\r\n\r\nconst JoinPopUp = ({ txt, onConfirm }) => {\r\n  const JoinPopUp = styled.div`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 1000;\r\n\r\n    width: 300px;\r\n    height: 180px;\r\n    display: flex;\r\n\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 30px;\r\n\r\n    border-radius: 10px;\r\n    border: 1px solid #2c39b5;\r\n    background: #fff;\r\n    b {\r\n      color: #000;\r\n      text-align: center;\r\n      font-size: 20px;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      line-height: normal;\r\n    }\r\n    button {\r\n      width: 100px;\r\n      height: 50px;\r\n      border-radius: 5px;\r\n      border: none;\r\n      background: #2c39b5;\r\n      cursor: pointer;\r\n      color: #fff;\r\n      font-size: 20px;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      line-height: normal;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <JoinPopUp>\r\n      <b>{txt}</b>\r\n      <button onClick={onConfirm}>확인</button>\r\n    </JoinPopUp>\r\n  );\r\n};\r\n\r\nexport default JoinPopUp;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  IdBox,\r\n  LoginBox,\r\n  Logo,\r\n  LogoZone,\r\n} from \"../../styles/login/LoginPageStyle\";\r\nimport { BtSection, CancelBt, SaveBt } from \"../../styles/join/JoinPageStyle\";\r\nimport styled from \"@emotion/styled\";\r\nimport { idPost } from \"../../api/login/login_api\";\r\n\r\nconst IdFindStyle = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 1000;\r\n\r\n  width: 500px;\r\n  height: 460px;\r\n  background: #fff;\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst IdFind = ({ closeModal }) => {\r\n  const [userNum, setUserNum] = useState(\"\");\r\n  const [userList, setUserList] = useState({ uid: \"\", iauth: 0 });\r\n  // useEffect(() => {\r\n  //   idPost(phone, uid, userList)\r\n  // }, [])\r\n\r\n  //  전화번호 필드 바꾸기\r\n  // const handleChange = e => {\r\n  //   setUserNum(e.target.value);\r\n  // };\r\n\r\n  const [confirmClick, setConfirmClick] = useState(false);\r\n  const loginUserId = () => {\r\n    setConfirmClick(true);\r\n    const obj = {\r\n      phone: userNum,\r\n    };\r\n    idPost(obj, setUserList);\r\n  };\r\n\r\n  // 상태에 따라 문구 바꾸기\r\n  let content;\r\nif (confirmClick) {\r\n  if (userList.uid) {\r\n    content = (\r\n      <p>\r\n        고객님의 아이디입니다. <br />\r\n      </p>\r\n    );\r\n  } else {\r\n    content = (\r\n      <p style={{ color: \"red\" }}>\r\n        휴대폰 번호가 잘못 입력되었습니다.\r\n        <br />\r\n        다시 입력해주세요.\r\n      </p>\r\n    );\r\n  }\r\n} else {\r\n  content = (\r\n    <p>\r\n      아이디를 잊으셨나요? <br />\r\n      휴대폰 번호를 입력해 주세요.\r\n    </p>\r\n  );\r\n}\r\n\r\n\r\n  return (\r\n    <IdFindStyle>\r\n      <LogoZone>\r\n        <Logo src=\"/images/logo.svg\" style={{ marginBottom: \"20px\" }} />\r\n      </LogoZone>\r\n      <LoginBox height={\"340px\"} mgbtm={\"50px\"}>\r\n      {content}\r\n\r\n        {!userList.uid && (\r\n          <IdBox\r\n            type=\"text\"\r\n            placeholder=\"휴대폰 번호 예) 010-0000-0000\"\r\n            value={userNum}\r\n            onChange={e => setUserNum(e.target.value)}\r\n          />\r\n        )}\r\n        {userList.uid && <IdBox value={`아이디: ${userList.uid}`} />}\r\n\r\n        <BtSection width={\"380px\"}>\r\n          <CancelBt onClick={closeModal}>닫기</CancelBt>\r\n          <SaveBt onClick={() => loginUserId(userNum)}>확인</SaveBt>\r\n          {/* 사용자 정보 : {userList.iauth} : {userList.uid} */}\r\n        </BtSection>\r\n      </LoginBox>\r\n    </IdFindStyle>\r\n  );\r\n};\r\n\r\nexport default IdFind;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\nimport { IdBox, LoginBox, Logo } from \"../../styles/login/LoginPageStyle\";\r\nimport { BtSection, CancelBt, SaveBt } from \"../../styles/join/JoinPageStyle\";\r\n\r\nconst PwFindStyle = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 1000;\r\n\r\n  width: 500px;\r\n  height: 500px;\r\n  background: #fff;\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst PwFind = ({ closeModal, onConfirm }) => {\r\n  return (\r\n    <PwFindStyle>\r\n      <Logo>로고</Logo>\r\n      <LoginBox height={\"380px\"} mgbtm={\"50px\"}>\r\n        <p>\r\n          비밀번호를 잊으셨나요? <br />\r\n          아이디와 휴대폰 번호를 입력해 주세요.\r\n        </p>\r\n        <IdBox type=\"text\" placeholder=\"아이디\" />\r\n        <IdBox type=\"text\" placeholder=\"휴대폰 번호\" />\r\n        <BtSection width={\"380px\"} mgtop={\"50px\"}>\r\n          <CancelBt onClick={closeModal}>취소</CancelBt>\r\n          <SaveBt onClick={onConfirm}>확인</SaveBt>\r\n        </BtSection>\r\n      </LoginBox>\r\n    </PwFindStyle>\r\n  );\r\n};\r\n\r\nexport default PwFind;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport { login, loginPostAsync } from \"../../slices/loginSlice\";\r\nimport {\r\n  DivisionLine,\r\n  IdBox,\r\n  LoginBox,\r\n  LoginBt,\r\n  LoginPageStyle,\r\n  Logo,\r\n  LogoZone,\r\n  PwBox,\r\n} from \"../../styles/login/LoginPageStyle\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport JoinPopUp, {\r\n  ModalBackground,\r\n} from \"../../components/joinpopup/JoinPopUp\";\r\nimport IdFind from \"../../components/login/IdFind\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PwFind from \"../../components/login/PwFind\";\r\n\r\nconst initState = {\r\n  uid: \"\",\r\n  upw: \"\",\r\n};\r\n\r\nconst LoginPage = () => {\r\n  const [loginParam, setLoginParam] = useState(initState);\r\n\r\n  const handleChange = e => {\r\n    loginParam[e.target.name] = e.target.value;\r\n    setLoginParam({ ...loginParam });\r\n  };\r\n\r\n  // 커스터훅 사용하기\r\n  const { doLogin, isLogin, moveToPath } = useCustomLogin();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleClick = async () => {\r\n    // dispatch(login(loginParam));\r\n    // dispatch(loginPostAsync({ loginParam, successFn, failFn, errorFn }));\r\n    try {\r\n      await doLogin({ loginParam, successFn, failFn, errorFn });\r\n    } catch (error) {\r\n      console.log(\"login error\");\r\n    }\r\n  };\r\n\r\n  // const errorFn = error => {\r\n  //   console.log(\"서버 에러\", error);\r\n  //   // openModal(\"비밀번호 에러\", \"비밀번호를 확인해주세요.\", closeModal);\r\n  //   setShowModal(true);\r\n  // };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 아이디 찾기 버튼 클릭\r\n  const [idFindModal, setIdFindModal] = useState(false);\r\n  const handleIdFind = () => {\r\n    setIdFindModal(true);\r\n  };\r\n  const closeIdFindModal = () => {\r\n    setIdFindModal(false);\r\n  };\r\n  // const ConfirmIdFindModal = _userNum => {\r\n  //   console.log(\"확인\", _userNum)\r\n  // }\r\n\r\n  // 비밀번호 변경 버튼 클릭\r\n  const [pwFindModal, setPwFindModal] = useState(false);\r\n  const handlePwFind = () => {\r\n    setPwFindModal(true);\r\n  };\r\n  const closePwFindModal = () => {\r\n    setPwFindModal(false);\r\n  };\r\n\r\n  // 회원가입 페이지 이동\r\n  const navigate = useNavigate();\r\n  const handleJoin = () => {\r\n    navigate(`/join/step_1`);\r\n  };\r\n\r\n  const successFn = result => {\r\n    console.log(\"성공\", result);\r\n    moveToPath(\"/\");\r\n  };\r\n\r\n  const failFn = result => {\r\n    console.log(\"실패\", result);\r\n    // alert(\"이메일 및 비밀번호 확인하세요.\");\r\n    setShowModal(true);\r\n  };\r\n\r\n  const [idFail, setIdFail] = useState(false);\r\n  const [pwFail, setPwFail] = useState(false);\r\n  const [loginFail, setLoginFail] = useState(false);\r\n  const errorFn = error => {\r\n    console.log(\"서버 에러입니다.\", error);\r\n\r\n    if (error.response && error.response.status === 456) {\r\n      setPwFail(true);\r\n    }\r\n    if (error.response && error.response.status === 455) {\r\n      setIdFail(true);\r\n    }\r\n\r\n    if (error.response && error.response.status === 400) {\r\n      setLoginFail(true);\r\n    }\r\n  };\r\n  const closeIdModal = () => {\r\n    setIdFail(false);\r\n  };\r\n  const closePwModal = () => {\r\n    setPwFail(false);\r\n  };\r\n  const closeLoginModal = () => {\r\n    setLoginFail(false);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {idFail && (\r\n        <>\r\n          <JoinPopUp txt=\"아이디를 확인해주세요.\" onConfirm={closeIdModal} />\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n      {pwFail && (\r\n        <>\r\n          <JoinPopUp txt=\"비밀번호를 확인해주세요.\" onConfirm={closePwModal} />\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n      {loginFail && (\r\n        <>\r\n          <JoinPopUp\r\n            txt=\"로그인에 실패하였습니다.\"\r\n            onConfirm={closeLoginModal}\r\n          />\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n      <LoginPageStyle>\r\n        <LogoZone>\r\n          <Logo src=\"/images/logo.svg\" />\r\n        </LogoZone>\r\n        <LoginBox>\r\n          <p>\r\n            <img src=\"/images/Billy.svg\" style={{ width: \"50px\" }} />\r\n            에 오신 것을 환영합니다!\r\n            <br />\r\n            로그인 하시면 더욱 다양한 상품들을 대여할 수 있습니다.\r\n          </p>\r\n          <IdBox\r\n            type=\"text\"\r\n            maxLength={15}\r\n            placeholder=\"아이디\"\r\n            name=\"uid\"\r\n            value={loginParam.uid}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n          <PwBox\r\n            type=\"password\"\r\n            maxLength={20}\r\n            placeholder=\"비밀번호\"\r\n            name=\"upw\"\r\n            value={loginParam.upw}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n          <LoginBt onClick={handleClick}>LOGIN</LoginBt>\r\n          {showModal && (\r\n            <>\r\n              <JoinPopUp\r\n                txt=\"아이디 또는 비밀번호를 확인해주세요.\"\r\n                onConfirm={closeModal}\r\n              />\r\n              <ModalBackground></ModalBackground>\r\n            </>\r\n          )}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              gap: \"50px\",\r\n              paddingRight: \"30px\",\r\n            }}\r\n          >\r\n            <li onClick={handleIdFind}>아이디 찾기</li>\r\n            {idFindModal && (\r\n              <>\r\n                <IdFind closeModal={closeIdFindModal} />\r\n                <ModalBackground></ModalBackground>\r\n              </>\r\n            )}\r\n            <DivisionLine></DivisionLine>\r\n            {/* <li onClick={handlePwFind}>비밀번호 변경</li>\r\n            {pwFindModal && (\r\n              <>\r\n                <PwFind closeModal={closePwFindModal} />\r\n                <div\r\n              style={{\r\n                position: \"fixed\",\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                background: \"rgba(0, 0, 0, 0.5)\",\r\n                zIndex: 999,\r\n              }}\r\n            ></div>\r\n              </>\r\n            )}\r\n            <DivisionLine></DivisionLine> */}\r\n            <li onClick={handleJoin}>회원가입</li>\r\n          </div>\r\n        </LoginBox>\r\n      </LoginPageStyle>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const JoinPageStyle = styled.div`\r\n  width: 1300px;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  /* background: skyblue; */\r\n`;\r\nexport const JoinBox = styled.form`\r\n  width: 980px;\r\n  /* height: 700px; */\r\n  border-radius: 10px;\r\n  border: 1px solid #2c39b5;\r\n  margin: ${props => props.margin ? props.margin : \"0 auto 100px\"};\r\n  padding: 60px 90px;\r\n`;\r\n\r\nexport const JoinElement = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 15px;\r\n  margin-bottom: 3px;\r\n`;\r\nexport const JoinElementTxt = styled.div`\r\n  display: flex;\r\n  p {\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n  span {\r\n    color: #ff0303;\r\n    font-size: 13px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const JoinElementInputBox = styled.div`\r\n  display: block;\r\n  text-align: start;\r\n`;\r\nexport const JoinElementInput = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 600px;\r\n  /* background: pink; */\r\n  img {\r\n    width: 180px;\r\n    height: 180px;\r\n    object-fit: cover;\r\n    border-radius: 5px;\r\n    border: 1px solid #2c39b5;\r\n  }\r\n  input {\r\n    border-radius: 5px;\r\n    border: 1px solid #2c39b5;\r\n\r\n    width: ${props => (props.width ? props.width : \"600px\")};\r\n    height: 36px;\r\n    padding-left: 15px;\r\n\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n  div {\r\n    border-radius: 5px;\r\n    border: 1px solid #2c39b5;\r\n\r\n    width: ${props => (props.width ? props.width : \"600px\")};\r\n    height: 36px;\r\n    padding-left: 15px;\r\n\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: ${props => (props.lineHight ? props.lineHight : \"normal\")};\r\n  }\r\n  /* input[type=\"file\"] {\r\n    width: 180px;\r\n    height: 180px;\r\n  } */\r\n  /* input[type=\"text\"] {\r\n    width: ${props => (props.width ? props.width : \"600px\")};\r\n    height: 36px;\r\n    padding-left: 15px;\r\n\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  } */\r\n`;\r\nexport const InputValid = styled.div`\r\n  color: red;\r\n  font-size: 15px;\r\n`;\r\nexport const ImageInputBt = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nexport const JoinAddressInput = styled.div`\r\n  display: block;\r\n  width: 600px;\r\n  text-align: start;\r\n  input {\r\n    border-radius: 5px;\r\n    border: 1px solid #2c39b5;\r\n    width: 600px;\r\n    height: 36px;\r\n    padding-left: 15px;\r\n    margin-top: 10px;\r\n\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const ShowPasswordBt =styled.button`\r\nbackground: transparent;\r\nborder: none;\r\nwidth: 0px;\r\nheight: 0px;\r\n`;\r\nexport const ShowPasswordImg = styled.img`\r\n  width: 20px !important;\r\n  height: 20px !important;\r\n  border: none !important;\r\n  transform: translate(-150%, 40%);\r\n  cursor: pointer;\r\n`;\r\nexport const ConfirmBt = styled.button`\r\n  width: 105px;\r\n  height: 36px;\r\n  border-radius: 5px;\r\n  border: 1px solid #2c39b5;\r\n  background: #2c39b5;\r\n  cursor: pointer;\r\n\r\n  color: #fff;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n`;\r\n// export const AddressBt = styled.button`\r\n//   width: 105px;\r\n//   height: 36px;\r\n//   border-radius: 5px;\r\n//   border: 1px solid #2c39b5;\r\n//   background: #fff;\r\n\r\n//   color: #777;\r\n//   font-size: 16px;\r\n//   font-style: normal;\r\n//   font-weight: 400;\r\n//   line-height: normal;\r\n// `;\r\nexport const BtSection = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  width: ${props => (props.width ? props.width : \"\")};\r\n  margin-top: ${props => (props.mgtop ? props.mgtop : \"60px\")};\r\n  margin-bottom: ${props => (props.mgbtm ? props.mgbtm : \"90px\")};\r\n`;\r\nexport const CancelBt = styled.button`\r\n  width: 150px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  background: #f2f2ff;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  color: #2c39b5;\r\n  font-size: 22px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n`;\r\nexport const SaveBt = styled(CancelBt)`\r\n  background: #2c39b5;\r\n  color: #fff;\r\n  cursor: pointer;\r\n`;\r\n"],"names":["ModalBackground","styled","div","_templateObject","_taggedTemplateLiteral","_ref","txt","onConfirm","JoinPopUp","_templateObject2","_jsxs","children","_jsx","onClick","IdFindStyle","closeModal","userNum","setUserNum","useState","userList","setUserList","uid","iauth","confirmClick","setConfirmClick","content","style","color","LogoZone","Logo","src","marginBottom","LoginBox","height","mgbtm","IdBox","type","placeholder","value","onChange","e","target","concat","BtSection","width","CancelBt","SaveBt","loginUserId","obj","phone","idPost","initState","upw","LoginPage","loginParam","setLoginParam","handleChange","name","doLogin","isLogin","moveToPath","useCustomLogin","showModal","setShowModal","useDispatch","idFindModal","setIdFindModal","pwFindModal","setPwFindModal","navigate","useNavigate","successFn","result","console","log","failFn","idFail","setIdFail","pwFail","setPwFail","loginFail","setLoginFail","errorFn","error","response","status","Layout","_Fragment","closeIdModal","closePwModal","closeLoginModal","LoginPageStyle","maxLength","PwBox","LoginBt","async","display","justifyContent","gap","paddingRight","handleIdFind","IdFind","closeIdFindModal","DivisionLine","handleJoin","JoinPageStyle","JoinBox","form","props","margin","JoinElement","_templateObject3","JoinElementTxt","_templateObject4","JoinElementInputBox","_templateObject5","JoinElementInput","_templateObject6","lineHight","InputValid","_templateObject7","ImageInputBt","button","_templateObject8","JoinAddressInput","_templateObject9","ShowPasswordBt","_templateObject10","ShowPasswordImg","img","_templateObject11","ConfirmBt","_templateObject12","_templateObject13","mgtop","_templateObject14","_templateObject15"],"sourceRoot":""}