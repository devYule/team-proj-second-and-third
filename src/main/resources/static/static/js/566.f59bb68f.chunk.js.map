{"version":3,"file":"static/js/566.f59bb68f.chunk.js","mappings":"4MAKO,MAAMA,EAAcC,UAOpB,IAP2B,KAChCC,EAAI,OACJC,EAAM,KACNC,EAAI,KACJC,EAAI,YACJC,EAAW,cACXC,GACDC,EACC,IACE,IAAIC,EAAG,GAAAC,OAAMC,EAAAA,EAAU,oBAAAD,OAAmBR,GACtCC,IACFM,GAAG,WAAAC,OAAeP,IAEhBC,IACFK,GAAG,SAAAC,OAAaN,IAEdC,IACFI,GAAG,SAAAC,OAAaL,IAGlB,MAAMO,QAAYC,EAAAA,EAASC,IAAIL,GAC/BH,EAAY,IAAIM,EAAIG,KAAKC,YACzBT,EAAcK,EAAIG,KAAKE,gBACzB,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,GAIWG,EAAcpB,UACzB,IACE,MAAMQ,EAAG,GAAAC,OAAMC,EAAAA,EAAU,eAAAD,OAAcY,GAGvC,aADkBC,EAAAA,EAAMT,IAAIL,EAE9B,CAAE,MAAOS,GACPC,QAAQC,IAAIF,EACd,GAIWM,EAAUvB,UACrB,IACE,MAAMQ,EAAG,GAAAC,OAAMC,EAAAA,EAAU,oBAAAD,OAAmBY,GAG5C,aADkBT,EAAAA,EAASC,IAAIL,EAEjC,CAAE,MAAOS,GACPC,QAAQC,IAAIF,EACd,GAIWO,EAAexB,UAAoB,IAAb,IAAEyB,GAAKC,EACxC,IACE,MAAMC,EAAS,CAAEC,QAAS,CAAE,eAAgB,wBAEtCpB,EAAG,GAAAC,OAAMC,EAAAA,EAAU,cAEzB,aADkBE,EAAAA,EAASiB,KAAKrB,EAAKiB,EAAKE,EAE5C,CAAE,MAAOV,GACPC,QAAQC,IAAIF,EACd,GAIWa,EAAc9B,UAAoB,IAAb,IAAEyB,GAAKM,EACvC,IACE,MAAMJ,EAAS,CAAEC,QAAS,CAAE,eAAgB,wBAEtCpB,EAAG,GAAAC,OAAMC,EAAAA,EAAU,cAEzB,aADkBE,EAAAA,EAASoB,IAAIxB,EAAKiB,EAAKE,EAE3C,CAAE,MAAOV,GACPC,QAAQC,IAAIF,EACd,GAKWgB,EAAiBjC,UAC5B,IACE,MAAMQ,EAAG,GAAAC,OAAMC,EAAAA,EAAU,eAAAD,OAAcY,GAGvC,aADkBT,EAAAA,EAASsB,OAAO1B,EAEpC,CAAE,MAAOS,GACPC,QAAQC,IAAIF,EACd,E,0FC1FK,MAAMkB,EAAOC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAOjBC,EAAcJ,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uJASxBG,EAAaN,EAAAA,EAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+TAcrBK,EAAAA,EAAOC,MAAMC,MAIfC,EAAQX,EAAAA,EAAOY,OAAMC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kKAUrBW,EAAOd,EAAAA,EAAOY,OAAMG,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,yKAWpBa,EAAYhB,EAAAA,EAAOY,OAAMK,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,sKAQzBe,EAAUlB,EAAAA,EAAOY,OAAMO,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,qKAUvBiB,EAAOpB,EAAAA,EAAOY,OAAMS,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,mK,uBC9D1B,MAAMmB,EAAUnD,IAAwC,IAAvC,gBAAEoD,EAAe,aAAEC,GAAcrD,EASvD,OACEsD,EAAAA,EAAAA,KAAC1B,EAAI,CAAA2B,UACHD,EAAAA,EAAAA,KAACrB,EAAW,CAAAsB,UACVC,EAAAA,EAAAA,MAACrB,EAAU,CAAAoB,SAAA,EACTD,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAG,SAAQH,UACfC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAACd,EAAK,KACNc,EAAAA,EAAAA,KAAA,KAAAC,SAAG,uBAGPD,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAG,IAAGH,UACVC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAACX,EAAI,KACLW,EAAAA,EAAAA,KAAA,KAAAC,SAAG,uBAGPD,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAG,QAAOH,UACdC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAACT,EAAS,KACVS,EAAAA,EAAAA,KAAA,KAAAC,SAAG,6BAGPD,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CACHC,GAAG,MACHC,QAASA,KAhCKC,QAiCI,qBAhCtBR,GAAmBC,IACrBD,EAAgBQ,GAChBP,EAAaO,IAEfC,eAAeC,QAAQ,eAAgBF,EA4BP,EACtBL,UAEFC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAACP,EAAO,KACRO,EAAAA,EAAAA,KAAA,KAAAC,SAAG,aAGPD,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAG,YAAWH,UAClBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAACL,EAAI,KACLK,EAAAA,EAAAA,KAAA,KAAAC,SAAG,wCAKN,C,uHC9DJ,MAAMQ,EAAuBlC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+CAKjCgC,EAAkBnC,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4BAG5BiC,EAAepC,EAAAA,EAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+ZAsBzBkC,EAAiBrC,EAAAA,EAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kXAoB3BmC,EAAgBtC,EAAAA,EAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,oOAa1BoC,EAAiBvC,EAAAA,EAAOC,IAAGgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+5BAkD3BqC,EAAaxC,EAAAA,EAAOC,IAAGkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,irBAsCvBsC,EAAmBzC,EAAAA,EAAOC,IAAGoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,unBAkC7BuC,EAAS1C,EAAAA,EAAOC,IAAG0C,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,iGAQnByC,EAAc5C,EAAAA,EAAOC,IAAG4C,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,sFAMxB2C,EAAgB9C,EAAAA,EAAOC,IAAG8C,IAAAA,GAAA5C,EAAAA,EAAAA,GAAA,yRAmB1B6C,EAAehD,EAAAA,EAAOC,IAAGgD,IAAAA,GAAA9C,EAAAA,EAAAA,GAAA,+bA0BzB+C,EAAgBlD,EAAAA,EAAOC,IAAGkD,IAAAA,GAAAhD,EAAAA,EAAAA,GAAA,8YAsB1BiD,GAAkBpD,EAAAA,EAAAA,GAAOkD,EAAPlD,CAAqBqD,IAAAA,GAAAlD,EAAAA,EAAAA,GAAA,qDAKvCmD,EAAYtD,EAAAA,EAAOC,IAAGsD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,6S,uFC9Q5B,MAAMqD,EAAkBrF,IAAoD,IAAnD,OAAEsF,EAAM,cAAEC,EAAa,SAAEC,EAAQ,SAAEC,GAAUzF,EACzE,MAAM0F,EAAgBJ,IAAWC,EAEjC,OACEjC,EAAAA,EAAAA,KAAAqC,EAAAA,SAAA,CAAApC,SACGmC,IACClC,EAAAA,EAAAA,MAACuB,EAAa,CAAAxB,SAAA,EACZD,EAAAA,EAAAA,KAAA,UACEK,QAAS8B,EACTG,MAAO,CAAEC,WAAY,OAAQvD,MAAO,WAAYiB,SACjD,kBAGDD,EAAAA,EAAAA,KAAA,UACEK,QAAS6B,EACTI,MAAO,CAAEC,WAAY,UAAWvD,MAAO,QAASiB,SACjD,qBAKJ,ECrBIuC,EAAoB9F,IAAoD,IAAnD,OAAEsF,EAAM,cAAEC,EAAa,SAAEC,EAAQ,SAAEC,GAAUzF,EAC3E,MAAM0F,EAAgBJ,IAAWC,EAEjC,OACEjC,EAAAA,EAAAA,KAAAqC,EAAAA,SAAA,CAAApC,SACGmC,IACClC,EAAAA,EAAAA,MAACyB,EAAe,CAAA1B,SAAA,EACdD,EAAAA,EAAAA,KAAA,UACEK,QAAS8B,EACTG,MAAO,CAAEC,WAAY,OAAQvD,MAAO,WAAYiB,SACjD,kBAGDD,EAAAA,EAAAA,KAAA,UACEK,QAAS6B,EACTI,MAAO,CAAEC,WAAY,UAAWvD,MAAO,QAASiB,SACjD,qBAKJ,E,cCgBT,MCuUA,EA/UwBwC,KACtB,MAAMC,GAAQC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,WAAWH,SAE7CI,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,MACnCC,EAAe,IAAIC,gBAAgBC,SAAS9G,QAC5CmB,EAAS4F,SAASH,EAAajG,IAAI,YAEzCqG,EAAAA,EAAAA,YAAU,KACUlH,WAChB,IACE,MAAMW,QAAYS,EAAAA,EAAAA,IAAYC,GAC9BuF,EAAYjG,EAAIG,MAChBqG,EAAQxG,EAAIG,KAAKsG,QACnB,CAAE,MAAOnG,GACPC,QAAQD,MAAM,+BAAgCA,EAChD,GAGFoG,EAAW,GACV,CAAChG,IAGJ,MAkBOiG,EAAMH,IAAWN,EAAAA,EAAAA,UAAS,MAC3BU,EAAkBvH,gBAChBuB,EAAAA,EAAAA,IAAQF,GACdmG,OAAOR,SAASS,QAAQ,GAInBC,EAASC,IAAcd,EAAAA,EAAAA,UAAS,KAChCe,EAAYC,IAAiBhB,EAAAA,EAAAA,UAAS,KAE7CK,EAAAA,EAAAA,YAAU,KACR,MAAMY,EAAc9H,eC/EGA,OAAOqB,EAAQqG,KACxC,IACE,MAAMlH,EAAG,GAAAC,OAAMC,EAAAA,EAAU,sBAGzB,aADkBE,EAAAA,EAASiB,KAAKrB,EAAK,CAAEa,SAAQqG,WAEjD,CAAE,MAAOzG,GACPC,QAAQC,IAAIF,EACd,GDwEU8G,CAAY1G,EAAQqG,GAC1BF,OAAOR,SAASS,QAAQ,EAEV,KAAZC,GACFI,GACF,GACC,CAACJ,IAGJ,MAAOM,EAAYC,IAAiBpB,EAAAA,EAAAA,UAAS,CAAC,IACvCqB,EAAeC,IAAoBtB,EAAAA,EAAAA,UAAS,CACjDuB,cAAe,GACfV,QAAS,MAEJW,EAAkBC,IAAuBzB,EAAAA,EAAAA,UAAS,KAazDK,EAAAA,EAAAA,YAAU,KACR,MAAMY,EAAc9H,eChGIA,OAAOoI,EAAcV,KAC/C,IACE,MAAMlH,EAAG,GAAAC,OAAMC,EAAAA,EAAU,sBAGzB,aADkBE,EAAAA,EAAS2H,MAAM/H,EAAK,CAAE4H,gBAAeV,WAEzD,CAAE,MAAOzG,GACPC,QAAQC,IAAIF,EACd,GDyFUuH,CAAaN,EAAcE,cAAeF,EAAcR,SAC9DF,OAAOR,SAASS,QAAQ,EAEI,KAA1BS,EAAcR,SAChBI,GACF,GACC,CAACI,IAGJ,MAAMO,EAAsBzI,UACJwH,OAAOkB,QAAQ,4DC/FZ1I,WAC3B,IACE,MAAMQ,EAAG,GAAAC,OAAMC,EAAAA,EAAU,uBAAAD,OAAsB2H,GAG/C,aADkBxH,EAAAA,EAASsB,OAAO1B,EAEpC,CAAE,MAAOS,GACPC,QAAQC,IAAIF,EACd,GDyFU0H,CAAcP,GACpBZ,OAAOR,SAASS,SAClB,EAIImB,EAAaC,IACjB,MAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAOF,EAAKG,cACZC,EAAQC,OAAOL,EAAKM,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAMH,OAAOL,EAAKS,WAAWF,SAAS,EAAG,KAEzCG,EAAOL,OAAOL,EAAKW,YAAYJ,SAAS,EAAG,KAC3CK,EAASP,OAAOL,EAAKa,cAAcN,SAAS,EAAG,KAC/CO,EAAST,OAAOL,EAAKe,cAAcR,SAAS,EAAG,KAErD,MAAO,CACLP,KAAK,GAADrI,OAAKuI,EAAI,KAAAvI,OAAIyI,EAAK,KAAAzI,OAAI6I,GAC1BQ,KAAK,GAADrJ,OAAK+I,EAAI,KAAA/I,OAAIiJ,EAAM,KAAAjJ,OAAImJ,GAC5B,EAGH,IAAId,EACAgB,EACJ,GAAInD,GAAYA,EAASoD,UAAW,CAClC,MAAMC,EAASpB,EAAWjC,EAASoD,WACnCjB,EAAOkB,EAAOlB,KACdgB,EAAOE,EAAOF,IAChB,CAGA,MAAO7J,EAAMgK,IAAWpD,EAAAA,EAAAA,UAAS,GAQ3BqD,GAAWC,EAAAA,EAAAA,MAKjB,OACEpG,EAAAA,EAAAA,MAACqG,EAAAA,EAAM,CAAAtG,SAAA,EACLD,EAAAA,EAAAA,KAACH,EAAAA,EAAO,KACRK,EAAAA,EAAAA,MAACO,EAAoB,CAAAR,SAAA,EACnBC,EAAAA,EAAAA,MAACsG,EAAAA,GAAU,CAAAvG,SAAA,EACTD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,oCACHD,EAAAA,EAAAA,KAACyG,EAAAA,GAAU,CAACpG,QAVDqG,KACjBL,EAAS,QAAQ,OAWZvD,IACC5C,EAAAA,EAAAA,MAACQ,EAAe,CAAAT,SAAA,EACdC,EAAAA,EAAAA,MAAA,OAAKoC,MAAO,CAAEqE,MAAO,UAAW1G,SAAA,EAC9BC,EAAAA,EAAAA,MAACS,EAAY,CAAAV,SAAA,EACXC,EAAAA,EAAAA,MAAA,OAAKoC,MAAO,CAAEqE,MAAO,SAAU1G,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,MAAAC,SAAK6C,EAAS8D,SACd1G,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CACGgF,EAAK,IAAEgB,SAGZjG,EAAAA,EAAAA,KAAC+B,EAAe,CACdC,OAAQc,EAASJ,MACjBT,cAAeS,EACfP,SAxIS0E,KACvBR,EAAS,uBAADzJ,OAAwBY,GAAS,EAwI3B0E,SApIS/F,UAEvB,GADsBwH,OAAOkB,QAAQ,qDAEnC,UACQzG,EAAAA,EAAAA,IAAeZ,GACrB6I,EAAS,QACX,CAAE,MAAOjJ,GACPC,QAAQC,IAAI,0BAA2BF,EACzC,CACF,QA+HU8C,EAAAA,EAAAA,MAACU,EAAc,CAAAX,SAAA,EACbD,EAAAA,EAAAA,KAAA,OAAAC,SACG6C,EAASgE,IAAIC,KAAI,CAACC,EAAMC,KACvBjH,EAAAA,EAAAA,KAAA,OAEEkH,IAAG,QAAAtK,OAAUoK,EAAKG,UAClBC,IAAI,wCAFCH,QAOXjH,EAAAA,EAAAA,KAAA,KAAAC,SAAI6C,EAASuE,YAEbnH,EAAAA,EAAAA,MAAC2B,EAAS,CAAA5B,SAAA,EACRD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,uBACHwD,GACCzD,EAAAA,EAAAA,KAAA,OACEkH,IAAI,6BACJ7G,QAASqD,KAGX1D,EAAAA,EAAAA,KAAA,OACEkH,IAAI,wBACJ7G,QAASqD,WAUjBxD,EAAAA,EAAAA,MAACW,EAAa,CAAAZ,SAAA,EACZC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,gBAAI6C,EAASwE,SAASC,WAC1BrH,EAAAA,EAAAA,MAACY,EAAc,CAAAb,SAAA,EACbC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,kUAIDD,EAAAA,EAAAA,KAAA,SAAM,0XAKRE,EAAAA,EAAAA,MAAA,OACEoC,MAAO,CACLkF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,OACZzH,SAAA,EAEFD,EAAAA,EAAAA,KAAA,YACE2H,UAAW,IACXC,YAAY,0DACZC,SAAUC,IACR,MAAMC,EAAYD,EAAEE,OAAOC,MACrBC,EAAcH,EAAUR,OAExBY,EAAW,GAAAvL,OAAMsL,EAAW,KAAAtL,OADhB,KAIlBwL,SAASC,eAAe,WAAWC,UACjCH,EAGFnE,EAAc+D,EAAU,KAG5B/H,EAAAA,EAAAA,KAAA,QAAMuI,GAAG,UAAStI,SAAC,WACnBD,EAAAA,EAAAA,KAAA,UAAQK,QAASA,IAAMyD,EAAWC,GAAY9D,SAAC,uBAIlD6C,EAASwE,SACPkB,MAAM,EAjHG,EAiHApM,GACT2K,KAAI0B,IACH,MAAM,KAAExD,EAAI,KAAEgB,GAASlB,EAAW0D,EAASvC,WAC3C,OACEhG,EAAAA,EAAAA,MAACa,EAAU,CAAAd,SAAA,EACTD,EAAAA,EAAAA,KAAA,OACEkH,IAAG,QAAAtK,OAAU6L,EAASC,SACtBtB,IAAI,oCAENlH,EAAAA,EAAAA,MAAA,OAAKoC,MAAO,CAAEqE,MAAO,SAAU1G,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,MAAAC,SAAKwI,EAASE,QACd3I,EAAAA,EAAAA,KAAA,KAAAC,SAAIwI,EAAS5E,UACZM,EAAWsE,EAASlE,iBACnBrE,EAAAA,EAAAA,MAACc,EAAgB,CAAAf,SAAA,EACfD,EAAAA,EAAAA,KAAA,YACE2H,UAAW,IACXC,YAAY,6EACZC,SAAUC,GACRrD,EAAoBqD,EAAEE,OAAOC,UAGjCjI,EAAAA,EAAAA,KAAA,UACEK,QAASA,IAzLPuI,EAACrE,EAAeV,KAC9CS,EAAiB,CAAEC,gBAAeV,WAAU,EAyLd+E,CACEH,EAASlE,cACTC,GAEHvE,SACF,wBAMPC,EAAAA,EAAAA,MAAA,OAAKoC,MAAO,CAAEuG,UAAW,OAAQ5I,SAAA,EAC/BD,EAAAA,EAAAA,KAAA,MAAAC,SAAKgF,KACLjF,EAAAA,EAAAA,KAAA,MAAAC,SAAKgG,KACLjG,EAAAA,EAAAA,KAACwC,EAAiB,CAChBR,OAAQyG,EAAS/F,MACjBT,cAAeS,EACfP,SAAUA,KACR2G,OAnNAvE,EAmNoBkE,EAASlE,mBAlNvDH,GAAc2E,IAAI,IACbA,EACH,CAACxE,IAAiBwE,EAAKxE,OAHCA,KAoND,EACDrC,SAAUA,IACR0C,EAAoB6D,EAASlE,sBAxCpBkE,EAASO,KA4Cb,IAGlBlG,EAASwE,SAASC,OApKP,EAoKgBnL,IAC1B4D,EAAAA,EAAAA,KAACiB,EAAM,CAACZ,QAnKM4I,KAC5B7C,GAAQ8C,GAAYA,EAAW,GAAE,EAkKoBjJ,UACrCD,EAAAA,EAAAA,KAAA,OAAKkH,IAAI,sCAMjBhH,EAAAA,EAAAA,MAACiB,EAAW,CAAAlB,SAAA,EACVC,EAAAA,EAAAA,MAACmB,EAAa,CAAApB,SAAA,EACZD,EAAAA,EAAAA,KAAA,OAAKkH,IAAG,QAAAtK,OAAUkG,EAAS4F,SAAWtB,IAAI,2CAC1CpH,EAAAA,EAAAA,KAAA,MAAAC,SAAK6C,EAAS6F,WAEhBzI,EAAAA,EAAAA,MAACqB,EAAY,CAAAtB,SAAA,EACXD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,kBACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAK6C,EAASwE,SAASC,aAEzBrH,EAAAA,EAAAA,MAACqB,EAAY,CAAAtB,SAAA,EACXD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,wBACJC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACGwD,GACCzD,EAAAA,EAAAA,KAAA,OACEkH,IAAI,6BACJ7G,QAASqD,KAGX1D,EAAAA,EAAAA,KAAA,OACEkH,IAAI,wBACJ7G,QAASqD,KAGb1D,EAAAA,EAAAA,KAAA,MAAAC,SAAK6C,EAASqG,wBAGlBjJ,EAAAA,EAAAA,MAACqB,EAAY,CAAAtB,SAAA,EACXD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,wBACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAK6C,EAASsG,qBAMjB,C,kCE3WN,MAAMrK,EAAS,CAEpBC,MAAO,CACLqK,QAAS,UACTC,KAAM,UACNC,KAAM,UACNtK,KAAM,UACNuK,KAAM,UACNC,KAAM,UACNC,KAAM,W,iJCNH,MAAMC,EAAgBpL,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+CAI1B8H,EAAajI,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mRAcvBkL,EAAgBrL,EAAAA,EAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yLAW1BmL,EAAiBtL,EAAAA,EAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,oeAyB3BoL,EAAWvL,EAAAA,EAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,6aAwBrBqL,EAAWxL,EAAAA,EAAOC,IAAGgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+TAoBrBsL,EAAYzL,EAAAA,EAAOC,IAAGkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,mPAgBtBuL,GAAiB1L,EAAAA,EAAAA,GAAO2L,EAAAA,EAAP3L,CAAkBqB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,mY,uGCnHzC,MAAMyL,EAAwB5L,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+CAIlC+H,EAAalI,EAAAA,EAAOY,OAAMP,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uIAO1B0L,EAAmB7L,EAAAA,EAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uiCAoD7B2L,EAAU9L,EAAAA,EAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,sbAsBpB4L,EAAW/L,EAAAA,EAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,+I","sources":["api/free/free_api.js","components/sideBarStyle.js","components/SideBar.js","styles/free/FreeDetailsPageStyle.js","components/free/UserBoardButton.js","components/free/UserCommentButton.js","components/free/FreeBoardLike.js","pages/free/FreeDetailsPage.js","api/free/comment_api.js","styles/CommonStyles.js","styles/free/FreePageStyle.js","styles/free/FreeRegisterPageStyle.js"],"sourcesContent":["import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\nimport { jwtAxios } from \"../../util/jwtUtil\";\n\n// FreePage 전체 게시글 호출\nexport const getFreeList = async ({\n  page,\n  search,\n  type,\n  sort,\n  setFreeList,\n  setFreeLength,\n}) => {\n  try {\n    let url = `${SERVER_URL}/api/board?page=${page}`;\n    if (search) {\n      url += `&search=${search}`;\n    }\n    if (type) {\n      url += `&type=${type}`;\n    }\n    if (sort) {\n      url += `&sort=${sort}`;\n    }\n\n    const res = await jwtAxios.get(url);\n    setFreeList([...res.data.boardList]);\n    setFreeLength(res.data.totalBoardCount);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// 게시글 DetailsPage\nexport const getFreeData = async iboard => {\n  try {\n    const url = `${SERVER_URL}/api/board/${iboard}`;\n\n    const res = await axios.get(url);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// 좋아요\nexport const getLike = async iboard => {\n  try {\n    const url = `${SERVER_URL}/api/board/like/${iboard}`;\n\n    const res = await jwtAxios.get(url);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// 게시글 등록\nexport const postFreeData = async ({ obj }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n\n    const url = `${SERVER_URL}/api/board`;\n    const res = await jwtAxios.post(url, obj, header);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// 게시글 수정\nexport const putFreeData = async ({ obj }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n\n    const url = `${SERVER_URL}/api/board`;\n    const res = await jwtAxios.put(url, obj, header);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n// 게시글 삭제\nexport const deleteFreeData = async iboard => {\n  try {\n    const url = `${SERVER_URL}/api/board/${iboard}`;\n\n    const res = await jwtAxios.delete(url);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from \"@emotion/styled\";\nimport { Common } from \"../styles/CommonStyles\";\n\nexport const Wrap = styled.div`\n  z-index: 9999;\n  position: fixed;\n  top: 300px;\n  right: 50px;\n`;\n\nexport const SideBarWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 70px;\n  height: 500px;\n  background-color: #eeeef1;\n  border-radius: 30px;\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 40px;\n  padding: 10px;\n  div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    p {\n      padding-top: 3px;\n      font-size: 1.4rem;\n      color: ${Common.color.p300};\n    }\n  }\n`;\nexport const Write = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/plus.svg\");\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\nexport const Chat = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/chat.svg\") center;\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const FreeBoard = styled.button`\n  width: 25px;\n  height: 25px;\n  background: url(\"/images/main/board.svg\") center;\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\nexport const Profile = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/profile.svg\");\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\nexport const Call = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/phone.svg\");\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport {\n  ButtonWrap,\n  Call,\n  Chat,\n  FreeBoard,\n  Like,\n  Profile,\n  SideBarWrap,\n  Wrap,\n  Write,\n} from \"./sideBarStyle\";\nimport { Link } from \"react-router-dom\";\n\nexport const SideBar = ({ setSelectedItem, setActiveBtn }) => {\n  const handleLinkClick = subItem => {\n    if (setSelectedItem && setActiveBtn) {\n      setSelectedItem(subItem);\n      setActiveBtn(subItem);\n    }\n    sessionStorage.setItem(\"selectedItem\", subItem);\n  };\n\n  return (\n    <Wrap>\n      <SideBarWrap>\n        <ButtonWrap>\n          <Link to=\"/write\">\n            <div>\n              <Write></Write>\n              <p>등록</p>\n            </div>\n          </Link>\n          <Link to=\"/\">\n            <div>\n              <Chat></Chat>\n              <p>채팅</p>\n            </div>\n          </Link>\n          <Link to=\"/free\">\n            <div>\n              <FreeBoard></FreeBoard>\n              <p>게시판</p>\n            </div>\n          </Link>\n          <Link\n            to=\"/my\"\n            onClick={() => {\n              handleLinkClick(\"대여중\");\n            }}\n          >\n            <div>\n              <Profile></Profile>\n              <p>MY</p>\n            </div>\n          </Link>\n          <Link to=\"/customer\">\n            <div>\n              <Call></Call>\n              <p>고객센터</p>\n            </div>\n          </Link>\n        </ButtonWrap>\n      </SideBarWrap>\n    </Wrap>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const FreeDetailsPageStyle = styled.div`\n  width: 1260px;\n  margin: 0 auto;\n`;\n\nexport const FreeDetailsMain = styled.div`\n  display: flex;\n`;\nexport const TitleSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 80px;\n  border-bottom: 1px solid #e4e7ff;\n  padding-top: 15px;\n  padding-left: 5px;\n  h1 {\n    color: #000;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  h2 {\n    color: #000;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\nexport const ContentSection = styled.div`\n  padding-top: 20px;\n  padding-left: 10px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #e4e7ff;\n  img {\n    width: 300px;\n    height: 300px;\n    margin-right: 65px;\n  }\n  p {\n    margin-top: 20px;\n    margin-bottom: 60px;\n    color: #000;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\nexport const ReviewSection = styled.div`\n  width: 1080px;\n  margin-bottom: 50px;\n  h1 {\n    margin-top: 10px;\n    margin-bottom: 15px;\n    color: #000;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\nexport const ReviewRegister = styled.div`\n  width: 1080px;\n  background: #f9f9f9;\n  border: 1px solid #d9d9d9;\n  margin-bottom: 30px;\n  p {\n    width: 1080px;\n    height: 80px;\n    padding-top: 15px;\n    padding-left: 20px;\n    border-bottom: 1px solid #d9d9d9;\n\n    color: #777;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  textarea {\n    width: 920px;\n    height: 70px;\n    resize: none;\n    background: #f9f9f9;\n    padding-left: 20px;\n    padding-top: 10px;\n    border: none;\n\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  span {\n    width: 30px;\n    padding-bottom: 10px;\n  }\n  button {\n    width: 100px;\n    height: 70px;\n    background: #2c39b5;\n    border: none;\n\n    color: #fff;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    cursor: pointer;\n  }\n`;\nexport const ReviewList = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #d9d9d9;\n  margin-bottom: 5px;\n  img {\n    margin-top: 10px;\n    width: 50px;\n    height: 50px;\n    margin-right: 10px;\n    border-radius: 100%;\n  }\n  h1 {\n    margin-top: 10px;\n    margin-bottom: 15px;\n\n    color: #000;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  p {\n    margin-bottom: 15px;\n\n    color: #777;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  h2 {\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\nexport const CommentModifyBox = styled.div`\n  width: 900px;\n  align-items: center;\n  margin-bottom: 7px;\n  padding: 5px;\n  border: 1px solid #e4e7ff;\n  textarea {\n    width: 820px;\n    height: 50px;\n    border: none;\n    resize: none;\n\n    color: #777;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  button {\n    width: 50px;\n    height: 30px;\n    margin-left: 10px;\n    border-radius: 5px;\n    border: 1px solid #2c39b5;\n    background: #fff;\n\n    font-size: 15px;\n    color: #2c39b5;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    cursor: pointer;\n  }\n`;\nexport const MoreBt = styled.div`\n  text-align: center;\n  img {\n    margin: 40px auto 0px;\n    cursor: pointer;\n  }\n`;\n\nexport const SideSection = styled.div`\n  width: 150px;\n  border: 1px solid #e4e7ff;\n  /* background: orange; */\n`;\n\nexport const WriterSection = styled.div`\n  background: #e4e7ff;\n  padding: 15px;\n\n  img {\n    width: 120px;\n    height: 120px;\n    border-radius: 5px;\n  }\n  h1 {\n    margin-top: 5px;\n    color: #000;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\n\nexport const ContentState = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 130px;\n  margin: 0 auto;\n  border-bottom: 1px solid #e4e7ff;\n  padding: 7px 10px;\n  h1 {\n    color: #000;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  div {\n    display: flex;\n    width: 40px;\n    justify-content: space-between;\n  }\n  img {\n    width: 18px;\n    height: 18px;\n    cursor: pointer;\n  }\n`;\n\nexport const BoardWriterBt = styled.div`\n  display: flex;\n  justify-content: end;\n  align-items: end;\n  text-align: end;\n  padding-right: 20px;\n  padding-bottom: 10px;\n  button {\n    width: 50px;\n    height: 25px;\n    margin-left: 10px;\n    border-radius: 5px;\n    border: 1px solid #2c39b5;\n\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    cursor: pointer;\n  }\n`;\n\nexport const CommentWriterBt = styled(BoardWriterBt)`\n  margin-top: 5px;\n  padding-right: 0px;\n`;\n\nexport const BoardLike = styled.div`\n  display: flex;\n  height: 30px;\n  justify-content: end;\n  align-items: center;\n  h1 {\n    margin-right: 10px;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  img {\n    width: 25px;\n    height: 25px;\n    cursor: pointer;\n  }\n`;\n","import { BoardWriterBt } from \"../../styles/free/FreeDetailsPageStyle\";\n\n// 로그인 유저 == 게시글 작성자\nexport const UserBoardButton = ({ userId, currentUserId, onDelete, onModify }) => {\n    const isCurrentUser = userId === currentUserId;\n  \n    return (\n      <>\n        {isCurrentUser && (\n          <BoardWriterBt>\n            <button\n              onClick={onModify}\n              style={{ background: \"#fff\", color: \"#2c39b5\" }}\n            >\n              수정\n            </button>\n            <button\n              onClick={onDelete}\n              style={{ background: \"#2c39b5\", color: \"#fff\" }}\n            >\n              삭제\n            </button>\n          </BoardWriterBt>\n        )}\n      </>\n    );\n  };","import { CommentWriterBt } from \"../../styles/free/FreeDetailsPageStyle\";\n\n// 로그인 유저 == 댓글 작성자\nexport const UserCommentButton = ({ userId, currentUserId, onDelete, onModify }) => {\n    const isCurrentUser = userId === currentUserId;\n  \n    return (\n      <>\n        {isCurrentUser && (\n          <CommentWriterBt>\n            <button\n              onClick={onModify}\n              style={{ background: \"#fff\", color: \"#2c39b5\" }}\n            >\n              수정\n            </button>\n            <button\n              onClick={onDelete}\n              style={{ background: \"#2c39b5\", color: \"#fff\" }}\n            >\n              삭제\n            </button>\n          </CommentWriterBt>\n        )}\n      </>\n    );\n  };","import React, { useEffect, useState } from \"react\";\nimport { getLike } from \"../../api/free/free_api\";\n\nfunction FreeBoardLike({ isLiked, iboard }) {\n  const [liked, setLiked] = useState(isLiked);\n\n  useEffect(() => {\n    setLiked(isLiked);\n  }, [isLiked]);\n  \n  const toggleLike = async (e) => {\n    try {\n      // 상태 업데이트를 이전 값에 의존하지 않도록 함수형 업데이트를 사용합니다.\n      e.stopPropagation()\n      setLiked(prevLiked => !prevLiked);\n\n      // 찜 상태에 따라 API를 호출하여 찜 기능을 처리합니다.\n      if (!liked) {\n        await getLike(iboard);\n        // console.log(\"Added to favorites\");\n      } else {\n        await getLike(iboard);\n        // console.log(\"Removed from favorites\");\n      }\n    } catch (error) {\n      // console.error(\"Error toggling like:\", error);\n    }\n  };\n\n  return (\n    <div onClick={toggleLike}>\n      {liked ? (\n        <img src=\"/images/details/like_full.svg\" alt=\"풀 하트\" />\n      ) : (\n        <img src=\"/images/details/like.svg\" alt=\"빈 하트\" />\n      )}\n    </div>\n  );\n}\n\nexport default FreeBoardLike;\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../layouts/Layout\";\nimport {\n  ContentSection,\n  ContentState,\n  FreeDetailsMain,\n  FreeDetailsPageStyle,\n  MoreBt,\n  ReviewList,\n  ReviewRegister,\n  ReviewSection,\n  SideSection,\n  TitleSection,\n  WriterSection,\n  CommentModifyBox,\n  BoardLike,\n} from \"../../styles/free/FreeDetailsPageStyle\";\nimport { FreeHeader } from \"../../styles/free/FreePageStyle\";\nimport { GoToListBt } from \"../../styles/free/FreeRegisterPageStyle\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { deleteFreeData, getFreeData, getLike } from \"../../api/free/free_api\";\nimport {\n  deleteComment,\n  patchComment,\n  postComment,\n} from \"../../api/free/comment_api\";\nimport { useSelector } from \"react-redux\";\nimport { UserBoardButton } from \"../../components/free/UserBoardButton\";\nimport { UserCommentButton } from \"../../components/free/UserCommentButton\";\nimport { SideBar } from \"../../components/SideBar\";\nimport FreeBoardLike from \"../../components/free/FreeBoardLike\";\n\nconst FreeDetailsPage = () => {\n  const iuser = useSelector(state => state.loginSlice.iuser);\n  // 데이터 연동(상세페이지)\n  const [freeData, setFreeData] = useState(null);\n  const searchParams = new URLSearchParams(location.search);\n  const iboard = parseInt(searchParams.get(\"iboard\"));\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await getFreeData(iboard);\n        setFreeData(res.data);\n        setLike(res.data.isLiked);\n      } catch (error) {\n        console.error(\"Error fetching product data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [iboard]);\n\n  // 페이지 이동(게시글 수정)\n  const handleModifyFree = () => {\n    navigate(`/free/modify?iboard=${iboard}`);\n  };\n\n  // 데이터 연동(게시글 삭제)\n  const handleDeleteFree = async () => {\n    const confirmDelete = window.confirm(\"삭제하시겠습니까?\");\n    if (confirmDelete) {\n      try {\n        await deleteFreeData(iboard);\n        navigate(`/free`);\n      } catch (error) {\n        console.log(\"Error deleting product:\", error);\n      }\n    }\n  };\n\n  // 데이터 연동(좋아요)\n  const [like, setLike] = useState(null);\n  const handleClickLike = async () => {\n    await getLike(iboard);\n    window.location.reload();\n  };\n\n  // 댓글 작성\n  const [comment, setComment] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n\n  useEffect(() => {\n    const commentData = async () => {\n      await postComment(iboard, comment);\n      window.location.reload();\n    };\n    if (comment !== \"\") {\n      commentData();\n    }\n  }, [comment]);\n\n  // 댓글 수정\n  const [commentBox, setCommentBox] = useState({});\n  const [modifyComment, setModifyComment] = useState({\n    iboardComment: \"\",\n    comment: \"\",\n  });\n  const [inputModifyValue, setInputModifyValue] = useState(\"\");\n\n  const handleModifyComment = iboardComment => {\n    setCommentBox(prev => ({\n      ...prev,\n      [iboardComment]: !prev[iboardComment],\n    }));\n  };\n\n  const handleModifyButtonClick = (iboardComment, comment) => {\n    setModifyComment({ iboardComment, comment });\n  };\n\n  useEffect(() => {\n    const commentData = async () => {\n      await patchComment(modifyComment.iboardComment, modifyComment.comment);\n      window.location.reload();\n    };\n    if (modifyComment.comment !== \"\") {\n      commentData();\n    }\n  }, [modifyComment]);\n\n  // 댓글 삭제\n  const handleDeleteComment = async iboardComment => {\n    const confirmDelete = window.confirm(\"삭제하시겠습니까?\");\n    if (confirmDelete) {\n      await deleteComment(iboardComment);\n      window.location.reload();\n    }\n  };\n\n  // 날짜와 시간만 추출(댓글)\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n\n    const hour = String(date.getHours()).padStart(2, \"0\");\n    const minute = String(date.getMinutes()).padStart(2, \"0\");\n    const second = String(date.getSeconds()).padStart(2, \"0\");\n\n    return {\n      date: `${year}-${month}-${day}`,\n      time: `${hour}:${minute}:${second}`,\n    };\n  };\n\n  let date;\n  let time;\n  if (freeData && freeData.createdAt) {\n    const result = formatDate(freeData.createdAt);\n    date = result.date;\n    time = result.time;\n  }\n\n  // more 버튼\n  const [page, setPage] = useState(1);\n  const COMMENTS_PER_PAGE = 5;\n\n  const handleMoreButtonClick = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  // 페이지 이동\n  const navigate = useNavigate();\n  const MoveToList = () => {\n    navigate(`/free`);\n  };\n\n  return (\n    <Layout>\n      <SideBar />\n      <FreeDetailsPageStyle>\n        <FreeHeader>\n          <p>자유게시판</p>\n          <GoToListBt onClick={MoveToList}></GoToListBt>\n        </FreeHeader>\n        {freeData && (\n          <FreeDetailsMain>\n            <div style={{ width: \"1110px\" }}>\n              <TitleSection>\n                <div style={{ width: \"950px\" }}>\n                  <h1>{freeData.title}</h1>\n                  <h2>\n                    {date} {time}\n                  </h2>\n                </div>\n                <UserBoardButton\n                  userId={freeData.iuser}\n                  currentUserId={iuser}\n                  onModify={handleModifyFree}\n                  onDelete={handleDeleteFree}\n                />\n              </TitleSection>\n\n              <ContentSection>\n                <div>\n                  {freeData.pic.map((item, index) => (\n                    <img\n                      key={index}\n                      src={`/pic/${item.boardPic}`}\n                      alt=\"업로드이미지\"\n                    />\n                  ))}\n                </div>\n\n                <p>{freeData.contents}</p>\n\n                <BoardLike>\n                  <h1>좋아요</h1>\n                  {like ? (\n                    <img\n                      src=\"/images/free/like_full.svg\"\n                      onClick={handleClickLike}\n                    />\n                  ) : (\n                    <img\n                      src=\"/images/free/like.svg\"\n                      onClick={handleClickLike}\n                    />\n                  )}\n                  {/* <FreeBoardLike\n                    isLiked={freeData.isLiked !== 0 ? true : false}\n                    iboard={iboard}\n                  /> */}\n                </BoardLike>\n              </ContentSection>\n\n              <ReviewSection>\n                <h1>댓글 {freeData.comments.length}</h1>\n                <ReviewRegister>\n                  <p>\n                    저작권 등 다른 사람의 권리를 침해하거나 명예를 훼손하는\n                    게시물은 이용약관 및 관련 법률에 의해 제재를 받을 수\n                    있습니다.\n                    <br />\n                    건전한 토론 문화와 양질의 댓글 문화를 위해, 타인에게\n                    불쾌감을 주는 욕설 또는 특정 계층/민족, 종교 등을 비하하는\n                    단어들은 표시가 제한됩니다.\n                  </p>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"end\",\n                    }}\n                  >\n                    <textarea\n                      maxLength={500}\n                      placeholder=\"댓글을 입력해주세요\"\n                      onChange={e => {\n                        const inputText = e.target.value;\n                        const inputLength = inputText.length;\n                        const maxLength = 500;\n                        const counterText = `${inputLength}/${maxLength}`;\n\n                        // 입력된 글자수와 최대 글자수를 표시하는 부분\n                        document.getElementById(\"counter\").innerText =\n                          counterText;\n\n                        // textarea의 값이 변경될 때마다 comment 상태를 업데이트\n                        setInputValue(inputText);\n                      }}\n                    />\n                    <span id=\"counter\">0/500</span>\n                    <button onClick={() => setComment(inputValue)}>등록</button>\n                  </div>\n                </ReviewRegister>\n\n                {freeData.comments\n                  .slice(0, page * COMMENTS_PER_PAGE)\n                  .map(listItem => {\n                    const { date, time } = formatDate(listItem.createdAt);\n                    return (\n                      <ReviewList key={listItem.text}>\n                        <img\n                          src={`/pic/${listItem.userPic}`}\n                          alt=\"유저이미지\"\n                        />\n                        <div style={{ width: \"900px\" }}>\n                          <h1>{listItem.nick}</h1>\n                          <p>{listItem.comment}</p>\n                          {commentBox[listItem.iboardComment] && (\n                            <CommentModifyBox>\n                              <textarea\n                                maxLength={500}\n                                placeholder=\"수정할 댓글을 입력해주세요\"\n                                onChange={e =>\n                                  setInputModifyValue(e.target.value)\n                                }\n                              />\n                              <button\n                                onClick={() =>\n                                  handleModifyButtonClick(\n                                    listItem.iboardComment,\n                                    inputModifyValue,\n                                  )\n                                }\n                              >\n                                확인\n                              </button>\n                            </CommentModifyBox>\n                          )}\n                        </div>\n                        <div style={{ textAlign: \"end\" }}>\n                          <h2>{date}</h2>\n                          <h2>{time}</h2>\n                          <UserCommentButton\n                            userId={listItem.iuser}\n                            currentUserId={iuser}\n                            onModify={() =>\n                              handleModifyComment(listItem.iboardComment)\n                            }\n                            onDelete={() =>\n                              handleDeleteComment(listItem.iboardComment)\n                            }\n                          />\n                        </div>\n                      </ReviewList>\n                    );\n                  })}\n                {freeData.comments.length > page * COMMENTS_PER_PAGE && (\n                  <MoreBt onClick={handleMoreButtonClick}>\n                    <img src=\"/images/free/bt_more.svg\" />\n                  </MoreBt>\n                )}\n              </ReviewSection>\n            </div>\n\n            <SideSection>\n              <WriterSection>\n                <img src={`/pic/${freeData.userPic}`} alt=\"작성자 이미지\" />\n                <h1>{freeData.nick}</h1>\n              </WriterSection>\n              <ContentState>\n                <h1>댓글</h1>\n                <h1>{freeData.comments.length}</h1>\n              </ContentState>\n              <ContentState>\n                <h1>좋아요</h1>\n                <div>\n                  {like ? (\n                    <img\n                      src=\"/images/free/like_full.svg\"\n                      onClick={handleClickLike}\n                    />\n                  ) : (\n                    <img\n                      src=\"/images/free/like.svg\"\n                      onClick={handleClickLike}\n                    />\n                  )}\n                  <h1>{freeData.boardLikeCount}</h1>\n                </div>\n              </ContentState>\n              <ContentState>\n                <h1>조회수</h1>\n                <h1>{freeData.view}</h1>\n              </ContentState>\n            </SideSection>\n          </FreeDetailsMain>\n        )}\n      </FreeDetailsPageStyle>\n    </Layout>\n  );\n};\n\nexport default FreeDetailsPage;\n","import { jwtAxios } from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\n\n// 댓글 등록\nexport const postComment = async (iboard, comment) => {\n  try {\n    const url = `${SERVER_URL}/api/board/comment`;\n\n    const res = await jwtAxios.post(url, { iboard, comment });\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// 댓글 수정\nexport const patchComment = async (iboardComment,comment) => {\n  try {\n    const url = `${SERVER_URL}/api/board/comment`;\n\n    const res = await jwtAxios.patch(url, { iboardComment, comment });\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// 댓글 삭제\nexport const deleteComment = async iboardComment => {\n  try {\n    const url = `${SERVER_URL}/api/board/comment/${iboardComment}`;\n\n    const res = await jwtAxios.delete(url);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","export const Common = {\n  // 숫자가 높을수록 밝은 색\n  color: {\n    primary: \"#2C39B5\",\n    p100: \"#000000\",\n    p200: \"#4B4B4B\",\n    p300: \"#777777\",\n    p400: \"#E4E7FF\",\n    p500: \"#F2F2FF\",\n    p600: \"#FFFFFF\",\n  },\n};\n","import styled from \"@emotion/styled\";\nimport { Pagination } from \"antd\";\n\nexport const FreePageStyle = styled.div`\n  width: 1260px;\n  margin: 0 auto;\n`;\nexport const FreeHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #2c39b5;\n  padding-bottom: 17px;\n  p {\n    color: #000;\n    font-size: 24px;\n    font-weight: 400;\n    font-style: normal;\n    line-height: normal;\n  }\n`;\nexport const SearchSection = styled.div`\n  display: flex;\n  width: 330px;\n  height: 35px;\n  border: 1px solid #bebebe;\n  select {\n    width: 100px;\n    border: none;\n    border-right: 1px solid #bebebe;\n  }\n`;\nexport const FreeSearchForm = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 230px;\n  height: 35px;\n  padding: 0 10px;\n  /* border: 1px solid #BEBEBE; */\n  input {\n    border: none;\n    width: 180px;\n    height: 30px;\n    font-size: 16px;\n    font-weight: 400;\n  }\n  button {\n    width: 16px;\n    height: 16px;\n    background-image: url(\"/images/free/bt_search.svg\");\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n  }\n`;\n\nexport const FreeMain = styled.div`\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  th {\n    height: 50px;\n    border-bottom: 1px solid #bebebe;\n    text-align: center;\n    background: #e4e7ff;\n    font-size: 16px;\n    font-weight: normal;\n  }\n  td {\n    height: 60px;\n    padding: 10px;\n    border-bottom: 1px solid #bebebe;\n    text-align: center;\n    font-size: 14px;\n    background: #fff;\n    cursor: pointer;\n  }\n`;\n\nexport const SortWrap = styled.div`\n  margin-top: 25px;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 10px;\n  button {\n    border: none;\n    background: transparent;\n    font-size: 15px;\n    color: #777;\n    cursor: pointer;\n  }\n  img {\n    width: 2px;\n    height: 15px;\n  }\n`;\n\nexport const BtSection = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n  button {\n    width: 150px;\n    height: 40px;\n    background: #2c39b5;\n    border: none;\n\n    color: #fff;\n    font-size: 16px;\n    cursor: pointer;\n  }\n`;\n\nexport const PaginationBlue = styled(Pagination)`\n  .ant-pagination-item-active {\n    border-color: #2c39b5;\n    background-color: #2c39b5;\n  }\n  .ant-pagination-item-active a {\n    color: #fff;\n  }\n  .ant-pagination-item-active:hover {\n    border-color: #2c39b5;\n    background-color: #2c39b5;\n  }\n  .ant-pagination-item-active a:hover {\n    color: #fff;\n  }\n  .ant-pagination-options {\n    display: none;\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const FreeRegisterPageStyle = styled.div`\n  width: 1260px;\n  margin: 0 auto;\n`;\nexport const GoToListBt = styled.button`\n  width: 94px;\n  height: 30px;\n  background-image: url(\"/images/free/goToList.svg\");\n  border: none;\n  cursor: pointer;\n`;\nexport const FreeRegisterMain = styled.div`\n  margin-top: 20px;\n  margin-bottom: 50px;\n  form {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 1260px;\n    height: 50px;\n    border: 1px solid #d9d9d9;\n    margin-bottom: 30px;\n    padding-left: 10px;\n    padding-right: 10px;\n    input {\n      display: flex;\n      width: 1200px;\n      height: 40px;\n      border: none;\n\n      color: #000;\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: normal;\n    }\n    button {\n      width: 28px;\n      height: 28px;\n      border-radius: 100%;\n      background-color: transparent;\n      flex-shrink: 0;\n      border: none;\n      background-image: url(\"/images/free/bt_cancel.svg\");\n      cursor: pointer;\n    }\n  }\n\n  textarea {\n    resize: none;\n    width: 1260px;\n    height: 500px;\n    border: 1px solid #d9d9d9;\n    padding: 10px;\n    margin-bottom: 40px;\n\n    color: #000;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\nexport const PhotoBt = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 5px;\n  margin-bottom: 20px;\n  border-bottom: 1px solid #d9d9d9;\n  p {\n    color: #777;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  button {\n    padding: 5px;\n    background: transparent;\n    border: 1px solid #000;\n    border-radius: 5px;\n    font-size: 15px;\n    cursor: pointer;\n  }\n`;\nexport const ImageMap = styled.div`\n  display: flex;\n  justify-content: start;\n  gap: 30px;\n  img {\n    width: 400px;\n    height: 400px;\n    cursor: pointer;\n  }\n`;\n"],"names":["getFreeList","async","page","search","type","sort","setFreeList","setFreeLength","_ref","url","concat","SERVER_URL","res","jwtAxios","get","data","boardList","totalBoardCount","error","console","log","getFreeData","iboard","axios","getLike","postFreeData","obj","_ref2","header","headers","post","putFreeData","_ref3","put","deleteFreeData","delete","Wrap","styled","div","_templateObject","_taggedTemplateLiteral","SideBarWrap","_templateObject2","ButtonWrap","_templateObject3","Common","color","p300","Write","button","_templateObject4","Chat","_templateObject5","FreeBoard","_templateObject6","Profile","_templateObject7","Call","_templateObject8","SideBar","setSelectedItem","setActiveBtn","_jsx","children","_jsxs","Link","to","onClick","subItem","sessionStorage","setItem","FreeDetailsPageStyle","FreeDetailsMain","TitleSection","ContentSection","ReviewSection","ReviewRegister","ReviewList","CommentModifyBox","MoreBt","_templateObject9","SideSection","_templateObject10","WriterSection","_templateObject11","ContentState","_templateObject12","BoardWriterBt","_templateObject13","CommentWriterBt","_templateObject14","BoardLike","_templateObject15","UserBoardButton","userId","currentUserId","onDelete","onModify","isCurrentUser","_Fragment","style","background","UserCommentButton","FreeDetailsPage","iuser","useSelector","state","loginSlice","freeData","setFreeData","useState","searchParams","URLSearchParams","location","parseInt","useEffect","setLike","isLiked","fetchData","like","handleClickLike","window","reload","comment","setComment","inputValue","setInputValue","commentData","postComment","commentBox","setCommentBox","modifyComment","setModifyComment","iboardComment","inputModifyValue","setInputModifyValue","patch","patchComment","handleDeleteComment","confirm","deleteComment","formatDate","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","time","createdAt","result","setPage","navigate","useNavigate","Layout","FreeHeader","GoToListBt","MoveToList","width","title","handleModifyFree","pic","map","item","index","src","boardPic","alt","contents","comments","length","display","justifyContent","alignItems","maxLength","placeholder","onChange","e","inputText","target","value","inputLength","counterText","document","getElementById","innerText","id","slice","listItem","userPic","nick","handleModifyButtonClick","textAlign","handleModifyComment","prev","text","handleMoreButtonClick","prevPage","boardLikeCount","view","primary","p100","p200","p400","p500","p600","FreePageStyle","SearchSection","FreeSearchForm","FreeMain","SortWrap","BtSection","PaginationBlue","Pagination","FreeRegisterPageStyle","FreeRegisterMain","PhotoBt","ImageMap"],"sourceRoot":""}