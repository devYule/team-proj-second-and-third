{"version":3,"file":"static/js/313.c5c0f0c8.chunk.js","mappings":"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","sources":["pages/main/MainMorePage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { getLoginMoreProduct, getMoreProduct, getProdListCount } from \"../../api/main/mainMore_api\";\nimport { SideBar } from \"../../components/SideBar\";\nimport Like from \"../../components/details/Like\";\nimport JoinPopUp, {\n  ModalBackground,\n} from \"../../components/joinpopup/JoinPopUp\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport Layout from \"../../layouts/Layout\";\nimport { PaginationBlue } from \"../../styles/free/FreePageStyle\";\nimport { MoreWrap } from \"../../styles/main/mainMoreStyle\";\n\nconst region = [\n  {\n    title: \"대구광역시\",\n    list: [\n      \"전체\",\n      \"달서구\",\n      \"중구\",\n      \"동구\",\n      \"서구\",\n      \"남구\",\n      \"북구\",\n      \"수성구\",\n      \"달성군\",\n    ],\n  },\n  {\n    title: \"서울특별시\",\n    list: [\n      \"전체\",\n      \"종로구\",\n      \"중구\",\n      \"용산구\",\n      \"성동구\",\n      \"광진구\",\n      \"동대문구\",\n      \"중랑구\",\n      \"성북구\",\n      \"강북구\",\n      \"도봉구\",\n      \"노원구\",\n      \"은평구\",\n      \"서대문구\",\n      \"마포구\",\n      \"양천구\",\n      \"강서구\",\n      \"구로구\",\n      \"금천구\",\n      \"영등포구\",\n      \"동작구\",\n      \"관악구\",\n      \"서초구\",\n      \"강남구\",\n      \"송파구\",\n      \"강동구\",\n    ],\n  },\n  {\n    title: \"부산광역시\",\n    list: [\n      \"전체\",\n      \"중구\",\n      \"서구\",\n      \"동구\",\n      \"영도구\",\n      \"부산진구\",\n      \"동래구\",\n      \"남구\",\n      \"북구\",\n      \"해운대구\",\n      \"사하구\",\n      \"금정구\",\n      \"강서구\",\n      \"연제구\",\n      \"수영구\",\n      \"사상구\",\n      \"기장군\",\n    ],\n  },\n  {\n    title: \"인천광역시\",\n    list: [\n      \"전체\",\n      \"중구\",\n      \"동구\",\n      \"미추홀구\",\n      \"연수구\",\n      \"남동구\",\n      \"부평구\",\n      \"계양구\",\n      \"서구\",\n    ],\n  },\n  {\n    title: \"광주광역시\",\n    list: [\"전체\", \"동구\", \"서구\", \"남구\", \"북구\", \"광산구\"],\n  },\n  {\n    title: \"대전광역시\",\n    list: [\"전체\", \"동구\", \"중구\", \"서구\", \"유성구\", \"대덕구\"],\n  },\n  {\n    title: \"울산광역시\",\n    list: [\"전체\", \"중구\", \"남구\", \"동구\", \"북구\"],\n  },\n];\n\nconst MainMorePage = () => {\n  const navigate = useNavigate(`/details/`); // useNavigate 훅을 사용하여 navigate 함수 가져오기\n  \n  const { isLogin } = useCustomLogin();\n  const [loginState, setLoginState] = useState(false);\n  \n  const location = useLocation();\n  const { pathname, state } = location;\n  const { title } = location.state || {};\n  // const urlParseArr = pathname.split(\"/\");\n  // const parseMainCategory = parseInt(urlParseArr[3]);\n  // const parseSubCategory = parseInt(urlParseArr[4]);\n  const searchValue = sessionStorage.getItem(\"searchValue\");\n  const searchParams = new URLSearchParams(location.search);\n  const parseMainCategory = parseInt(searchParams.get(\"mc\"));\n  const parseSubCategory = parseInt(searchParams.get(\"sc\"));\n\n  const [addr, setAddr] = useState(\"\");\n  const [totalPage, setTotalPage] = useState(null);\n\n  \n\n  // 페이지 번호\n  const [pageNum, setPageNum] = useState(1);\n  const [sortType, setSortType] = useState(0);\n  // 전지역 데이터\n  const [datas, setDatas] = useState([]);\n  // 지역별 시, 구 분류 데이터\n  const [filterData, setFilterData] = useState([]);\n  // 지역 선택 관리\n  const [regionNum, setRegionNum] = useState(null);\n  const [districtNum, setDistrictNum] = useState(null);\n\n  const fetchData = async (pageNum, _sortType) => {\n    try {\n      let res = await getMoreProduct(pageNum,parseMainCategory,parseSubCategory,_sortType);\n      if(isLogin) {\n        res = await getLoginMoreProduct(pageNum,parseMainCategory,parseSubCategory,_sortType);\n      }\n      console.log(isLogin)\n      setDatas(res);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleRegionChange = e => {\n    if (e.target.value === \"전체\") {\n      setRegionNum(null);\n    } else {\n      const regionIndex = region.findIndex(\n        item => item.title === e.target.value,\n      );\n      setRegionNum(regionIndex);\n    }\n    setDistrictNum(null);\n  };\n\n  const regionFilter = e => {\n    const selectedRegion = e.target.value;\n    const districtIndex = region[regionNum].list.indexOf(selectedRegion);\n    setDistrictNum(districtIndex);\n  };\n\n  const handlePageChange = _tempPage => {\n    setPageNum(_tempPage);\n  };\n\n  const listCountData = async () => {\n    await getProdListCount(\n      // searchValue,\n      parseMainCategory,\n      parseSubCategory,\n      addr,\n      // successFn,\n      // errorFn,\n      setTotalPage,\n    );\n  };\n  useEffect(() => {\n    listCountData();\n  }, [parseMainCategory, parseSubCategory, addr]);\n\n \n    // details 페이지로 이동\n  const handlePageChangeDetails = async _item => {\n    if (isLogin) {\n      const url = `/details?mc=${_item.categories.mainCategory}&sc=${_item.categories.subCategory}&productId=${_item.iproduct}`;\n      const serverData = {\n        mainCategoryId: _item.categories.mainCategory,\n        subCategoryId: _item.categories.subCategory,\n        iproduct: _item.iproduct,\n      };\n      // console.log(serverData);\n      // const res = getProductDetail(serverData);\n      navigate(url);\n    } else {\n      setLoginState(true);\n    }\n  };\n  const closeModal = () => {\n    setLoginState(false);\n    navigate(`/login`);\n  };\n\n  useEffect(() => {\n    if (sortType !== 0) fetchData(pageNum, sortType);\n    else fetchData(pageNum);\n  }, [pageNum, sortType]);\n\n  useEffect(() => {\n    if (regionNum !== null) {\n      const regionData = datas.filter(item =>\n        item.addr.includes(region[regionNum].title.slice(0, 2)),\n      );\n      if (districtNum !== null) {\n        const districtData = regionData.filter(item =>\n          item.addr.includes(` ${region[regionNum].list[districtNum]}`),\n        );\n        setFilterData(districtData);\n      } else {\n        setFilterData(regionData);\n      }\n    } else {\n      setFilterData(datas);\n    }\n  }, [districtNum, datas, regionNum, pageNum]);\n\n  return (\n    <Layout>\n      {loginState && (\n        <>\n          <JoinPopUp txt=\"로그인 후 이용해주세요.\" onConfirm={closeModal} />\n          <ModalBackground></ModalBackground>\n        </>\n      )}\n      <SideBar />\n      <MoreWrap>\n        <div className=\"header-wrap\">\n          <div className=\"header-cate-wrap\">\n            <div>{title || \"Default Title\"}</div>\n            <div>{totalPage}개</div>\n          </div>\n          <div>\n            <div className=\"bt-wrap\">\n              <div>\n                <button onClick={() => setSortType(0)}>최신순</button>\n                <img src=\"/images/main/line.svg\" />\n                <button onClick={() => setSortType(2)}>조회순</button>\n              </div>\n            </div>\n            <div className=\"region-wrap\">\n              <select onChange={handleRegionChange} defaultValue=\"전체\">\n                <option>전체</option>\n                {region.map((item, index) => {\n                  return (\n                    <option key={`regionTitle${index}`}>{item.title}</option>\n                  );\n                })}\n              </select>\n              <select\n                onChange={e => regionFilter(e)}\n                value={\n                  regionNum !== null && region[regionNum].list[districtNum]\n                }\n                disabled={regionNum === null}\n              >\n                {regionNum === null && <option>-</option>}\n                {regionNum !== null &&\n                  region[regionNum].list.map((item, index) => {\n                    return <option key={`regionList${index}`}>{item}</option>;\n                  })}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"main-wrap\">\n          {filterData &&\n            filterData.map((item, index) => (\n              <div\n                className=\"item-wrap\"\n                key={`MainMore-item-${index}`}\n                onClick={() => handlePageChangeDetails(item)}\n              >\n                <div className=\"like-wrap\">\n                  <Like\n                    isLiked={item.isLiked !== 0 ? true : false}\n                    productId={item.iproduct}\n                  />\n                </div>\n                <img\n                  className=\"item-image\"\n                  src={`/pic/${item.prodMainPic}`}\n                  alt=\"제품 이미지\"\n                />\n                <div className=\"desc-wrap\">\n                  <span className=\"desc-title\">{item.title}</span>\n                  <hr />\n                  <div className=\"desc-price\">\n                    {item.rentalPrice.toLocaleString()}\n                  </div>\n                  <div className=\"ad-view-wrap\">\n                    <div className=\"desc-ad\">{item.addr}</div>\n                    <div className=\"view\">조회수{item.view}</div>\n                  </div>\n                  {item.hashTags.slice(0, 3).map((tagData, tagIndex) => (\n                        <span key={tagIndex} className=\"hash-tag\">{tagData.tag}</span>\n                      ))}\n                </div>\n              </div>\n            ))}\n        </div>\n        <div className=\"pagination\">\n          <PaginationBlue\n            current={pageNum}\n            onChange={handlePageChange}\n            total={totalPage}\n            pageSize={16}\n          />\n        </div>\n      </MoreWrap>\n    </Layout>\n  );\n};\n\nexport default MainMorePage;\n"],"names":["region","title","list","MainMorePage","navigate","useNavigate","isLogin","useCustomLogin","loginState","setLoginState","useState","location","useLocation","pathname","state","searchParams","sessionStorage","getItem","URLSearchParams","search","parseMainCategory","parseInt","get","parseSubCategory","addr","setAddr","totalPage","setTotalPage","pageNum","setPageNum","sortType","setSortType","datas","setDatas","filterData","setFilterData","regionNum","setRegionNum","districtNum","setDistrictNum","fetchData","async","_sortType","res","getMoreProduct","getLoginMoreProduct","console","log","error","useEffect","getProdListCount","listCountData","regionData","filter","item","includes","slice","districtData","concat","_jsxs","Layout","children","_Fragment","_jsx","JoinPopUp","txt","onConfirm","closeModal","ModalBackground","SideBar","MoreWrap","className","onClick","src","onChange","e","target","value","regionIndex","findIndex","defaultValue","map","index","selectedRegion","districtIndex","indexOf","regionFilter","disabled","url","_item","categories","mainCategory","subCategory","iproduct","handlePageChangeDetails","Like","isLiked","productId","prodMainPic","alt","rentalPrice","toLocaleString","view","hashTags","tagData","tagIndex","tag","PaginationBlue","current","_tempPage","total","pageSize"],"sourceRoot":""}