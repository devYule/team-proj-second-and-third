{"version":3,"file":"static/js/372.5b7323e8.chunk.js","mappings":"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","sources":["styles/chat/ChatStyles.js","components/chat/ChatProfile.js","components/chat/ChatBoxComponent.js","pages/chat/ChatPage.js","styles/CommonStyles.js","styles/details/DetailsComponentStyles.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const PageWrapper = styled.div`\r\n  max-width: 1280px;\r\n  height: 630px;\r\n  margin: 0 auto;\r\n\r\n  display: flex;\r\n  /* margin-top: 20px; */\r\n`;\r\n\r\nexport const ChatBox = styled.div`\r\n  width: 630px;\r\n\r\n  height: auto;\r\n  max-height: 624px;\r\n  flex-shrink: 0;\r\n  padding-left: 20px;\r\n  padding-top: 15px;\r\n  margin-right: 20px;\r\n  border: 1px solid #777;\r\n`;\r\n\r\nexport const ChatProfileBox = styled.div`\r\n  width: 600px;\r\n  height: 90px;\r\n  flex-shrink: 0;\r\n\r\n  cursor: pointer; /* 클릭 가능하도록 커서 스타일 지정 */\r\n  pointer-events: auto; /* 클릭 이벤트 활성화 */\r\n`;\r\n\r\nexport const ChatList = styled.div`\r\n  color: #000;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  margin-bottom: 45px;\r\n`;\r\n\r\nexport const ProductContentWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline; /* 제품명과 날짜를 수평 정렬하기 위해 추가 */\r\n`;\r\n\r\nexport const ProductContent = styled.div`\r\n  width: 380px;\r\n\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: #777;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  margin-left: 92px;\r\n  margin-top: 20px;\r\n  line-height: 15px; /* Match with height for accurate calculation */\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3; /* Show up to 3 lines */\r\n  -webkit-box-orient: vertical;\r\n`;\r\n\r\nexport const CurrentDate = styled.div`\r\n  width: 80px;\r\n  height: 15px;\r\n  color: #777;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  margin-left: 40px;\r\n`;\r\n\r\nexport const ChatBoxWrapper = styled.div``;\r\n\r\nexport const ChatBoxContainer = styled.div`\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ChatBoxContent = styled.div`\r\n  width: 600px;\r\n  max-width: 100%;\r\n  max-height: 550px;\r\n  height: auto;\r\n  box-sizing: border-box;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const NoChatSelectedMessage = styled.p`\r\n  font-size: 16px;\r\n  text-align: center;\r\n  width: 600px;\r\n`;\r\n\r\nexport const ChatInput = styled.input`\r\n  width: 580px;\r\n  max-width: 100%; /* 최대 너비 설정 */\r\n  height: 50px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 20px;\r\n  font-size: 16px;\r\n  background: #f2f2ff;\r\n  padding-left: 10px;\r\n  bottom: 10px;\r\n`;\r\n\r\nexport const ProfileInfoContainer = styled.div`\r\n  display: inline-block;\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const ChatText = styled.div`\r\n  max-height: 460px;\r\n  min-height: 460px;\r\n  margin-bottom: 5px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nexport const ProfileName = styled.p`\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const ChatMessage = styled.div`\r\n  position: relative;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isSender }) => (isSender ? \"#DCF8C6\" : \"#E5E5EA\")};\r\n  align-self: ${({ isSender }) => (isSender ? \"flex-end\" : \"flex-start\")};\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"@emotion/styled\";\r\nimport {\r\n  ProfileContainer,\r\n  ProfileImg,\r\n  ProfileName,\r\n} from \"../../styles/details/DetailsComponentStyles\";\r\n\r\nimport {\r\n  ProductContent,\r\n  CurrentDate,\r\n  ProductContentWrapper,\r\n  ChatProfileBox,\r\n} from \"../../styles/chat/ChatStyles\";\r\n\r\nconst dummyData = [\r\n  {\r\n    id: 1,\r\n    profileImage: \"/images/kong.jpg\",\r\n    profileName: \"프로필 이름 1\",\r\n    productContent: \"갤럭시 워치 4 골프 에디션 4 - 44mm 블루투스 (블랙 에디션)\",\r\n    currentDate: \"2024/01/14\",\r\n  },\r\n  {\r\n    id: 2,\r\n    profileImage: \"/images/kong.jpg\",\r\n    profileName: \"프로필 이름 2\",\r\n    productContent: \"다른 상품 내용...\",\r\n    currentDate: \"2024/01/15\",\r\n  },\r\n  // Add more dummy data as needed\r\n];\r\n\r\n// Copy the first two objects to create additional dummy data\r\nconst additionalDummyData = Array.from({ length: 10 }, (_, index) => ({\r\n  id: index + 3,\r\n  profileImage: \"/images/kong.jpg\",\r\n  profileName: `프로필 이름 ${index + 3}`,\r\n  productContent: `더미 상품 내용 ${index + 1}...`,\r\n  currentDate: \"2024/01/15\",\r\n}));\r\n\r\nconst allDummyData = [...dummyData, ...additionalDummyData];\r\n\r\nconst ChatProfile = ({ onProfileSelect }) => {\r\n  const [selectedProfile, setSelectedProfile] = useState(null);\r\n\r\n  const handleProfileSelect = profile => {\r\n    setSelectedProfile(profile);\r\n    onProfileSelect(profile); // Notify the parent component about the selected profile\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {allDummyData.map(data => (\r\n        <ChatProfileBox\r\n          key={data.id}\r\n          onClick={() => handleProfileSelect(data)}\r\n          selected={selectedProfile && selectedProfile.id === data.id}\r\n        >\r\n          <ProfileContainer>\r\n            <ProfileImg>\r\n              <img src={data.profileImage} alt=\"Profile Image\" />\r\n            </ProfileImg>\r\n            <ProfileName>{data.profileName}</ProfileName>\r\n          </ProfileContainer>\r\n          <ProductContentWrapper>\r\n            <ProductContent>{data.productContent}</ProductContent>\r\n            <CurrentDate>{data.currentDate}</CurrentDate>\r\n          </ProductContentWrapper>\r\n        </ChatProfileBox>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nChatProfile.propTypes = {\r\n  onProfileSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChatProfile;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  ChatBoxContainer,\r\n  ChatBoxWrapper,\r\n  ChatBoxContent,\r\n  ChatInput,\r\n  ProfileInfoContainer,\r\n  NoChatSelectedMessage,\r\n  ChatText,\r\n  ProfileName,\r\n  ChatMessage,\r\n  ButtonContainer,\r\n} from \"../../styles/chat/ChatStyles\";\r\n\r\nconst ChatBoxComponent = ({ selectedProfile, messages }) => {\r\n  const [inputMessage, setInputMessage] = useState(\"\"); // State to store input message\r\n  const [chatMessages, setChatMessages] = useState([]); // State to store chat messages\r\n\r\n  const handleInputChange = e => {\r\n    setInputMessage(e.target.value); // Update input message state\r\n  };\r\n\r\n  const handleKeyPress = e => {\r\n    if (e.key === \"Enter\" && inputMessage.trim() !== \"\") {\r\n      // Send message when Enter key is pressed and input message is not empty\r\n      const newMessage = {\r\n        text: inputMessage,\r\n        isSender: true,\r\n      }; // New message object\r\n      setChatMessages([...chatMessages, newMessage]); // Add new message to chatMessages\r\n      setInputMessage(\"\"); // Clear input after sending message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatBoxWrapper>\r\n      {selectedProfile ? (\r\n        <ChatBoxContainer>\r\n          <ChatBoxContent>\r\n            <img\r\n              src={selectedProfile.profileImage}\r\n              alt=\"Profile\"\r\n              style={{\r\n                width: \"60px\",\r\n                height: \"60px\",\r\n                borderRadius: \"50%\",\r\n                marginBottom: \"20px\",\r\n              }}\r\n            />\r\n            <ProfileInfoContainer>\r\n              <ProfileName>{selectedProfile.profileName}</ProfileName>\r\n              <p>{selectedProfile.productContent}</p>\r\n            </ProfileInfoContainer>\r\n\r\n            <ChatText>\r\n              {chatMessages.map((message, index) => (\r\n                <ChatMessage key={index} isSender={message.isSender}>\r\n                  {message.text}\r\n                </ChatMessage>\r\n              ))}\r\n            </ChatText>\r\n          </ChatBoxContent>\r\n          <ChatInput\r\n            type=\"text\"\r\n            placeholder=\"메시지를 입력하세요\"\r\n            value={inputMessage} // Bind input value to state\r\n            onChange={handleInputChange} // Handle input change\r\n            onKeyPress={handleKeyPress} // Handle Enter key press\r\n          />\r\n          {/* 버튼에 margin-left: auto를 적용하여 오른쪽 끝으로 배치 */}\r\n          <button\r\n            onClick={() => console.log(\"Button clicked\")}\r\n            style={{ marginLeft: \"auto\" }}\r\n          >\r\n            버튼\r\n          </button>\r\n        </ChatBoxContainer>\r\n      ) : (\r\n        <NoChatSelectedMessage>\r\n          프로필을 선택하여 채팅을 시작하세요.\r\n        </NoChatSelectedMessage>\r\n      )}\r\n    </ChatBoxWrapper>\r\n  );\r\n};\r\n\r\nexport default ChatBoxComponent;\r\n","import React, { useState } from \"react\";\r\nimport { PageWrapper, ChatBox, ChatList } from \"../../styles/chat/ChatStyles\";\r\nimport ChatProfile from \"../../components/chat/ChatProfile\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport ChatBoxComponent from \"../../components/chat/ChatBoxComponent\";\r\n\r\nconst ChatPage = () => {\r\n  const [selectedProfile, setSelectedProfile] = useState(null);\r\n\r\n  const handleProfileSelect = profile => {\r\n    setSelectedProfile(profile);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <PageWrapper>\r\n        <ChatBox>\r\n          <ChatList>\r\n            구매 목록 <img src=\"/images/chat/Vector.svg\" alt=\"Vector\" />\r\n          </ChatList>\r\n          <ChatProfile onProfileSelect={handleProfileSelect} />\r\n        </ChatBox>\r\n        <ChatBox>\r\n          <ChatBoxComponent selectedProfile={selectedProfile} />\r\n        </ChatBox>\r\n      </PageWrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n","export const Common = {\r\n  // 숫자가 높을수록 밝은 색\r\n  color: {\r\n    primary: \"#2C39B5\",\r\n    p100: \"#000000\",\r\n    p200: \"#4B4B4B\",\r\n    p300: \"#777777\",\r\n    p400: \"#E4E7FF\",\r\n    p500: \"#F2F2FF\",\r\n    p600: \"#FFFFFF\",\r\n  },\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Common } from \"../CommonStyles\";\r\n\r\n// Like styles\r\nexport const StyledButton = styled.button`\r\n  display: block;\r\n  margin-top: 50px;\r\n  right: 12px;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  img {\r\n    width: 40px !important;\r\n    height: 35px !important;\r\n  }\r\n`;\r\n\r\n// Pay styles\r\nexport const Overlay = styled.div`\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  z-index: 100;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  width: 100%;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 1);\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  padding: 22px;\r\n  width: 470px;\r\n  height: 240px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n\r\n  border-bottom: 1px solid ${Common.color.primary};\r\n  /* 모달이 상단에 위치하도록 수정 */\r\n  position: fixed;\r\n  top: 200px; /* 원하는 높이로 수정 */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 100;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const SubBox = styled.div`\r\n  padding: 20px;\r\n  width: 470px;\r\n  max-height: 380px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 5px;\r\n\r\n  position: fixed;\r\n  top: 440px; /* 원하는 높이로 수정 */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 100;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 190px;\r\n  height: 190px;\r\n  margin-right: 25px;\r\n  margin-bottom: 40px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  width: 202px;\r\n  height: 37px;\r\n  color: #000;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Duration = styled.div`\r\n  width: 205px;\r\n  height: 20px;\r\n  color: #000;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const PriceRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PriceLabel = styled.div`\r\n  width: auto;\r\n  height: 14px;\r\n\r\n  color: #000;\r\n\r\n  font-size: 13px;\r\n\r\n  font-weight: 400;\r\n\r\n  margin-bottom: 18px;\r\n`;\r\n\r\nexport const PriceValue = styled(PriceLabel)`\r\n  width: 75px;\r\n  text-align: right;\r\n`;\r\n\r\nexport const TotalPrice = styled.div`\r\n  border-bottom: 1px solid ${Common.color.primary};\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const BtnCard = styled.div`\r\n  width: 430px;\r\n  height: 70px;\r\n  flex-shrink: 0;\r\n  border-radius: 5px;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #000;\r\n  font-size: 16px;\r\n  display: flex;\r\n\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  color: ${props => (props.clicked ? \"#fff\" : \"#000\")};\r\n  background-color: ${props => (props.clicked ? \"#2c39b5\" : \"#f2f2ff\")};\r\n\r\n  &:hover {\r\n    background: #2c39b5;\r\n    color: #f2f2ff;\r\n  }\r\n`;\r\nexport const BtnPayList = styled(BtnCard)`\r\n  width: 140px;\r\n  height: 70px;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const BtnCancel = styled.div`\r\n  width: 200px;\r\n  height: 46px;\r\n  flex-shrink: 0;\r\n  border-radius: 10px;\r\n  border: 1px solid #2c39b5;\r\n  color: #2c39b5;\r\n  margin-top: 45px;\r\n  font-family: Inter;\r\n  font-size: 16px;\r\n\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #2c39b5;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport const BtnPay = styled(BtnCancel)`\r\n  color: #2c39b5;\r\n\r\n  margin-left: 20px;\r\n`;\r\n\r\n//ProFile styles\r\nexport const ProfileContainer = styled.div`\r\n  width: 100%;\r\n  height: 20px;\r\n  display: flex;\r\n\r\n  gap: 1rem;\r\n`;\r\n\r\nexport const SellerProfileContainer = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  position: absolute;\r\n  margin-left: 500px;\r\n  gap: 1rem;\r\n`;\r\n\r\nexport const ProfileImg = styled.div`\r\n  width: 70px;\r\n  height: 70px;\r\n  box-sizing: border-box;\r\n  border-radius: 45px;\r\n  overflow: hidden;\r\n  font-size: 16px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ProfileName = styled.div`\r\n  width: 70px;\r\n  height: 20px;\r\n  color: #000;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  display: flex;\r\n  justify-content: center; /* 가로 중앙 정렬 */\r\n`;\r\n\r\n//Review styles\r\n\r\nexport const ReviewFormStyle = styled.div`\r\n  width: 1260px;\r\n  height: 380px;\r\n  flex-shrink: 0;\r\n  border-radius: 10px;\r\n  border: 1px solid #2c39b5;\r\n  padding-left: 20px;\r\n  padding-top: 15px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const ReviewProfile = styled.div`\r\n  margin-top: 25px;\r\n\r\n  width: 1220px;\r\n  height: auto;\r\n  flex-shrink: 0;\r\n  position: relative; /* 상대 위치 설정 */\r\n`;\r\n\r\nexport const ReviewProfileLine = styled.div`\r\n  width: 100%;\r\n\r\n  border-bottom: 1px solid #2c39b5;\r\n  margin-top: 25px;\r\n`;\r\n\r\nexport const CurrentDate = styled.div`\r\n  width: 80px;\r\n  height: 15px;\r\n  color: #777;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const BtnStyles = styled.button`\r\n  display: flex;\r\n  width: 103px;\r\n  height: 36px;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n  margin: auto;\r\n  margin-top: 10px;\r\n\r\n  background-color: #fff;\r\n  border-radius: 50px;\r\n  border: 1px solid #2c39b5;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #2c39b5;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport const BtnReivew = styled(BtnStyles)`\r\n  width: 79px;\r\n  margin-right: 60px;\r\n  margin-top: -20px;\r\n`;\r\n\r\nexport const ReviewText = styled.div`\r\n  width: 550px;\r\n  height: auto;\r\n  color: #777;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  margin-left: 92px;\r\n  margin-top: 10px;\r\n  white-space: pre-line;\r\n`;\r\n\r\n// ReportPost styles\r\nexport const ReportBox = styled.div`\r\n  padding: 22px;\r\n  width: 600px;\r\n  height: 0 auto;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  padding: 60px;\r\n\r\n  position: fixed;\r\n  top: 200px; /* 원하는 높이로 수정 */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 99;\r\n  background-color: #fff;\r\n`;\r\nexport const ReportText = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  align-items: center;\r\n  -webkit-box-pack: justify;\r\n  justify-content: space-between;\r\n  color: rgb(102, 102, 102);\r\n  height: 60px;\r\n  font-size: 16px;\r\n  padding-left: 20px px;\r\n  border-bottom: 1px solid rgb(150, 150, 150);\r\n`;\r\n\r\nexport const ReportTitle = styled.div`\r\n  letter-spacing: 5.2px;\r\n  font-size: 26px;\r\n  padding-bottom: 30px;\r\n  border-bottom: 1px solid rgb(33, 33, 33);\r\n  margin-bottom: 45px;\r\n`;\r\n"],"names":["PageWrapper","styled","div","_templateObject","_taggedTemplateLiteral","ChatBox","_templateObject2","ChatProfileBox","_templateObject3","ChatList","_templateObject4","ProductContentWrapper","_templateObject5","ProductContent","_templateObject6","CurrentDate","_templateObject7","ChatBoxWrapper","_templateObject8","ChatBoxContainer","_templateObject9","ChatBoxContent","_templateObject10","NoChatSelectedMessage","p","_templateObject11","ChatInput","input","_templateObject12","ProfileInfoContainer","_templateObject13","ChatText","_templateObject14","ProfileName","_templateObject15","ChatMessage","_templateObject16","_ref","isSender","_ref2","allDummyData","id","profileImage","profileName","productContent","currentDate","Array","from","length","_","index","concat","onProfileSelect","selectedProfile","setSelectedProfile","useState","_jsx","_Fragment","children","map","data","_jsxs","onClick","handleProfileSelect","profile","selected","ProfileContainer","ProfileImg","src","alt","messages","inputMessage","setInputMessage","chatMessages","setChatMessages","style","width","height","borderRadius","marginBottom","message","text","type","placeholder","value","onChange","e","target","onKeyPress","key","trim","newMessage","console","log","marginLeft","ChatPage","Layout","ChatProfile","ChatBoxComponent","Common","color","primary","p100","p200","p300","p400","p500","p600","StyledButton","button","Overlay","Box","SubBox","Image","img","TextContainer","Title","h3","Duration","PriceRow","PriceLabel","PriceValue","TotalPrice","BtnCard","props","clicked","BtnPayList","BtnCancel","BtnPay","_templateObject17","_templateObject18","SellerProfileContainer","_templateObject19","_templateObject20","_templateObject21","ReviewFormStyle","_templateObject22","ReviewProfile","_templateObject23","ReviewProfileLine","_templateObject24","BtnStyles","_templateObject25","_templateObject26","ReviewText","_templateObject27","_templateObject28","_templateObject29","_templateObject30","_templateObject31"],"sourceRoot":""}