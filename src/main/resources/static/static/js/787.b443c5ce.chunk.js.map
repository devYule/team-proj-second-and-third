{"version":3,"file":"static/js/787.b443c5ce.chunk.js","mappings":"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","sources":["api/login/kakao_api.js","hooks/useCustomLogin.js","styles/header/MenuTabStyle.js","components/header/MenuTab.js","api/header/header_api.js","components/header/Header.js","styles/footer/FooterStyle.js","components/footer/Footer.js","components/SSE/fetchSSE.js","layouts/Layout.js","styles/header/HeaderStyle.js","styles/login/LoginPageStyle.js","util/jwtUtil.js"],"sourcesContent":["import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\n// 앱 등록시 Rest 키 값(절대 오픈 금지)\nconst client_id = \"beae94b18549648a1e9a98b4e0d945b2\";\n// 카카오 로그인 통과시 이동할 주소\nconst redirect_uri = \"http://localhost:3000/login/kakao\";\n// 카카오 로그인 문서 참조\nconst auth_code_path = \"https://kauth.kakao.com/oauth/authorize\";\nconst response_type = \"code\";\nconst authParam = new URLSearchParams({\n  client_id,\n  redirect_uri,\n  response_type,\n});\n\n// 카카오 로그인시 활용\nexport const getKakaoLoginLink = () => {\n  const kakaoURL = `${auth_code_path}?${authParam.toString()}`;\n  return kakaoURL;\n};\n// access 토큰 받기 경로\nconst access_token_url = `https://kauth.kakao.com/oauth/token`;\nexport const getAccessToken = async authCode => {\n  const header = {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n    },\n  };\n\n  const params = {\n    grant_type: \"authorization_code\",\n    client_id: client_id,\n    redirect_uri: redirect_uri,\n    code: authCode,\n  };\n\n  const res = await axios.post(access_token_url, params, header);\n  const accessToken = res.data.access_token;\n  return accessToken;\n};\n\n// Access Token 으로 회원정보 가져오기\nexport const getMemberWithAccessToken = async accessToken => {\n  const response = await fetch(\"https://kapi.kakao.com/v2/user/me\", {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n  if (response.ok) {\n    const memberInfo = await response.json();\n    // const uniqueID = memberInfo.id;\n    // console.log(\"Unique ID: \", uniqueID);\n    return memberInfo;\n  } else {\n    throw new Error(\"Failed to get member info\");\n  }\n};\n\n// 카카오 로그아웃\nexport const kakaoLogout = async accessToken => {\n  const response = await fetch(\"https://kapi.kakao.com/v1/user/logout\", {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n  if (response.ok) {\n    console.log(\"Logout successful\");\n    document.cookie = \"cookieName=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n  } else {\n    console.log(\"Logout failed\");\n  }\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { loginPostAsync, logout } from \"../slices/loginSlice\";\nimport { kakaoLogout } from \"../api/login/kakao_api\";\n\nconst useCustomLogin = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  // RTK 상태값 읽기\n  const loginState = useSelector(state => state.loginSlice);\n  // 로그인 상태값 파악\n  const isLogin = sessionStorage.getItem(\"isLogin\") === \"true\";\n  // 로그인 기능\n  const doLogin = async ({ loginParam, successFn, failFn, errorFn }) => {\n    const action = await dispatch(\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\n    );\n    return action.payload;\n  };\n  // 일반유저 vs 관리자\n  const userAuth = sessionStorage.getItem(\"userAuth\");\n\n  // 로그아웃 기능\n  const doLogout = () => {\n    dispatch(logout());\n    kakaoLogout();\n  };\n  // 패스이동 기능\n  const moveToPath = path => {\n    navigate({ pathname: path }, { replace: true });\n  };\n  // 로그인 페이지 이동 기능\n  const moveToLogin = () => {\n    return <Navigate replace to=\"/member/login\" />;\n  };\n\n  return {\n    loginState,\n    isLogin,\n    doLogin,\n    doLogout,\n    moveToPath,\n    moveToLogin,\n    userAuth,\n  };\n};\n\nexport default useCustomLogin;\n","import styled from \"@emotion/styled\";\n\n// 메인 메뉴창\nexport const MenuTabStyle = styled.div`\n  position: fixed;\n  display: block;\n  z-index: 100;\n  top: 155px;\n  width: 540px;\n  height: 310px;\n  border: 1px solid #2c39b5;\n  background: #fff;\n  padding: 30px 20px;\n`;\nexport const MainMenu = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  color: #4b4b4b;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 16px;\n  text-align: center;\n`;\nexport const MainMenuList = styled.div`\n  width: 130px;\n  height: 34px;\n  background: #f2f2ff;\n  padding-top: 9px;\n`;\n\nexport const SubMenuList = styled.div`\n  display: flex;\n  margin-left: 20px;\n  margin-top: 9px;\n  gap: 20px;\n  li {\n    color: #777;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 16px;\n    cursor: pointer;\n  }\n`;\n","import React, { useState } from \"react\";\nimport {\n  MainMenu,\n  MainMenuList,\n  MenuTabStyle,\n  SubMenuList,\n} from \"../../styles/header/MenuTabStyle\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nexport const mainCate = [\n  {\n    id: 1,\n    title: \"스마트 기기\",\n  },\n  {\n    id: 2,\n    title: \"PC / 노트북\",\n  },\n  {\n    id: 3,\n    title: \"영상 / 카메라\",\n  },\n  {\n    id: 4,\n    title: \"음향\",\n  },\n  {\n    id: 5,\n    title: \"게임 기기\",\n  },\n];\n\nexport const subCate = [\n  [\n    { id: 1, title: \"스마트 워치\" },\n    { id: 2, title: \"태블릿\" },\n    { id: 3, title: \"갤럭시\" },\n    { id: 4, title: \"아이폰\" },\n  ],\n  [\n    { id: 1, title: \"노트북\" },\n    { id: 2, title: \"PC\" },\n    { id: 3, title: \"마우스\" },\n    { id: 4, title: \"키보드\" },\n  ],\n  [\n    { id: 1, title: \"빔프로젝터\" },\n    { id: 2, title: \"셋톱박스\" },\n    { id: 3, title: \"카메라\" },\n    { id: 4, title: \"캠코더\" },\n    { id: 5, title: \"DSLR\" },\n  ],\n  [\n    { id: 1, title: \"스피커\" },\n    { id: 2, title: \"이어폰\" },\n    { id: 3, title: \"헤드폰\" },\n    { id: 4, title: \"마이크\" },\n  ],\n  [\n    { id: 1, title: \"플레이스테이션\" },\n    { id: 2, title: \"닌텐도\" },\n    { id: 3, title: \"Wii\" },\n    { id: 4, title: \"XBOX\" },\n    { id: 5, title: \"기타\" },\n  ],\n];\n\nconst MenuTab = () => {\n  // hover시 배경색 변경\n  const [activeCategory, setActiveCategory] = useState(null);\n  const handleCategoryHover = category => {\n    setActiveCategory(category); // 마우스가 hover되었음을 상태에 저장\n  };\n  const handleCategoryLeave = () => {\n    setActiveCategory(null); // 마우스가 hover되지 않았음을 상태에 저장\n  };\n  // 페이지 이동\n  const navigate = useNavigate();\n\n  return (\n    <MenuTabStyle>\n      {mainCate.map(item => (\n        <MainMenu key={item.id}>\n          <MainMenuList>{item.title}</MainMenuList>\n          <SubMenuList>\n            {subCate[item.id - 1]\n              .map(listItem => (\n                <li\n                  key={listItem.id}\n                  title={listItem.title}\n                  onClick={() => {\n                    // navigate(`/more/1/${item.id}/${listItem.id}`,{ state: { title: listItem.title }});\n                    navigate(`/more?mc=${item.id}&sc=${listItem.id}&page=1`, {\n                      state: { title: listItem.title },\n                    });\n                    window.location.reload(); // 페이지 이동 후 화면 갱신\n                  }}\n                  onMouseEnter={() => handleCategoryHover(listItem.title)}\n                  onMouseLeave={handleCategoryLeave}\n                  style={\n                    activeCategory === listItem.title\n                      ? { color: \"#2C39B5\", fontWeight: \"500\" }\n                      : {}\n                  }\n                >\n                  {listItem.title}\n                </li>\n              ))}\n          </SubMenuList>\n        </MainMenu>\n      ))}\n    </MenuTabStyle>\n  );\n};\nexport default MenuTab;\n","import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\nimport { jwtAxios } from \"../../util/jwtUtil\";\n\nexport const searchGet = async ({ sendData, successFn, failFn, errFn }) => {\n  try {\n    // console.log(\"sendData\", sendData);\n    let url = `${SERVER_URL}/api/prod?search=${sendData.search}&page=${sendData.pageNum}`;\n    if (sendData.mc) {\n      url += `&mc=${sendData.mc}`;\n    }if (sendData.sc) {\n      url += `&sc=${sendData.sc}`;\n    }\n    \n    const res = await jwtAxios.get(url);\n    const resStatus = res.status.toString();\n\n    if (resStatus.charAt(0) === \"2\") {\n      successFn(res.data);\n    } else {\n      failFn(res.data);\n    }\n  } catch (error) {\n    errFn(error);\n  }\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  CateHover,\n  CategoryTab,\n  HeaderLogo,\n  HeaderMainMenu,\n  HeaderMenu,\n  HeaderStyle,\n  HeaderTop,\n  LoginState,\n  MainCate,\n  MainCateTitle,\n  SearchBt,\n  SearchDiv,\n  SearchDivisionLine,\n  SearchForm,\n  SearchWord,\n  SubCate,\n} from \"../../styles/header/HeaderStyle\";\nimport { DivisionLine } from \"../../styles/login/LoginPageStyle\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../slices/loginSlice\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport MenuTab, { mainCate, subCate } from \"./MenuTab\";\nimport { searchGet } from \"../../api/header/header_api\";\n\nconst Header = ({ searchName, pageNum }) => {\n  // 검색 데이터 연동\n  const [isHovered, setIsHovered] = useState(true);\n  const [isCateHoverVisible, setIsCateHoverVisible] = useState(false);\n  const [isSearchWord, setIsSearchWord] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [mc, setMc] = useState(\"\");\n  const [sc, setSc] = useState(\"\");\n  const searchWordRef = useRef(null);\n  const searchBtRef = useRef(null);\n\n  const handleChangeSearch = e => {\n    setSearch(e.target.value);\n  };\n  const onClickSearch = e => {\n    e.preventDefault();\n    // console.log(\"검색실행\", search);\n    sessionStorage.setItem(\"searchValue\", search);\n    const sendData = {\n      search: search,\n      mc: mc,\n      sc: sc,\n      pageNum: 1,\n    };\n    searchGet({ sendData, successFn, failFn, errFn });\n  };\n  const handleKeyDown = e => {\n    // 키 다운 이벤트 처리 함수\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      searchBtRef.current.click(); // SearchBt 클릭 이벤트 호출\n    }\n  };\n  const successFn = result => {\n    // console.log(\"검색 성공\", result);\n    const searchValue = sessionStorage.getItem(\"searchValue\");\n\n    let url = `/search?search=${search}`;\n    if (mc) {\n      url += `&mc=${mc}`;\n    }\n    if (sc) {\n      url += `&sc=${sc}`;\n    }\n    navigate(url, { state: { result, searchValue } });\n    window.location.reload();\n  };\n\n  const failFn = result => {\n    console.log(\"검색 오류\", result);\n  };\n\n  const errFn = result => {\n    console.log(\"검색 서버에러\", result);\n  };\n\n  // 검색 카테고리 선택\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [selectedSubCate, setSelectedSubCate] = useState([\n    { id: 0, title: \"전체\" },\n  ]);\n  const handleMainCategoryChange = event => {\n    const selectedOption = mainCate.find(\n      item => item.id === parseInt(event.target.value),\n    );\n    setSelectedValue(selectedOption ? selectedOption.title : \"\");\n    setMc(selectedOption ? selectedOption.id : \"\");\n    const selectedMainCategoryId = parseInt(event.target.value);\n    const selectedMainCategory = mainCate.find(\n      item => item.id === selectedMainCategoryId,\n    );\n\n    if (selectedMainCategory) {\n      const selectedSubCategoryId = selectedMainCategoryId - 1;\n      const selectedSubCategory = subCate[selectedSubCategoryId];\n\n      setSelectedSubCate(selectedSubCategory);\n    }\n  };\n\n  const [selectedSubValue, setSelectedSubValue] = useState(\"\");\n  const handleSubCategoryChange = event => {\n    const selectedOption = selectedSubCate.find(\n      item => item.title === event.target.value,\n    );\n    setSelectedSubValue(selectedOption ? selectedOption.title : \"\");\n    setSc(selectedOption ? selectedOption.id : \"\");\n  };\n\n  const handleSearchDivClick = () => {\n    setIsCateHoverVisible(!isCateHoverVisible);\n    setIsSearchWord(false);\n  };\n\n  const handleClickOutsideCateHover = e => {\n    if (isCateHoverVisible && e.target.closest(\".header-search\") === null) {\n      setIsCateHoverVisible(false);\n    }\n  };\n\n  const handleSearchWordClick = () => {\n    setIsSearchWord(!isSearchWord);\n    setIsCateHoverVisible(false);\n  };\n\n  const handleClickOutsideSearchWord = e => {\n    if (isSearchWord && e.target.closest(\".header-search\") === null) {\n      setIsSearchWord(false);\n    }\n  };\n\n  // 페이지 이동\n  const navigate = useNavigate();\n  const handleLogo = () => {\n    navigate(`/`);\n  };\n  const handleLogin = () => {\n    navigate(`/login`);\n  };\n  const handleJoin = () => {\n    navigate(`/join/step_1`);\n  };\n  const handleMy = subItem => {\n    sessionStorage.setItem(\"selectedItem\", subItem);\n  };\n\n  // 스크롤 시 그림자 생성\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  const updateScroll = () => {\n    setScrollPosition(window.scrollY || document.documentElement.scrollTop);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutsideSearchWord);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutsideSearchWord);\n    };\n  }, [isSearchWord]);\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutsideCateHover);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutsideCateHover);\n    };\n  }, [isCateHoverVisible]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", updateScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", updateScroll);\n    };\n  }, []);\n\n  // 메뉴 click시 메뉴창 나오기\n  const [menuVisible, setMenuVisible] = useState(false);\n  const inSectionMenu = useRef();\n  const toggleMenu = () => {\n    setMenuVisible(prev => !prev);\n  };\n\n  useEffect(() => {\n    const clickMenuOutside = e => {\n      if (menuVisible && !inSectionMenu.current.contains(e.target)) {\n        setMenuVisible(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", clickMenuOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", clickMenuOutside);\n    };\n  }, [menuVisible]);\n\n  // 카테고리 hover시 메뉴창 나오기\n  const [activeCategory, setActiveCategory] = useState(null);\n  const handleCategoryHover = category => {\n    setActiveCategory(category); // 마우스가 hover되었음을 상태에 저장\n  };\n  const handleCategoryLeave = () => {\n    setActiveCategory(null); // 마우스가 hover되지 않았음을 상태에 저장\n  };\n\n  // 서브카테 hover시 색상 변경\n  const [activeSubCate, setActiveSubCate] = useState(null);\n  const handleSubCateHover = category => {\n    setActiveSubCate(category);\n  };\n  const handleSubCateLeave = () => {\n    setActiveSubCate(null);\n  };\n\n  // 로그인 & 로그아웃\n  const loginState = useSelector(state => state.loginSlice);\n  // console.log(loginState);\n  const { moveToPath, isLogin, doLogout, userAuth } = useCustomLogin();\n  // console.log(userAuth)\n\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    doLogout();\n    moveToPath(\"/\");\n  };\n\n  return (\n    <HeaderStyle\n      style={\n        scrollPosition < 30\n          ? { boxShadow: `none` }\n          : { boxShadow: `0px 2px 5px 0px rgba(0, 0, 0, 0.25)` }\n      }\n    >\n      <HeaderTop>\n        <HeaderLogo src=\"/images/logo.svg\" onClick={handleLogo} />\n        <div className=\"header-search\">\n          <SearchForm>\n            <SearchWord\n              ref={searchWordRef}\n              onChange={e => handleChangeSearch(e)}\n              onKeyDown={handleKeyDown}\n              type=\"text\"\n              placeholder={\"검색어를 입력해주세요.\"}\n              min={2}\n              value={search}\n              onMouseEnter={() => setIsHovered(false)}\n              onMouseLeave={() => setIsHovered(true)}\n              onClick={handleSearchWordClick}\n              style={{\n                backgroundColor: isSearchWord ? \"#FFF\" : \"\",\n                borderRadius: isSearchWord ? \"45px\" : \"\",\n                boxShadow: isSearchWord\n                  ? \"4px 0px 8px 0px rgba(0, 0, 0, 0.25)\"\n                  : \"\",\n              }}\n            />\n            {isHovered && !isSearchWord && (\n              <SearchDivisionLine></SearchDivisionLine>\n            )}\n            <SearchDiv\n              onMouseEnter={() => setIsHovered(false)}\n              onMouseLeave={() => setIsHovered(true)}\n              onClick={handleSearchDivClick}\n              style={{\n                backgroundColor: isCateHoverVisible ? \"#FFF\" : \"\",\n                borderRadius: isCateHoverVisible ? \"45px\" : \"\",\n                boxShadow: isCateHoverVisible\n                  ? \"-4px 0px 8px 0px rgba(0, 0, 0, 0.25)\"\n                  : \"\",\n              }}\n            >\n              <b>카테고리</b>\n              <div>\n                <span>{selectedValue ? selectedValue : \"메인 카테고리\"}</span>\n                <p></p>\n                <span>\n                  {selectedSubValue ? selectedSubValue : \"상세 카테고리\"}\n                </span>\n              </div>\n            </SearchDiv>\n            {isCateHoverVisible && (\n              <CateHover>\n                <div>\n                  <h1>메인 카테고리</h1>\n                  <select onChange={handleMainCategoryChange} defaultValue=\"\">\n                    <option value=\"\" disabled hidden>\n                      전체\n                    </option>\n                    {mainCate.map(item => {\n                      return (\n                        <option key={item.id} value={item.id}>\n                          {item.title}\n                        </option>\n                      );\n                    })}\n                  </select>\n                </div>\n                <div>\n                  <h1>상세 카테고리</h1>\n                  <select onChange={handleSubCategoryChange} defaultValue=\"\">\n                    <option value=\"\" disabled hidden>\n                      전체\n                    </option>\n                    {selectedSubCate.map(listItem => {\n                      return (\n                        <option key={listItem.id}>{listItem.title}</option>\n                      );\n                    })}\n                  </select>\n                </div>\n              </CateHover>\n            )}\n            <SearchBt\n              ref={searchBtRef}\n              onClick={e => onClickSearch(e)}\n              type=\"button\"\n            />\n          </SearchForm>\n        </div>\n        {isLogin ? (\n          <LoginState>\n            <button onClick={handleLogout}>로그아웃</button>\n            <DivisionLine></DivisionLine>\n            {userAuth == 1 ? (\n              <Link\n                to=\"/my\"\n                onClick={() => {\n                  handleMy(\"대여중\");\n                }}\n              >\n                <button>마이페이지</button>\n              </Link>\n            ) : (\n              <Link\n                to=\"/admin\"\n                // onClick={() => {\n                //   handleMy(\"대여중\");\n                // }}\n              >\n                <button>관리자페이지</button>\n              </Link>\n            )}\n          </LoginState>\n        ) : (\n          <LoginState>\n            <button onClick={handleLogin}>로그인</button>\n            <DivisionLine></DivisionLine>\n            <button onClick={handleJoin}>회원가입</button>\n          </LoginState>\n        )}\n      </HeaderTop>\n      <HeaderMenu>\n        <HeaderMainMenu ref={inSectionMenu}>\n          {menuVisible === true ? (\n            <img src=\"/images/header/bt_cancel.svg\" onClick={toggleMenu} />\n          ) : (\n            <img src=\"/images/header/bt_menu.svg\" onClick={toggleMenu} />\n          )}\n          {menuVisible && <MenuTab></MenuTab>}\n        </HeaderMainMenu>\n\n        <CategoryTab>\n          {mainCate.map(item => (\n            <MainCate\n              key={item.title}\n              onMouseEnter={() => handleCategoryHover(item.title)}\n              onMouseLeave={() => handleCategoryLeave(item.title)}\n              className={activeCategory === item.title ? \"active\" : \"\"}\n            >\n              <MainCateTitle\n                style={\n                  activeCategory === item.title\n                    ? {\n                        color: \"#2C39B5\",\n                        fontWeight: \"500\",\n                        fontSize: \"13px\",\n                      }\n                    : { color: \"#777\" }\n                }\n              >\n                {item.title}\n              </MainCateTitle>\n              {activeCategory === item.title && (\n                <SubCate>\n                  {subCate[item.id - 1].map(listItem => (\n                    <li\n                      key={listItem.id}\n                      title={listItem.title}\n                      onClick={() => {\n                        // navigate(`/more/1/${item.id}/${listItem.id}`, {\n                        navigate(\n                          `/more?mc=${item.id}&sc=${listItem.id}&page=1`,\n                          {\n                            state: { title: listItem.title },\n                          },\n                        );\n                        window.location.reload(); // 페이지 이동 후 화면 갱신\n                      }}\n                      onMouseEnter={() => handleSubCateHover(listItem.title)}\n                      onMouseLeave={handleSubCateLeave}\n                      style={\n                        activeSubCate === listItem.title\n                          ? {\n                              color: \"#2C39B5\",\n                              fontWeight: \"500\",\n                              background: \"#F2F2FF\",\n                            }\n                          : {}\n                      }\n                    >\n                      {listItem.title}\n                    </li>\n                  ))}\n                </SubCate>\n              )}\n            </MainCate>\n          ))}\n          <div></div>\n        </CategoryTab>\n      </HeaderMenu>\n    </HeaderStyle>\n  );\n};\n\nexport default Header;\n","import styled from \"@emotion/styled\";\n\nexport const FooterStyle = styled.div`\n  width: 100vw;\n  text-align: center;\n  margin: 0 auto;\n  border-top: 1px solid #f2f2ff;\n`;\nexport const FooterTop = styled.div`\ntext-align: start;\n  width: 1300px;\n  margin: 0 auto;\n  height: 70px;\n  padding-top: 30px;\n`;\nexport const FooterLogo = styled.img`\n  width: 60px;\n  height: 50px;\n  background-color: transparent;\n`;\nexport const FooterMain = styled.div`\n  width: 1300px;\n  margin: 0 auto;\n  display: flex;\n  height: 270px;\n\n  padding-top: 25px;\n  div {\n    text-align: start;\n  }\n  h1 {\n    text-align: start;\n    color: #777;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  h2 {\n    color: #2c39b5;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n  }\n  img {\n    margin-right: 15px;\n  }\n`;\nexport const FooterMainContact = styled.div`\n  width: 550px;\n`;\nexport const FooterMainInfo = styled.div`\n  width: 610px;\n`;\nexport const FooterBottom = styled.div`\n  border-top: 1px solid #2c39b5;\n  height: 60px;\n  span {\n    color: #777;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\n","import React from \"react\";\nimport { FooterBottom, FooterLogo, FooterMain, FooterMainContact, FooterMainInfo, FooterStyle, FooterTop } from \"../../styles/footer/FooterStyle\";\n\nconst Footer = () => {\n\n  return (\n    <FooterStyle>\n      <FooterTop>\n        <FooterLogo src=\"/images/logo.svg\" />\n        {/* <FooterLogo>로고</FooterLogo> */}\n      </FooterTop>\n      <FooterMain>\n        <FooterMainContact>\n          <h1>상호:Billy</h1>\n          <h1>팀장:박준서,한상원</h1>\n          <br />\n          <h1>깃 주소:</h1>\n          <h1>https://github.com/계정명/프로젝트명</h1>\n          <br />\n          <br />\n          <h1>전화번호 : 0507-1414-1018</h1>\n          <h1>팀장 이메일 : 0000@gmail.com & 0000@gmail.com</h1>\n          <br />\n          <br />\n          <h1>주소 : 대구 중구 중앙대로 394 제일빌딩 5F </h1>\n        </FooterMainContact>\n        <FooterMainInfo>\n          <h2>COMPANY</h2>\n          <br />\n          <br />\n          <h1>회사소개 이용약관 개인정보처리방침 제휴문의 고객센터</h1>\n          <br />\n          <br />\n          <h2>INTRODUCE</h2>\n          <br />\n          <br />\n          <h1>FRONT-END 박준서 김경민 박소연 사공은진 최배근</h1>\n          <br />\n          <br />\n          <h1>BACK-END 한상원 김현빈 김현일 조현민</h1>\n        </FooterMainInfo>\n        <div>\n          <h2>SOCIAL</h2>\n          <br />\n          <br />\n          <img src=\"/images/footer/gitHub.svg\" />\n          <img src=\"/images/footer/notion.svg\" />\n          <img src=\"/images/footer/figma.svg\" />\n        </div>\n      </FooterMain>\n      <FooterBottom>\n        <span>Copyright © 회사명 Inc. all rights reserved. </span>\n      </FooterBottom>\n    </FooterStyle>\n  );\n};\n\nexport default Footer;\n","\n// import React, { useEffect, useState } from 'react';\n// import { EventSourcePolyfill } from 'event-source-polyfill';\n// import { SERVER_URL } from '../../api/config';\n// import { getCookie } from '../../util/cookieUtil';\n// import { ModalBackground } from '../joinpopup/JoinPopUp';\n// import FetchSSEModal from './FetchSSEModal';\n\nconst FetchSSE = () => {\n\n//   const path2 = `${SERVER_URL}/api`;\n//   const url = `${path2}/sse/connect`;\n//   const memberInfo = getCookie(\"member\");\n//   const authToken = memberInfo ? memberInfo.accessToken : 'your_default_token';\n//   const [ticket, setTicket] = useState([]);\n//   const [closeModal, setCloseModal] = useState(false);\n\n//   useEffect(() => {\n//     const eventSource = new EventSourcePolyfill(url, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//         Accept: `text/event-stream`,\n//       },\n//     });\n\n//     // SSE 엔드포인트에서 데이터 수신을 처리하는 이벤트 리스너\n//     eventSource.onmessage = (event) => {\n//       const data = JSON.parse(event.data);\n//       setCloseModal(true);\n//       console.log('Received data:', data);\n//       // setTicket(JSON.stringify(data));\n//     };\n\n//     // SSE 오류를 처리하는 이벤트 리스너\n//     eventSource.addEventListener('error', (error) => {\n//       console.error('SSE Error:', error);\n//     });\n\n//     // 정리: 컴포넌트가 언마운트될 때 EventSource 연결 닫기\n//     return () => {\n//       eventSource.close();\n//     };\n//   }, [url, authToken]);\n\n//   const handleConfirm = async () => {\n//     setCloseModal(false);\n//   }\n\n//   return (\n//     <div>\n//     {closeModal && (\n//       <>\n//        <FetchSSEModal onConfirm={handleConfirm}/>\n//        <ModalBackground></ModalBackground>\n//       </>\n//     )}\n//   </div>\n//   );\n\n\n};\n\nexport default FetchSSE;\n","import React from \"react\";\nimport Header from \"../components/header/Header\";\nimport Footer from \"../components/footer/Footer\";\nimport FetchSSE from \"../components/SSE/fetchSSE\";\n\nconst Layout = ({ children }) => {\n  return (\n    <div>\n      <FetchSSE />\n      <header>\n        <Header />\n      </header>\n      <div style={{ position: 'absolute', top: '250px', left: '0', width: '100%' }}>\n      <main>{children}</main>\n      <footer>\n        <Footer />\n      </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import styled from \"@emotion/styled\";\n// 헤더\nexport const HeaderStyle = styled.div`\n  position: fixed;\n  z-index: 100;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #fff;\n  width: 100vw;\n  text-align: center;\n  padding-bottom: 15px;\n  height: 155px;\n`;\nexport const HeaderTop = styled.div`\n  margin: 30px auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 1300px;\n`;\nexport const HeaderLogo = styled.img`\n  width: 90px;\n  height: 60px;\n  background-color: transparent;\n  cursor: pointer;\n`;\nexport const SearchForm = styled.div`\n  display: flex;\n  position: relative;\n  width: 640px;\n  height: 60px;\n  align-items: center;\n  border-radius: 80px;\n  border: 1px solid #2c39b5;\n  input {\n    width: 350px;\n    height: 58px;\n    padding-left: 20px;\n  }\n  input:hover {\n    width: 350px;\n    background-color: #eee;\n    border-radius: 45px;\n  }\n  select {\n    width: 120px;\n    height: 22px;\n    font-size: 12px;\n    border: 1px solid #2c39b5;\n  }\n`;\n\nexport const SearchDiv = styled.div`\n    width: 290px;\n    height: 58px;\n    :hover {\n      background-color: #eee;\n      border-radius: 45px;\n    }\n    b {\n    display: flex;\n    height: 50%;\n    font-size: 16px;\n    color: #777;\n    font-weight: 400;\n    padding-top: 10px;\n    padding-left: 25px;\n    }\n    >div {\n      display: flex;\n      align-items: center;\n      gap: 5px;\n      height: 50%;\n      padding-left: 25px;\n      p {\n        display: block;\n        content: \"\";\n        width: 1px;\n        height: 10px;\n        background: #2c39b5;\n      }\n      span {\n        line-height: 1.6;\n        font-size: 12px;\n        cursor: pointer;\n      }\n    }\n`\n\nexport const SearchWord = styled.input`\n  display: flex;\n  width: 350px;\n  height: 60px;\n  flex-direction: column;\n  justify-content: center;\n  flex-shrink: 0;\n  border: none;\n  background-color: transparent;\n  color: rgb(0, 0, 0);\n  font-size: 16px;\n  font-style: normal;\n  line-height: 24px; /* 80% */\n  letter-spacing: 0.5px;\n`;\nexport const SearchDivisionLine = styled.div`\nwidth: 1px;\nheight: 26px;\nbackground: #eee;\n`;\nexport const SearchBt = styled.button`\n  position: absolute;\n  right: 10px;\n  width: 40px;\n  height: 40px;\n  border-radius: 100%;\n  flex-shrink: 0;\n  border: none;\n  background-image: url(\"/images/header/bt_search.svg\");\n  cursor: pointer;\n`;\nexport const LoginState = styled.div`\n  display: flex;\n  align-items: center;\n  width: 200px;\n  height: 20px;\n  justify-content: space-between;\n  button {\n    width: 80px;\n    background: transparent;\n    border: none;\n    color: #777;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 16px;\n    cursor: pointer;\n  }\n`;\nexport const HeaderMenu = styled.div`\n  margin: 0 auto;\n  width: 1300px;\n  display: flex;\n  gap: 40px;\n  ul {\n    gap: 40px;\n    display: flex;\n    list-style: none;\n  }\n  li {\n    color: #4b4b4b;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 16px;\n  }\n`;\nexport const HeaderMainMenu = styled.div`\n  display: block;\n  width: 35px;\n  height: 35px;\n  img {\n    padding: 7px;\n    cursor: pointer;\n  }\n`;\n\n// 카테고리 메뉴창\nexport const CategoryTab = styled.div`\n  display: flex;\n  gap: 5px;\n`;\nexport const MainCate = styled.div`\n  width: 100px;\n`;\nexport const MainCateTitle = styled.li`\n  height: 30px;\n  width: 85px;\n  margin: 0 auto 5px;\n  padding-top: 6px;\n  cursor: pointer;\n`;\nexport const SubCate = styled.div`\n  display: block;\n  border: 1px solid #2c39b5;\n  width: 100px;\n  padding-top: 10px;\n  background: #fff;\n  li {\n    margin-bottom: 10px;\n    padding: 7px 0;\n    color: #777;\n    cursor: pointer;\n  }\n`;\n\nexport const CateHover = styled.div`\n  display: block;\n  position: absolute;\n  top: 70px;\n  right: 20px;\n  border: 1px solid #2c39b5;\n  width: 245px;\n  height: 90px; \n  padding: 15px;\n  background: #fff;\n  div {\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n    h1 {\n      font-size: 12px;\n      font-weight: 400;\n      color: #777;\n    }\n  }\n`\n","import styled from \"@emotion/styled\";\n\nexport const LoginPageStyle = styled.div`\n  width: 1300px;\n  /* text-align: center; */\n  margin: 0 auto;\n  /* background: skyblue; */\n  padding-bottom: 120px;\n`;\nexport const LogoZone = styled.div`\nwidth: 100%;\ntext-align: center;\n`;\nexport const Logo = styled.img`\n  margin: 0px auto 30px auto;\n  width: 80px;\n  height: 60px;\n  background-color: transparent;\n`;\nexport const LoginBox = styled.div`\n  margin: 0 auto;\n  /* box-sizing: border-box; */\n  width: 450px;\n  height: ${props => (props.height ? props.height : \"540px\")};\n  /* height: 540px; */\n  border-radius: 10px;\n  border: 1px solid #2c39b5;\n  padding-left: 30px;\n  p {\n    margin-top: 50px;\n    margin-bottom: ${props => (props.mgbtm ? props.mgbtm : \"160px\")};\n\n    color: #000;\n    font-family: KyivType Sans;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 350;\n    line-height: normal;\n  }\n  li {\n    position: relative;\n    cursor: pointer;\n\n    color: #000;\n    font-family: KyivType Sans;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  \n`;\nexport const IdBox = styled.input`\n  width: 390px;\n  height: 50px;\n  border-radius: 10px;\n  border: 1px solid #2c39b5;\n  padding-left: 20px;\n\n  color: #000;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  margin-bottom: 10px;\n`;\nexport const PwBox = styled(IdBox)`\n  margin-bottom: 30px;\n`;\nexport const LoginBt = styled.button`\n  width: 390px;\n  height: 50px;\n  border-radius: 10px;\n  background: #2c39b5;\n  margin-bottom: 20px;\n  border: 0;\n  color: #fff;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  cursor: pointer;\n`;\nexport const DivisionLine = styled.div`\n  width: 1px;\n  height: 15px;\n  background: ${props => (props.color ? props.color : \"#2c39b5\")};\n`;\n","import axios from \"axios\";\nimport { getCookie, setCookie } from \"./cookieUtil\";\nimport { SERVER_URL } from \"../api/config\";\n\nexport const jwtAxios = axios.create();\n\nconst beforeReq = config => {\n  // console.log(\"1. 요청전 전달\", config);\n  // console.log(\"2. 쿠키로 토큰가져오기\");\n  const memberInfo = getCookie(\"member\");\n\n  if (!memberInfo) {\n    // console.log(\"쿠키 정보 없네요.\");\n    return Promise.reject({ response: { data: { error: \"Login하세요.\" } } });\n  }\n  // console.log(\"3. 쿠키에서 토큰 정보를 뜯는다.\");\n  const { accessToken } = memberInfo;\n  // console.log(\"4. 엑세스토큰 정보\", accessToken);\n  config.headers.Authorization = `Bearer ${accessToken}`;\n  return config;\n};\n\nconst requestFail = error => {\n  // console.log(\"요청후 실패시\", error);\n  return Promise.reject(error);\n};\n\nconst refreshJWT = async (accessToken, refreshToken) => {\n  const host = SERVER_URL;\n  const header = { headers: { Authorization: `Bearer ${accessToken}` } };\n  const res = await axios.get(\n    `${host}/api/user/refresh-token?refreshToken=${refreshToken}`,\n    header,\n  );\n  // console.log(\"1. refreshToken 토큰 요청\");\n  // console.log(\"2. 백엔드에서 새로 준 값\", res.data);\n  return res.data;\n};\n\nconst beforeRes = async res => {\n  // console.log(\"Response 전처리\", res);\n  const data = res.data;\n  // console.log(\"1. Response 오기전 서버 전달해준 데이터, data\");\n  if (data && data.error === \"ERROR_ACCESS_TOKEN\") {\n    // console.log(\"2. 일반적 오류가 아닌 엑세스 토큰 에러입니다.\");\n    // console.log(\"3. 새로운 토큰을 요청해야 합니다.\");\n    // console.log(\"4. 쿠키에 있는 정보를 읽어서 다시 시도합니다.\");\n    const memberInfo = getCookie(\"member\");\n    // console.log(\"5. 쿠키 토큰 정보 AccessToken\", memberInfo.accessToken);\n    // console.log(\"6. 쿠키 토큰 정보 RefreshToken\", memberInfo.refreshToken);\n    // console.log(\"7. 위의 정보로 새로운 토큰을 요청합니다.\");\n    const result = await refreshJWT(\n      memberInfo.accessToken,\n      memberInfo.refreshToken,\n    );\n    // console.log(\"8. 요청 이후 되돌아와서 새로운 정보로 쿠키를 업데이트\");\n    (memberInfo.accessToken = result.accessToken),\n      (memberInfo.refreshToken = result.refreshToken),\n      setCookie(\"member\", JSON.stringify(memberInfo));\n\n    // console.log(\"9. 데이터 요청하던 API 재요청\");\n    const originalRequest = res.config;\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`;\n    return await axios(originalRequest);\n  }\n  return res;\n};\n\nconst responseFail = error => {\n  // console.log(\"Response Fail Err\", error);\n  return Promise.reject(error);\n};\n\njwtAxios.interceptors.request.use(beforeReq, requestFail);\njwtAxios.interceptors.response.use(beforeRes, responseFail);\n"],"names":["client_id","redirect_uri","authParam","URLSearchParams","response_type","getKakaoLoginLink","concat","toString","getAccessToken","async","params","grant_type","code","authCode","axios","post","headers","data","access_token","getMemberWithAccessToken","response","fetch","Authorization","accessToken","ok","json","Error","kakaoLogout","method","console","log","document","cookie","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","sessionStorage","getItem","doLogin","loginParam","successFn","failFn","errorFn","_ref","loginPostAsync","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","_jsx","Navigate","to","userAuth","MenuTabStyle","styled","div","_templateObject","_taggedTemplateLiteral","MainMenu","_templateObject2","MainMenuList","_templateObject3","SubMenuList","_templateObject4","mainCate","id","title","subCate","MenuTab","activeCategory","setActiveCategory","useState","handleCategoryLeave","children","map","item","_jsxs","listItem","onClick","window","location","reload","onMouseEnter","handleCategoryHover","category","onMouseLeave","style","color","fontWeight","searchName","pageNum","isHovered","setIsHovered","isCateHoverVisible","setIsCateHoverVisible","isSearchWord","setIsSearchWord","search","setSearch","mc","setMc","sc","setSc","searchWordRef","useRef","searchBtRef","onClickSearch","e","preventDefault","setItem","sendData","errFn","url","SERVER_URL","res","jwtAxios","get","status","charAt","error","searchGet","result","searchValue","selectedValue","setSelectedValue","selectedSubCate","setSelectedSubCate","selectedSubValue","setSelectedSubValue","handleClickOutsideCateHover","target","closest","handleClickOutsideSearchWord","scrollPosition","setScrollPosition","updateScroll","scrollY","documentElement","scrollTop","useEffect","addEventListener","removeEventListener","menuVisible","setMenuVisible","inSectionMenu","toggleMenu","prev","clickMenuOutside","current","contains","activeSubCate","setActiveSubCate","handleSubCateLeave","HeaderStyle","boxShadow","HeaderTop","HeaderLogo","src","handleLogo","className","SearchForm","SearchWord","ref","onChange","value","handleChangeSearch","onKeyDown","key","click","type","placeholder","min","handleSearchWordClick","backgroundColor","borderRadius","SearchDivisionLine","SearchDiv","handleSearchDivClick","CateHover","event","selectedOption","find","parseInt","selectedMainCategoryId","selectedSubCategory","defaultValue","disabled","hidden","SearchBt","LoginState","handleLogout","DivisionLine","Link","subItem","handleLogin","handleJoin","HeaderMenu","HeaderMainMenu","CategoryTab","MainCate","MainCateTitle","fontSize","SubCate","handleSubCateHover","background","FooterStyle","FooterTop","FooterLogo","img","FooterMain","FooterMainContact","_templateObject5","FooterMainInfo","_templateObject6","FooterBottom","_templateObject7","Footer","FetchSSE","Header","position","top","left","width","input","button","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","li","_templateObject14","_templateObject15","_templateObject16","LoginPageStyle","LogoZone","Logo","LoginBox","props","height","mgbtm","IdBox","PwBox","LoginBt","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","refreshToken","host","header","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}