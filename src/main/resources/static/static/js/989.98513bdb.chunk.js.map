{"version":3,"file":"static/js/989.98513bdb.chunk.js","mappings":"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","sources":["api/free/free_api.js","pages/free/FreePage.js","styles/free/FreePageStyle.js","util/jwtUtil.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport { jwtAxios } from \"../../util/jwtUtil\";\r\n\r\n// FreePage 전체 게시글 호출\r\nexport const getFreeList = async ({ sendData }) => {\r\n  try {\r\n    const url = `${SERVER_URL}/api/board?page=${sendData.page}&search=${sendData.search}&type=${sendData.type}`;\r\n\r\n    const res = await axios.get(url);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 게시글 DetailsPage\r\nexport const getFreeData = async iboard => {\r\n  try {\r\n    const url = `${SERVER_URL}/api/board/${iboard}`;\r\n\r\n    const res = await axios.get(url);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 게시글 등록\r\nexport const postFreeData = async () => {\r\n  try {\r\n    const url = `${SERVER_URL}/api/board`;\r\n\r\n    const res = await jwtAxios.get(url);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport {\r\n  BtSection,\r\n  FreeHeader,\r\n  FreeMain,\r\n  FreePageStyle,\r\n  FreeSearchForm,\r\n  PaginationButton,\r\n  PaginationContainer,\r\n  SearchSection,\r\n  SortWrap,\r\n} from \"../../styles/free/FreePageStyle\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getFreeList } from \"../../api/free/free_api\";\r\nimport { usePagination, useTable } from \"react-table\";\r\n\r\n// search 카테고리\r\nconst searchCate = [\r\n  {\r\n    id: 1,\r\n    title: \"제목\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"내용\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"제목+내용\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"닉네임\",\r\n  },\r\n];\r\n\r\n// 더미데이터\r\nconst freeData = [\r\n  {\r\n    id: 1,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"650\",\r\n    look: \"650\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"600\",\r\n    look: \"600\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"350\",\r\n    look: \"350\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"250\",\r\n    look: \"250\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"150\",\r\n    look: \"150\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"120\",\r\n    look: \"120\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"50\",\r\n    look: \"50\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 8,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"8\",\r\n    look: \"8\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 9,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"9\",\r\n    look: \"9\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 10,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"10\",\r\n    look: \"10\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 11,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"11\",\r\n    look: \"11\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 12,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"12\",\r\n    look: \"12\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 13,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"13\",\r\n    look: \"13\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 14,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"14\",\r\n    look: \"14\",\r\n    date: \"2024.02.20\",\r\n  },\r\n];\r\n\r\nconst FreePage = () => {\r\n  // 검색 데이터 연동\r\n  const [type, setType] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const searchWordRef = useRef(null);\r\n  const searchBtRef = useRef(null);\r\n\r\n  const handleType = e => {\r\n    const selectedOption = searchCate.find(item => item.id === e.target.value);\r\n    // setSelectedSubValue(selectedOption ? selectedOption.title : \"\");\r\n    setType(selectedOption ? selectedOption.id : \"\");\r\n  };\r\n  const handleChangeSearch = e => {\r\n    setSearch(e.target.value);\r\n  };\r\n  const handleKeyDown = e => {\r\n    // 키 다운 이벤트 처리 함수\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      searchBtRef.current.click(); // SearchBt 클릭 이벤트 호출\r\n    }\r\n  };\r\n  const onClickSearch = e => {\r\n    e.preventDefault();\r\n    // console.log(\"검색실행\", search);\r\n    sessionStorage.setItem(\"searchValue\", search);\r\n    const sendData = {\r\n      search: search,\r\n      type: type,\r\n      page: 1,\r\n    };\r\n    getFreeList({ sendData, failFn, errFn });\r\n    // navigate(`/more/${searchName}/${pageNum}`)\r\n  };\r\n\r\n  // 데이터 연동\r\n  const [freeList, setFreeList] = useState([]);\r\n  const freeListData = () => {\r\n    getFreeList({ setFreeList, failFn, errFn });\r\n  };\r\n\r\n  // table 헤더\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      Header: \"제목\",\r\n      accessor: \"title\",\r\n    },\r\n    {\r\n      Header: \"닉네임\",\r\n      accessor: \"nick\",\r\n    },\r\n    {\r\n      Header: \"좋아요\",\r\n      accessor: \"isLiked\",\r\n    },\r\n    {\r\n      Header: \"조회수\",\r\n      accessor: \"view\",\r\n    },\r\n    {\r\n      Header: \"업로드 날짜\",\r\n      accessor: \"createdAt\",\r\n    },\r\n  ]);\r\n\r\n  // 페이지네이션\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    state: { pageIndex },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data: freeList,\r\n      initialState: { pageIndex: 0 },\r\n      ...usePagination,\r\n    },\r\n    usePagination,\r\n  );\r\n\r\n  // 페이지 이동\r\n  const navigate = useNavigate();\r\n  const moveToRegister = () => {\r\n    navigate(`/free/register`);\r\n  };\r\n  const moveToDetail = async _item => {\r\n    const url = `/free/details?iboard=${_item.iboard}`;\r\n    const serverData = {\r\n      iboard: _item.iboard,\r\n    };\r\n    navigate(url);\r\n  };\r\n\r\n  const headerKey = columns.map(header => header.accessor);\r\n  return (\r\n    <Layout>\r\n      <FreePageStyle>\r\n        <FreeHeader>\r\n          <p>자유게시판</p>\r\n          <SearchSection>\r\n            <select onChange={handleType}>\r\n              {searchCate.map(item => {\r\n                return <option key={item.id}>{item.title}</option>;\r\n              })}\r\n            </select>\r\n            <FreeSearchForm>\r\n              <input\r\n                ref={searchWordRef}\r\n                onChange={e => handleChangeSearch(e)}\r\n                onKeyDown={handleKeyDown}\r\n                type=\"text\"\r\n                placeholder=\"검색어를 입력하세요\"\r\n              ></input>\r\n              <button\r\n                ref={searchBtRef}\r\n                onClick={e => onClickSearch(e)}\r\n                type=\"button\"\r\n              ></button>\r\n            </FreeSearchForm>\r\n          </SearchSection>\r\n        </FreeHeader>\r\n        <FreeMain>\r\n          <SortWrap>\r\n            <button>최신순</button>\r\n            <img src=\"/images/main/line.svg\" />\r\n            <button>좋아요순</button>\r\n            <img src=\"/images/main/line.svg\" />\r\n            <button>조회순</button>\r\n          </SortWrap>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {columns.map(header => (\r\n                  <th key={header.Header}>{header.Header}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {freeList.map((item, index) => (\r\n                <tr key={index}>\r\n                  {/* headerKey를 순회하면서 key를 가져옴 */}\r\n                  {headerKey.map(key => (\r\n                    <td key={key + index} onClick={moveToDetail}>\r\n                      {item[key]} {/* key로 객체의 값을 출력 */}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <BtSection>\r\n            <button onClick={moveToRegister}>글쓰기</button>\r\n          </BtSection>\r\n          <div style={{ textAlign: \"center\", margin: \"20px 0\" }}>\r\n            <PaginationContainer>\r\n              <PaginationButton\r\n                onClick={() => gotoPage(0)}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                {\"<<\"}\r\n              </PaginationButton>\r\n              <PaginationButton\r\n                onClick={() => previousPage()}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                {\"<\"}\r\n              </PaginationButton>\r\n              {Array.from(\r\n                { length: Math.floor(freeData.length / 12) + 1 },\r\n                (_, i) => (\r\n                  <PaginationButton\r\n                    key={i}\r\n                    className={pageIndex === i ? \"active\" : \"\"}\r\n                    onClick={() => gotoPage(i)}\r\n                  >\r\n                    {i + 1}\r\n                  </PaginationButton>\r\n                ),\r\n              )}\r\n              <PaginationButton\r\n                onClick={() => nextPage()}\r\n                disabled={!canNextPage}\r\n              >\r\n                {\">\"}\r\n              </PaginationButton>\r\n              <PaginationButton\r\n                onClick={() => gotoPage(pageCount - 1)}\r\n                disabled={!canNextPage}\r\n              >\r\n                {\">>\"}\r\n              </PaginationButton>\r\n            </PaginationContainer>\r\n          </div>\r\n        </FreeMain>\r\n      </FreePageStyle>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FreePage;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FreePageStyle = styled.div`\r\n  width: 1260px;\r\n  margin: 0 auto;\r\n`;\r\nexport const FreeHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #2c39b5;\r\n  padding-bottom: 17px;\r\n  p {\r\n    color: #000;\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const SearchSection = styled.div`\r\n  display: flex;\r\n  width: 330px;\r\n  height: 35px;\r\n  border: 1px solid #bebebe;\r\n  select {\r\n    width: 100px;\r\n    border: none;\r\n    border-right: 1px solid #bebebe;\r\n  }\r\n`;\r\nexport const FreeSearchForm = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 230px;\r\n  height: 35px;\r\n  padding: 0 10px;\r\n  /* border: 1px solid #BEBEBE; */\r\n  input {\r\n    border: none;\r\n    width: 180px;\r\n    height: 30px;\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n  }\r\n  button {\r\n    width: 16px;\r\n    height: 16px;\r\n    background-image: url(\"/images/free/bt_search.svg\");\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const FreeMain = styled.div`\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  th {\r\n    height: 50px;\r\n    border-bottom: 1px solid #bebebe;\r\n    text-align: center;\r\n    background: #e4e7ff;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n  }\r\n  td {\r\n    height: 60px;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #bebebe;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    background: #fff;\r\n  }\r\n`;\r\n\r\nexport const SortWrap = styled.div`\r\n  margin-top: 25px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 10px;\r\n  button {\r\n    border: none;\r\n    background: transparent;\r\n    font-size: 15px;\r\n    color: #777;\r\n    cursor: pointer;\r\n  }\r\n  img {\r\n    width: 2px;\r\n    height: 15px;\r\n  }\r\n`;\r\n\r\nexport const BtSection = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n  button {\r\n    width: 150px;\r\n    height: 40px;\r\n    background: #2c39b5;\r\n    border: none;\r\n\r\n    color: #fff;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const PaginationContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n`;\r\nexport const PaginationButton = styled.button`\r\n  padding: 5px 10px;\r\n  font-size: 16px;\r\n  margin-right: 10px;\r\n  background-color: #ffffff;\r\n  border: none;\r\n  cursor: pointer;\r\n  &.active {\r\n    font-weight: bold;\r\n    background-color: #ffffff;\r\n    color: #fff;\r\n    background-color: #ffd4d4;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #ffd4d4;\r\n  }\r\n\r\n  &.next-page,\r\n  &.last-page {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./cookieUtil\";\r\nimport { SERVER_URL } from \"../api/config\";\r\n\r\nexport const jwtAxios = axios.create();\r\n\r\nconst beforeReq = config => {\r\n  // console.log(\"1. 요청전 전달\", config);\r\n  // console.log(\"2. 쿠키로 토큰가져오기\");\r\n  const memberInfo = getCookie(\"member\");\r\n\r\n  if (!memberInfo) {\r\n    // console.log(\"쿠키 정보 없네요.\");\r\n    return Promise.reject({ response: { data: { error: \"Login하세요.\" } } });\r\n  }\r\n  // console.log(\"3. 쿠키에서 토큰 정보를 뜯는다.\");\r\n  const { accessToken } = memberInfo;\r\n  // console.log(\"4. 엑세스토큰 정보\", accessToken);\r\n  config.headers.Authorization = `Bearer ${accessToken}`;\r\n  return config;\r\n};\r\n\r\nconst requestFail = error => {\r\n  // console.log(\"요청후 실패시\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst refreshJWT = async (accessToken, refreshToken) => {\r\n  const host = SERVER_URL;\r\n  const header = { headers: { Authorization: `Bearer ${accessToken}` } };\r\n  const res = await axios.get(\r\n    `${host}/api/user/refresh-token?refreshToken=${refreshToken}`,\r\n    header,\r\n  );\r\n  // console.log(\"1. refreshToken 토큰 요청\");\r\n  // console.log(\"2. 백엔드에서 새로 준 값\", res.data);\r\n  return res.data;\r\n};\r\n\r\nconst beforeRes = async res => {\r\n  // console.log(\"Response 전처리\", res);\r\n  const data = res.data;\r\n  // console.log(\"1. Response 오기전 서버 전달해준 데이터, data\");\r\n  if (data && data.error === \"ERROR_ACCESS_TOKEN\") {\r\n    // console.log(\"2. 일반적 오류가 아닌 엑세스 토큰 에러입니다.\");\r\n    // console.log(\"3. 새로운 토큰을 요청해야 합니다.\");\r\n    // console.log(\"4. 쿠키에 있는 정보를 읽어서 다시 시도합니다.\");\r\n    const memberInfo = getCookie(\"member\");\r\n    // console.log(\"5. 쿠키 토큰 정보 AccessToken\", memberInfo.accessToken);\r\n    // console.log(\"6. 쿠키 토큰 정보 RefreshToken\", memberInfo.refreshToken);\r\n    // console.log(\"7. 위의 정보로 새로운 토큰을 요청합니다.\");\r\n    const result = await refreshJWT(\r\n      memberInfo.accessToken,\r\n      memberInfo.refreshToken,\r\n    );\r\n    // console.log(\"8. 요청 이후 되돌아와서 새로운 정보로 쿠키를 업데이트\");\r\n    (memberInfo.accessToken = result.accessToken),\r\n      (memberInfo.refreshToken = result.refreshToken),\r\n      setCookie(\"member\", JSON.stringify(memberInfo));\r\n\r\n    // console.log(\"9. 데이터 요청하던 API 재요청\");\r\n    const originalRequest = res.config;\r\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`;\r\n    return await axios(originalRequest);\r\n  }\r\n  return res;\r\n};\r\n\r\nconst responseFail = error => {\r\n  // console.log(\"Response Fail Err\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\njwtAxios.interceptors.request.use(beforeReq, requestFail);\r\njwtAxios.interceptors.response.use(beforeRes, responseFail);\r\n"],"names":["getFreeList","async","sendData","_ref","url","concat","SERVER_URL","page","search","type","axios","get","data","error","console","log","searchCate","id","title","freeData","nick","like","look","date","FreePage","setType","useState","setSearch","searchWordRef","useRef","searchBtRef","freeList","setFreeList","columns","React","Header","accessor","getTableProps","getTableBodyProps","headerGroups","prepareRow","canPreviousPage","canNextPage","pageCount","gotoPage","nextPage","previousPage","state","pageIndex","useTable","initialState","usePagination","navigate","useNavigate","moveToDetail","_item","iboard","headerKey","map","header","_jsx","Layout","children","_jsxs","FreePageStyle","FreeHeader","SearchSection","onChange","e","selectedOption","find","item","target","value","FreeSearchForm","ref","handleChangeSearch","onKeyDown","key","preventDefault","current","click","placeholder","onClick","sessionStorage","setItem","failFn","errFn","onClickSearch","FreeMain","SortWrap","src","index","BtSection","moveToRegister","style","textAlign","margin","PaginationContainer","PaginationButton","disabled","Array","from","length","Math","floor","_","i","className","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","button","_templateObject9","jwtAxios","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","response","accessToken","headers","Authorization","res","result","refreshToken","host","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}