{"version":3,"file":"static/js/997.4118aef4.chunk.js","mappings":"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","sources":["api/login/kakao_api.js","components/joinpopup/JoinPopUp.js","hooks/useCustomLogin.js","api/admin/admin_user_api.js","styles/admin/AdminReportPageStyle.js","pages/admin/AdminMemberPage.js","components/admin/ReportContent.js","api/admin/admin_report_api.js","pages/admin/AdminReportPage.js","api/admin/admin_board_api.js","styles/admin/AdminBoardPageStyle.js","pages/admin/AdminBoardPage.js","styles/PaginationStyle.js","pages/admin/AdminFreeBoardPage.js","components/admin/AdminChatHistoryModal.js","pages/admin/AdminChatHistoryPage.js","components/admin/AdminCategory.js","styles/admin/AdminPageStyle.js","components/admin/AdminReserve.js","pages/admin/AdminReservepage.js","api/admin/admin_reserve_api.js","pages/admin/AdminPage.js","styles/header/HeaderStyle.js","styles/login/LoginPageStyle.js","util/jwtUtil.js"],"sourcesContent":["import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\n// 앱 등록시 Rest 키 값(절대 오픈 금지)\nconst client_id = \"beae94b18549648a1e9a98b4e0d945b2\";\n// 카카오 로그인 통과시 이동할 주소\nconst redirect_uri = \"http://localhost:3000/login/kakao\";\n// 카카오 로그인 문서 참조\nconst auth_code_path = \"https://kauth.kakao.com/oauth/authorize\";\nconst response_type = \"code\";\nconst authParam = new URLSearchParams({\n  client_id,\n  redirect_uri,\n  response_type,\n});\n\n// 카카오 로그인시 활용\nexport const getKakaoLoginLink = () => {\n  const kakaoURL = `${auth_code_path}?${authParam.toString()}`;\n  return kakaoURL;\n};\n// access 토큰 받기 경로\nconst access_token_url = `https://kauth.kakao.com/oauth/token`;\nexport const getAccessToken = async authCode => {\n  const header = {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n    },\n  };\n\n  const params = {\n    grant_type: \"authorization_code\",\n    client_id: client_id,\n    redirect_uri: redirect_uri,\n    code: authCode,\n  };\n\n  const res = await axios.post(access_token_url, params, header);\n  const accessToken = res.data.access_token;\n  return accessToken;\n};\n\n// Access Token 으로 회원정보 가져오기\nexport const getMemberWithAccessToken = async accessToken => {\n  const response = await fetch(\"https://kapi.kakao.com/v2/user/me\", {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n  if (response.ok) {\n    const memberInfo = await response.json();\n    // const uniqueID = memberInfo.id;\n    // console.log(\"Unique ID: \", uniqueID);\n    return memberInfo;\n  } else {\n    throw new Error(\"Failed to get member info\");\n  }\n};\n\n// 카카오 로그아웃\nexport const kakaoLogout = async accessToken => {\n  const response = await fetch(\"https://kapi.kakao.com/v1/user/logout\", {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n  if (response.ok) {\n    console.log(\"Logout successful\");\n    document.cookie = \"cookieName=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n  } else {\n    console.log(\"Logout failed\");\n  }\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nexport const ModalBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n`;\n\nconst JoinPopUp = ({ txt, txt2, onConfirm }) => {\n  const JoinPopUp = styled.div`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n\n    width: 300px;\n    height: 180px;\n    display: flex;\n\n    flex-direction: column;\n    text-align:center;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n\n    border-radius: 10px;\n    border: 1px solid #2c39b5;\n    background: #fff;\n    b {\n      color: #000;\n      text-align: center;\n      font-size: 20px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: normal;\n    }\n    button {\n      width: 100px;\n      height: 50px;\n      border-radius: 5px;\n      border: none;\n      background: #2c39b5;\n      cursor: pointer;\n      color: #fff;\n      font-size: 20px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: normal;\n    }\n  `;\n\n  return (\n    <JoinPopUp>\n      <div>\n        <b>{txt}</b>\n        <br />\n        <b>{txt2}</b>\n      </div>\n      <button onClick={onConfirm}>확인</button>\n    </JoinPopUp>\n  );\n};\n\nexport default JoinPopUp;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { loginPostAsync, logout } from \"../slices/loginSlice\";\nimport { kakaoLogout } from \"../api/login/kakao_api\";\n\nconst useCustomLogin = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  // RTK 상태값 읽기\n  const loginState = useSelector(state => state.loginSlice);\n  // 로그인 상태값 파악\n  const isLogin = sessionStorage.getItem(\"isLogin\") === \"true\";\n  // 로그인 기능\n  const doLogin = async ({ loginParam, successFn, failFn, errorFn }) => {\n    const action = await dispatch(\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\n    );\n    return action.payload;\n  };\n  // 일반유저 vs 관리자\n  const userAuth = sessionStorage.getItem(\"userAuth\");\n\n  // 로그아웃 기능\n  const doLogout = () => {\n    dispatch(logout());\n    kakaoLogout();\n  };\n  // 패스이동 기능\n  const moveToPath = path => {\n    navigate({ pathname: path }, { replace: true });\n  };\n  // 로그인 페이지 이동 기능\n  const moveToLogin = () => {\n    return <Navigate replace to=\"/member/login\" />;\n  };\n\n  return {\n    loginState,\n    isLogin,\n    doLogin,\n    doLogout,\n    moveToPath,\n    moveToLogin,\n    userAuth,\n  };\n};\n\nexport default useCustomLogin;\n","import { SERVER_URL } from \"../config\";\nimport { jwtAxios } from \"../../util/jwtUtil\";\n\nconst path = `${SERVER_URL}/api`;\n\nexport const getProducts = async (page, type, search, status, setTotalUserCount) => {\n  try {\n    let url = `${path}/admin/user?page=${page}&type=${type}`;\n\n    // if (type) {\n    //   url += `&type=${type}`;\n    // }\n\n    if (search) {\n      url += `&search=${search}`;\n    }\n\n    if (status) {\n      url += `&status=${status}`;\n    }\n\n    const res = await jwtAxios.get(url);\n    setTotalUserCount(res.data.totalUserCount)\n    return res.data?.users ?? [];\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n};\n\nexport const deleteUser = async (iuser, reason) => {\n  try {\n    const url = `${path}/admin/user/${iuser}?reason=${reason}`;\n    const res = await jwtAxios.delete(url); // Changed method to DELETE\n    return res.data?.user ?? null; // Assuming the response contains a single user object\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n","import styled from \"@emotion/styled\";\nimport { Pagination } from \"antd\";\n\nexport const ReportTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* border-bottom: 1px solid #c14b45; */\n  padding-bottom: 17px;\n  margin-bottom: 30px;\n  h1 {\n    font-size: 20px;\n    font-weight: 400;\n  }\n  select {\n    width: 120px;\n    height: 30px;\n    border: 1px solid #c14b45;\n    cursor: pointer;\n    letter-spacing: 1px;\n  }\n`;\n\nexport const ReportSearchForm = styled.div`\n  display: flex;\n  width: 230px;\n  height: 35px;\n  padding-left: 10px;\n  align-items: center;\n  border-radius: 5px;\n  border: 1px solid #bebebe;\n`;\n\nexport const ReportSearchWord = styled.input`\n  width: 190px;\n  border: none;\n\n  color: rgb(0, 0, 0);\n  font-size: 16px;\n  letter-spacing: 1.5px;\n`;\n\nexport const ReportSearchBt = styled.button`\n  width: 16px;\n  height: 16px;\n  background-image: url(\"/images/admin/bt_search.svg\");\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\n//member page\n\nexport const SearchOptionSelect = styled.select`\n  width: 120px;\n  height: 35px;\n`;\n\nexport const MemberTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  h1 {\n    font-size: 20px;\n    font-weight: 400;\n  }\n  select {\n    width: 100px;\n    height: 35px;\n    border-radius: 5px;\n    text-align: center;\n    border: 1px solid #bebebe; /* 변경된 부분 */\n    font-size: 16px;\n  }\n`;\n\nexport const MemberSearchWord = styled.input`\n  width: 180px;\n  flex-grow: 1; /* 변경된 부분 */\n  border: 1px solid #bebebe; /* 변경된 부분 */\n  border-radius: 5px;\n  color: rgb(0, 0, 0);\n  font-size: 16px;\n  padding-left: 10px;\n`;\n\nexport const MemberSearchForm = styled.div`\n  display: flex;\n  width: 330px;\n  height: 35px;\n  align-items: center;\n  border: 1px solid #bebebe;\n  border-radius: 5px;\n\n  > select {\n    width: 120px;\n    height: 35px;\n    border: none;\n    background-color: transparent;\n    border-right: 1px solid #bebebe;\n    border-radius: 5px 0 0 5px;\n  }\n\n  > input {\n    width: 200px;\n    border: none;\n    color: rgb(0, 0, 0);\n    font-size: 16px;\n    letter-spacing: 1.5px;\n  }\n`;\n\nexport const MemberSearchBt = styled.button`\n  width: 16px;\n  height: 16px;\n  background-image: url(\"/images/admin/bt_search.svg\");\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  margin-right: 10px;\n`;\n\n//report page\nexport const ReportMain = styled.div`\n  table {\n    width: 100%;\n    text-align: center;\n    border-collapse: collapse;\n  }\n  thead {\n    height: 60px;\n    background: #ffe6e6;\n    font-size: 16px;\n  }\n  th {\n    border: 2px solid #fff;\n  }\n  tbody {\n    font-size: 18px;\n  }\n  tr {\n    font-weight: 400;\n    font-size: 16px;\n    height: 60px;\n  }\n  td {\n    border: 2px solid #fff;\n  }\n  button {\n    width: ${props => (props.width ? props.width : \"65px\")};\n    height: 30px;\n    background: #fff;\n    border-radius: 8px;\n    border: 1px solid #79747e;\n    cursor: pointer;\n\n    font-weight: bold;\n    color: #79747e;\n  }\n  button:hover {\n      color: #fff;\n      background-color: #b6000b;\n      border: 2px solid #b6000b;\n    }\n`;\n\nexport const PaginationContent = styled(Pagination)`\n  .ant-pagination-item-active {\n    border-color: #c14b45;\n    background-color: #c14b45;\n  }\n  .ant-pagination-item-active a {\n    color: #fff;\n  }\n  .ant-pagination-item-active:hover {\n    border-color: #c14b45;\n    background-color: #c14b45;\n  }\n  .ant-pagination-item-active a:hover {\n    color: #fff;\n  }\n  .ant-pagination-options {\n    display: none;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { getProducts, deleteUser } from \"../../api/admin/admin_user_api\";\nimport { Pagination } from \"antd\";\nimport {\n  MemberSearchBt,\n  MemberSearchForm,\n  MemberSearchWord,\n  MemberTitle,\n  PaginationContent,\n  SearchOptionSelect,\n} from \"../../styles/admin/AdminReportPageStyle\";\n\nconst searchOptions = [\n  {\n    id: 2,\n    title: \"닉네임\",\n  },\n  {\n    id: 3,\n    title: \"아이디\",\n  },\n];\nconst membershipStatusOptions = [\n  {\n    id: 1,\n    title: \"전체\",\n  },\n  {\n    id: 2,\n    title: \"정상\",\n  },\n  {\n    id: 3,\n    title: \"정지\",\n  },\n];\n\nconst AdminMemberPage = ({ activeBtn }) => {\n  const [type, setType] = useState(2);\n  const [state, setState] = useState(null);\n  const [totalUserCount, setTotalUserCount] = useState([]);\n\n  const reasonOptions = [\"이유1\", \"이유2\", \"이유3\"]; // 이유 옵션 추가\n  const [memberData, setMemberData] = useState([]);\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    fetchData();\n  }, [currentPage, type, searchKeyword, state]);\n\n  const convertSearchTypeToNumber = type => {\n    switch (type) {\n      case \"이름\":\n        return 2;\n      case \"아이디\":\n        return 3;\n      default:\n        return 1; // 전체\n    }\n  };\n\n  const convertReasonToNumber = reason => {\n    switch (reason) {\n      case \"이유1\":\n        return 1;\n      case \"이유2\":\n        return 2;\n      case \"이유3\":\n        return 3;\n      default:\n        return 1; // 기본값 설정\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const data = await getProducts(\n        currentPage,\n        type,\n        searchKeyword,\n        state,\n        setTotalUserCount,\n      );\n      setMemberData(data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const handleSearchKeywordChange = e => {\n    setSearchKeyword(e.target.value);\n  };\n\n  const handleSearchSubmit = async () => {\n    setCurrentPage(1); // 검색 시에는 페이지를 1로 초기화\n    fetchData(); // 검색 버튼 클릭 시에만 데이터 요청\n  };\n\n  const handleMemberWithdrawal = async (userId, reason) => {\n    try {\n      const reasonNumber = convertReasonToNumber(reason);\n      const deletedUser = await deleteUser(userId, reasonNumber);\n      await fetchData()\n\n      if (deletedUser) {\n        console.log(\"회원 탈퇴 성공:\", deletedUser);\n      } else {\n        console.log(\"회원 탈퇴 실패: 삭제된 사용자 없음\", deleteUser);\n      }\n    } catch (error) {\n      console.error(\"회원 탈퇴 실패:\", error);\n    }\n\n  };\n\n  return (\n    <div>\n      <MemberTitle>\n        <h1>{activeBtn}</h1>\n        <div style={{ display: \"flex\", gap: \"20px\", alignItems: \"center\" }}>\n          <MemberSearchForm>\n            <SearchOptionSelect onChange={e => setType(e.target.value)}>\n              {searchOptions.map(item => (\n                <option key={item.id} value={item.id}>\n                  {item.title}\n                </option>\n              ))}\n            </SearchOptionSelect>\n            <MemberSearchWord\n              placeholder={`검색어를 입력하세요`}\n              value={searchKeyword}\n              onChange={handleSearchKeywordChange}\n            />\n            <MemberSearchBt onClick={handleSearchSubmit} />\n          </MemberSearchForm>\n          <select onChange={e => setState(e.target.value)}>\n            {membershipStatusOptions.map(item => (\n              <option key={item.id} value={item.id}>\n                {item.title}\n              </option>\n            ))}\n          </select>\n        </div>\n      </MemberTitle>\n\n      <table\n        style={{\n          borderCollapse: \"collapse\",\n          width: \"100%\",\n          marginTop: \"25px\",\n        }}\n      >\n        <thead>\n          <tr>\n            <th style={tableHeaderStyle}>유저 번호</th>\n            <th style={tableHeaderStyle}>아이디</th>\n            <th style={tableHeaderStyle}>닉네임</th>\n            <th style={tableHeaderStyle}>가입일시</th>\n            <th style={tableHeaderStyle}>이메일</th>\n            <th style={tableHeaderStyle}>벌점</th>\n            <th style={tableHeaderStyle}>회원상태</th>\n            <th style={tableHeaderStyle}>회원관리</th>\n          </tr>\n        </thead>\n        <tbody>\n          {memberData.map((member, index) => (\n            <tr key={index}>\n              <td style={tableCellStyle}>{member.iuser}</td>\n              <td style={tableCellStyle}>{member.uid}</td>\n              <td style={tableCellStyle}>{member.nick}</td>\n              <td style={tableCellStyle}>\n                {new Date(member.createdAt).toLocaleString()}\n              </td>\n              <td style={tableCellStyle}>{member.email}</td>\n              <td style={tableCellStyle}>{member.penalty}</td>\n              <td style={tableCellStyle}>\n                <span\n                  style={{\n                    color: member.penalty <= -50 ? \"#B6000B\" : \"#000\",\n                  }}\n                >\n                  {member.status == \"ACTIVATED\" ? \"정상\" : \"정지\"}\n                </span>\n              </td>\n              <td style={tableCellStyle}>\n                <button\n                  style={managementButtonStyle}\n                  onClick={() => handleMemberWithdrawal(member.iuser)} // iuser 전달\n                >\n                  회원탈퇴\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <PaginationContent\n        current={currentPage}\n        total={totalUserCount}\n        onChange={page => setCurrentPage(page)}\n        pageSize={12}\n        showSizeChanger={false}\n        style={{ marginTop: \"20px\", textAlign: \"center\" }}\n      />\n    </div>\n  );\n};\n\nconst tableHeaderStyle = {\n  padding: \"10px\",\n  border: \"2px solid #fff\",\n  height: \"60px\",\n  textAlign: \"center\",\n  backgroundColor: \"#FFE6E6\",\n  fontWeight: \"700\",\n  fontSize: \"16px\",\n};\n\nconst tableCellStyle = {\n  padding: \"10px\",\n  border: \"2px solid #fff\",\n  height: \"60px\",\n  textAlign: \"center\",\n  fontSize: \"16px\",\n};\n\nconst managementButtonStyle = {\n  width: \"90px\",\n  height: \"32px\",\n  borderRadius: \"8px\",\n  background: \"#B6000B\",\n  fontSize: \"14px\",\n  color: \"#fff\",\n  border: \"none\",\n  boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.2)\",\n  cursor: \"pointer\",\n  zIndex: 1,\n};\n\nexport default AdminMemberPage;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nconst ReportContentStyle = styled.div`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n\n    width: 600px;\n    /* height: 500px; */\n    border-radius: 10px;\n    border: 1px solid #e46962;\n    background: #fff;\n    padding: 20px;\n  `;\n  const ContentTitle = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 550px;\n    height: 50px;\n    margin: 0 auto;\n    background: #ffe6e6;\n    padding: 5px 0 0 10px;\n    p {\n      color: #000;\n      font-size: 25px;\n      font-style: normal;\n      font-weight: 600;\n      line-height: normal;\n    }\n    img {\n      width: 40px;\n      height: 40px;\n      cursor: pointer;\n    }\n  `;\n  const ContentMain = styled.div`\n    width: 550px;\n    height: 330px;\n    margin: 0 auto;\n    background: #fff7f7;\n    padding: 10px;\n    text-align: start;\n    p {\n      color: #000;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: normal;\n    }\n  `;\n  const BtSection = styled.div`\n    width: 270px;\n    margin: 0 auto;\n    padding-top: 30px;\n    padding-bottom: 10px;\n    button {\n      width: 100px;\n      height: 40px;\n      border-radius: 3px;\n      border: none;\n      font-size: 18px;\n      font-weight: 500;\n    }\n    .BtNo {\n      border: 1px solid #c14b45;\n      background: #fff;\n      color: #c14b45;\n      margin-right: 70px;\n    }\n    .BtOk {\n      background: #c14b45;\n      color: #fff;\n    }\n  `;\n\nexport const ReportYetContent = ({ detail, onClose, Bt_No, Bt_Ok }) => {\n  \n  return (\n    <ReportContentStyle>\n      <ContentTitle>\n        <p>신고 내용</p>\n        <img src=\"/images/admin/bt_close.svg\" onClick={onClose}></img>\n      </ContentTitle>\n      <ContentMain>\n        <p>\n          {detail}\n        </p>\n      </ContentMain>\n      <BtSection>\n        <button className=\"BtNo\" onClick={Bt_No}>\n          반려\n        </button>\n        <button className=\"BtOk\" onClick={Bt_Ok}>\n          수락\n        </button>\n      </BtSection>\n    </ReportContentStyle>\n  );\n};\n\n\nexport const ReportDoneContent = ({ detail, onClose }) => {\n  \n  return (\n    <ReportContentStyle>\n      <ContentTitle>\n        <p>신고 내용</p>\n        <img src=\"/images/admin/bt_close.svg\" onClick={onClose}></img>\n      </ContentTitle>\n      <ContentMain>\n        <p>\n          {detail}\n        </p>\n      </ContentMain>\n    </ReportContentStyle>\n  );\n};","import { jwtAxios } from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\n\n// 신고내역 list 조회\nexport const getDispute = async (\n  page,\n  div,\n  search,\n  category,\n  state,\n  setReportList,\n  setReportLength,\n) => {\n  try {\n    let url = `${SERVER_URL}/api/admin/dispute?page=${page}&div=${div}`;\n    if (search) {\n      url += `&search=${search}`;\n    }\n    if (category) {\n      url += `&category=${category}`;\n    }\n    if (state!==null) {\n      url += `&status=${state}`;\n    }\n\n    const res = await jwtAxios.get(url);\n    setReportList([...res.data.disputes]);\n    setReportLength(res.data.totalDisputeCount)\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// 신고 수락 or 반려\nexport const postDispute = async (idispute, type) => {\n  try {\n    const url = `${SERVER_URL}/api/admin/dispute/${idispute}?type=${type}`;\n\n    const res = await jwtAxios.post(url);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  PaginationContent,\n  ReportMain,\n  ReportSearchBt,\n  ReportSearchForm,\n  ReportSearchWord,\n  ReportTitle,\n} from \"../../styles/admin/AdminReportPageStyle\";\nimport {\n  ReportDoneContent,\n  ReportYetContent,\n} from \"../../components/admin/ReportContent\";\nimport { ModalBackground } from \"../../components/joinpopup/JoinPopUp\";\nimport { getDispute, postDispute } from \"../../api/admin/admin_report_api\";\n\nconst stateCate = [\n  {\n    id: 1,\n    title: \"수락\",\n  },\n  {\n    id: -1,\n    title: \"반려\",\n  },\n  {\n    id: 0,\n    title: \"미처리\",\n  },\n];\n\nconst conflictCate = [\n  // {\n  //   id: 0,\n  //   title: \"전체\",\n  // },\n  {\n    id: 1,\n    title: \"잠수(구매전)\",\n  },\n  {\n    id: 2,\n    title: \"잠수(구매후)\",\n  },\n  {\n    id: 3,\n    title: \"허위매물\",\n  },\n  {\n    id: 4,\n    title: \"바꿔치기\",\n  },\n  {\n    id: 5,\n    title: \"매너\",\n  },\n  {\n    id: 6,\n    title: \"지연\",\n  },\n];\n\nconst accidentCate = [\n  // {\n  //   id: 0,\n  //   title: \"전체\",\n  // },\n  {\n    id: -1,\n    title: \"파손\",\n  },\n  {\n    id: -2,\n    title: \"분실\",\n  },\n];\n\nconst conflictData = [\n  {\n    id: 1,\n    uid: \"junseo\",\n    nick: \"바보준서\",\n    cate: \"잠수(구매전)\",\n    date: \"2024.02.15\",\n    oppositeId: \"kong123\",\n    penaltyPoint: \"-15\",\n    state: \"반려\",\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\n  },\n  {\n    id: 2,\n    uid: \"qwqwqw11\",\n    nick: \"현빈대마왕\",\n    cate: \"지연\",\n    date: \"2024.02.15\",\n    oppositeId: \"qwqwqw55\",\n    penaltyPoint: \"-10\",\n    state: \"수락\",\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\n  },\n  {\n    id: 3,\n    uid: \"junseo\",\n    nick: \"바보준서\",\n    cate: \"잠수(구매전)\",\n    date: \"2024.02.15\",\n    oppositeId: \"kong123\",\n    penaltyPoint: \"-15\",\n    state: \"수락\",\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\n  },\n  {\n    id: 4,\n    uid: \"qwqwqw11\",\n    nick: \"현빈대마왕\",\n    cate: \"지연\",\n    date: \"2024.02.15\",\n    oppositeId: \"qwqwqw55\",\n    penaltyPoint: \"-10\",\n    state: \"반려\",\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\n  },\n  {\n    id: 5,\n    uid: \"junseo\",\n    nick: \"바보준서\",\n    cate: \"잠수(구매전)\",\n    date: \"2024.02.15\",\n    oppositeId: \"kong123\",\n    penaltyPoint: \"-15\",\n    state: \"미처리\",\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\n  },\n  {\n    id: 6,\n    uid: \"qwqwqw11\",\n    nick: \"현빈대마왕\",\n    cate: \"지연\",\n    date: \"2024.02.15\",\n    oppositeId: \"qwqwqw55\",\n    penaltyPoint: \"-10\",\n    state: \"미처리\",\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\n  },\n  {\n    id: 7,\n    uid: \"junseo\",\n    nick: \"바보준서\",\n    cate: \"파손\",\n    date: \"2024.02.15\",\n    oppositeId: \"kong123\",\n    penaltyPoint: \"-15\",\n    state: \"반려\",\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\n  },\n  {\n    id: 8,\n    uid: \"qwqwqw11\",\n    nick: \"현빈대마왕\",\n    cate: \"파손\",\n    date: \"2024.02.15\",\n    oppositeId: \"qwqwqw55\",\n    penaltyPoint: \"-10\",\n    state: \"수락\",\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\n  },\n  {\n    id: 9,\n    uid: \"junseo\",\n    nick: \"바보준서\",\n    cate: \"분실\",\n    date: \"2024.02.15\",\n    oppositeId: \"kong123\",\n    penaltyPoint: \"-15\",\n    state: \"수락\",\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\n  },\n  {\n    id: 10,\n    uid: \"qwqwqw11\",\n    nick: \"현빈대마왕\",\n    cate: \"파손\",\n    date: \"2024.02.15\",\n    oppositeId: \"qwqwqw55\",\n    penaltyPoint: \"-10\",\n    state: \"반려\",\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\n  },\n  {\n    id: 11,\n    uid: \"junseo\",\n    nick: \"바보준서\",\n    cate: \"분실\",\n    date: \"2024.02.15\",\n    oppositeId: \"kong123\",\n    penaltyPoint: \"-15\",\n    state: \"미처리\",\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\n  },\n  {\n    id: 12,\n    uid: \"qwqwqw11\",\n    nick: \"현빈대마왕\",\n    cate: \"분실\",\n    date: \"2024.02.15\",\n    oppositeId: \"qwqwqw55\",\n    penaltyPoint: \"-10\",\n    state: \"미처리\",\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\n  },\n];\n\nconst AdminReportPage = ({ activeBtn }) => {\n  // 데이터 연동(목록 불러오기)\n  const [reportList, setReportList] = useState([]);\n  const [reportLength, setReportLength] = useState([]);\n  const [page, setPage] = useState(1);\n  const [div, setDiv] = useState(null);\n  const [search, setSearch] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [category, setCategory] = useState(null);\n  const [state, setState] = useState(null);\n\n  useEffect(() => {\n    const fetchData = () => {\n      if (activeBtn === \"분쟁 신고\") {\n        setDiv(1);\n      } else if (activeBtn === \"사고 신고\") {\n        setDiv(-1);\n      }\n      // setData(result)\n    };\n    fetchData();\n  }, [activeBtn]);\n\n  const reportListData = async () => {\n    await getDispute(\n      page,\n      div,\n      search,\n      category,\n      state,\n      setReportList,\n      setReportLength,\n    );\n    // setReportList(res.data)\n  };\n  useEffect(() => {\n    reportListData();\n  }, [page, div, search, category, state]);\n\n  // 데이터 연동(신고 수락 or 반려)\n  const [type, setType] = useState(null);\n  const [idispute, setIdispute] = useState(null);\n  const handleClickOk = () => {\n    setType(1);\n    setContentYetModal(false);\n  };\n  const handleClickNo = () => {\n    setType(-1);\n    setContentYetModal(false);\n  };\n\n  useEffect(() => {\n    const stateData = async () => {\n      await postDispute(idispute, type);\n      await reportListData();\n      setType(null);\n      setIdispute(null);\n    };\n    if (type !== null && idispute !== null) {\n      stateData();\n    }\n  }, [idispute, type]);\n\n  // 상태변경 or 상태확인 버튼 클릭\n  const [contentYetModal, setContentYetModal] = useState(false);\n  const [contentDoneModal, setContentDoneModal] = useState(false);\n  const [selectedDetail, setSelectedDetail] = useState(null);\n\n  const handleClickYet = (detail, idispute) => {\n    setSelectedDetail(detail);\n    setIdispute(idispute);\n    setContentYetModal(true);\n  };\n  const closeContentYetModal = () => {\n    setContentYetModal(false);\n  };\n  const handleClickDone = detail => {\n    setSelectedDetail(detail);\n    setContentDoneModal(true);\n  };\n  const closeContentDoneModal = () => {\n    setContentDoneModal(false);\n  };\n\n  // 페이지네이션\n  // const [pageNum, setPageNum] = useState(1);\n  const handlePageChange = _tempPage => {\n    setPage(_tempPage);\n  };\n\n  return (\n    <>\n      {contentYetModal && (\n        <>\n          <ReportYetContent\n            onClose={closeContentYetModal}\n            detail={selectedDetail}\n            Bt_No={handleClickNo}\n            Bt_Ok={handleClickOk}\n          />\n          <ModalBackground />\n        </>\n      )}\n      {contentDoneModal && (\n        <>\n          <ReportDoneContent\n            onClose={closeContentDoneModal}\n            detail={selectedDetail}\n          />\n          <ModalBackground />\n        </>\n      )}\n      <ReportTitle>\n        <h1>{activeBtn}</h1>\n        <div style={{ display: \"flex\", gap: \"20px\", alignItems: \"center\" }}>\n          <ReportSearchForm>\n            <ReportSearchWord\n              type=\"text\"\n              placeholder={\"아이디를 입력하세요\"}\n              value={inputValue}\n              onChange={e => setInputValue(e.target.value)}\n            ></ReportSearchWord>\n            <ReportSearchBt\n              type=\"button\"\n              onClick={() => setSearch(inputValue)}\n            />\n          </ReportSearchForm>\n          {activeBtn === \"분쟁 신고\" ? (\n            <select onChange={e => setCategory(e.target.value)} defaultValue=\"\">\n              <option value=\"\" disabled hidden>\n                카테고리 선택\n              </option>\n              {conflictCate.map(item => {\n                return (\n                  <option key={item.id} value={item.id}>\n                    {item.title}\n                  </option>\n                );\n              })}\n            </select>\n          ) : (\n            <select onChange={e => setCategory(e.target.value)} defaultValue=\"\">\n              <option value=\"\" disabled hidden>\n                카테고리\n              </option>\n              {accidentCate.map(item => {\n                return (\n                  <option key={item.id} value={item.id}>\n                    {item.title}\n                  </option>\n                );\n              })}\n            </select>\n          )}\n          <select onChange={e => setState(e.target.value)} defaultValue=\"\">\n            <option value=\"\" disabled hidden>\n              상태 선택\n            </option>\n            {stateCate.map(item => {\n              return (\n                <option key={item.id} value={item.id}>\n                  {item.title}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </ReportTitle>\n      <ReportMain>\n        <table>\n          <thead>\n            <tr>\n              <th>아이디</th>\n              <th>닉네임</th>\n              <th>신고 카테고리</th>\n              <th>신고일자</th>\n              <th>신고한 유저</th>\n              <th>벌점</th>\n              <th>상태</th>\n              <th>\n                변경 및<br />\n                조회\n              </th>\n              {/* <th>조회</th> */}\n            </tr>\n          </thead>\n          {reportList.map((item, index) => (\n            <tbody\n              key={item.idispute}\n              style={{\n                backgroundColor: index % 2 === 0 ? \"inherit\" : \"#FFF7F7\",\n              }}\n            >\n              <tr>\n                <td>{item.reportedUserUid}</td>\n                <td>{item.reportedUserNick}</td>\n                <td style={{ cursor: \"pointer\" }}>{item.category}</td>\n                <td>{new Date(item.createdAt).toLocaleString()}</td>\n                <td>{item.reporterUid}</td>\n                <td>{item.penalty}</td>\n                <td>{item.status} </td>\n                <td>\n                  {item.status === \"대기중\" ? (\n                    <button\n                      onClick={() => handleClickYet(item.detail, item.idispute)}\n                    >\n                      확인\n                    </button>\n                  ) : (\n                    <button onClick={() => handleClickDone(item.detail)}>\n                      확인\n                    </button>\n                  )}\n                </td>\n                {/* <td>\n                  <button>이동</button>\n                </td> */}\n              </tr>\n            </tbody>\n          ))}\n        </table>\n      </ReportMain>\n      <div style={{ margin: \"0 auto\" }}>\n        <PaginationContent\n          current={page}\n          onChange={handlePageChange}\n          total={reportLength}\n          pageSize={12}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default AdminReportPage;\n","import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\nimport { jwtAxios } from \"../../util/jwtUtil\";\n\nconst path = `${SERVER_URL}/api`;\n\n// 상품 게시판 api\nexport const getAllProducts = async (\n  page,\n  successFn,\n  errorFn,\n  type,\n  search,\n  sort,\n) => {\n  try {\n    //                  /admin/product?page=${page}&type=${type}////\n    let base_url = `${path}/admin/product?page=${page}`;\n    if (type && search) base_url += `&type=${type}&search=${search}`;\n    if (sort && sort !== 0) base_url += `&sort=${sort}`;\n\n    const res = await jwtAxios.get(base_url);\n    const status = res.status.toString();\n    \n    if (status.charAt(0) === \"2\") successFn(res.data);\n\n    return res.data;\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res);\n  }\n};\n\nexport const deleteProduct = async (iproduct, reason, errorFn) => {\n  try {\n    // http://192.168.0.144:5226/api/admin/product/102?reason=1\n    const url = `${path}/admin/product/${iproduct}?reason=${reason}`;\n    const res = await jwtAxios.delete(url);\n    const status = res.status.toString();\n    // if (status.charAt(0) === \"2\") {\n    //   successFn(res.data.result === 1);\n    // }\n    return res.data;\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res);\n  }\n};\n\n// 자유 게시판 api\nexport const getFreeBoard = async (\n    page,\n    successFn,\n    errorFn,\n    type,\n    search,\n    sort,\n  ) => {\n    try {\n      // http://192.168.0.144:5226/api/admin/product\n      //                  /admin/product?page=${page}&type=${type}////\n      console.log(type, search, sort);\n      let base_url = `${path}/admin/board?page=${page}`;\n      if (type && search) base_url += `&type=${type}&search=${search}`;\n      if (sort && sort !== 0) base_url += `&sort=${sort}`;\n  \n      const res = await jwtAxios.get(base_url);\n      const status = res.status.toString();\n      \n      if (status.charAt(0) === \"2\") successFn(res.data);\n      return res.data;\n    } catch (error) {\n      const res = error.response.data;\n      errorFn(res);\n    }\n  };\n\n// export const getFreeBoard = async (page, successFn, errorFn) => {\n//     try {\n//       // http://192.168.0.144:5226/api/admin/product\n//       //                  /admin/product?page=${page}&type=${type}////\n//       const url = `${path}/admin/board?page=${page}`;\n//       const res = await jwtAxios.get(url);\n//       const status = res.status.toString();\n//       if (status.charAt(0) === \"2\") {\n//         successFn(res.data);\n//       }\n//       return res.data;\n//     } catch (error) {\n//       const res = error.response.data;\n//       errorFn(res);\n//     }\n//   };\n\n\n\nexport const deleteFreeBoard = async (iboard, reason, errorFn) => {\n  try {\n    //                  /admin/board/41?reason=1\n    const url = `${path}/admin/board/${iboard}?reason=${reason}`;\n    const res = await jwtAxios.delete(url);\n    const status = res.status.toString();\n    // if (status.charAt(0) === \"2\") {\n    //   successFn(res.data.result === 1);\n    // }\n    return res.data;\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res);\n  }\n};\n\n// 신고된 채팅 전체 내역\nexport const getChatHistory = async (page, successFn, errorFn) => {\n  try {\n    // http://192.168.0.144:5226/api/admin/product\n    //                  /admin/product?page=${page}&type=${type}////\n    const url = `${path}/admin/chat?page=${page}`;\n    const res = await jwtAxios.get(url);\n    const status = res.status.toString();\n    if (status.charAt(0) === \"2\") {\n      successFn(res.data);\n    }\n    return res.data;\n  } catch (error) {\n    const res = error.response.data;\n    errorFn(res);\n  }\n};\n","import styled from \"@emotion/styled\";\nexport const BoardWrap = styled.div`\n  text-align: center;\n  .move,\n  .delete {\n    width: 60px;\n    height: 30px;\n    font-weight: bold;\n    color: #79747e;\n    background: #fff;\n    border: 1px solid #79747e;\n    border-radius: 10px;\n    cursor: pointer;\n    &:hover {\n      color: #fff;\n      background-color: #b6000b;\n      border: 2px solid #b6000b;\n    }\n  }\n  .board-data {\n    > td {\n      padding: 15px 0;\n    }\n  }\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  top: 50px;\n  padding-top: 20px;\n  padding-bottom: 30px;\n\n  .header-title {\n    display: flex;\n  }\n  .title {\n    font-size: 24px;\n  }\n  .total {\n    font-size: 19px;\n    padding-top: 5px;\n    padding-left: 10px;\n  }\n  .search-wrap {\n    margin-left: 350px;\n      position: relative;\n      display: flex;\n      select {\n        width: 100px;\n        height: 40px;\n        border: 1px solid #bebebe;\n        border-right: none;\n        border-radius: 5px 0 0 5px;\n        border-top-left-radius: none;\n      }\n      input {\n        width: 300px;\n        height: 40px;\n        border: 1px solid #bebebe;\n        border-radius: 5px;\n        padding-left: 15px;\n        color: #000;\n        font-size: 16px;\n        border-radius: 0 5px 5px 0;\n        ::placeholder {\n          color: #bebebe;\n          letter-spacing: 1.5px;\n        }\n      }\n      button {\n        position: absolute;\n        padding-right: 10px;\n        top: 10px;\n        right: 0;\n        background: transparent;\n        border: none;\n        cursor: pointer;\n        img {\n          width: 20px;\n          height: 20px;\n        }\n      }\n      select {\n        font-size: 16px;\n        color: #777;\n        padding-left: 10px;\n      }\n    }\n  .bt-wrap {\n    display: flex;\n    margin-top: 8px;\n    > div {\n      display: flex;\n      width: 120px;\n      justify-content: space-evenly;\n    }\n    button {\n      border: none;\n      background: transparent;\n      font-size: 15px;\n      color: #777;\n      cursor: pointer;\n    }\n    img {\n      width: 10px;\n      height: 20px;\n      margin-top: 5px;\n    }\n  }\n`;","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { deleteProduct, getAllProducts } from \"../../api/admin/admin_board_api\";\nimport { BoardWrap, HeaderWrap } from \"../../styles/admin/AdminBoardPageStyle\";\nimport { PaginationContent } from \"../../styles/admin/AdminReportPageStyle\";\n\nconst boardData = [\n  {\n    totalDisputeCount: 0,\n    products: [\n      {\n        iproduct: 114,\n        iuser: 1,\n        nick: \"ㅎㅎㅎㅎㅎ\",\n        mainCategory: 1,\n        subCategory: 2,\n        pricePerDay: 2,\n        view: 50,\n        createdAt: \"2024-02-27T10:41:13.518Z\",\n        status: 0,\n      },\n    ],\n  },\n];\n\nconst initBoardData = {\n  totalDisputeCount: 0,\n  products: [\n    {\n      iproduct: 0,\n      iuser: 0,\n      nick: \"string\",\n      mainCategory: 2,\n      subCategory: 1,\n      pricePerDay: 0,\n      view: 0,\n      createdAt: \"2024-02-27T11:23:41.089Z\",\n      status: 0,\n    },\n  ],\n};\n\nconst category = [\n  {\n    mainCategory: \"스마트 기기\",\n    subCategory: [\n      { id: 1, title: \"스마트 워치\" },\n      { id: 2, title: \"태블릿\" },\n      { id: 3, title: \"갤럭시\" },\n      { id: 4, title: \"아이폰\" },\n    ],\n  },\n  {\n    mainCategory: \"PC / 노트북\",\n    subCategory: [\n      { id: 1, title: \"노트북\" },\n      { id: 2, title: \"PC\" },\n      { id: 3, title: \"마우스\" },\n      { id: 4, title: \"키보드\" },\n    ],\n  },\n  {\n    mainCategory: \"영상 / 카메라\",\n    subCategory: [\n      { id: 1, title: \"빔프로젝터\" },\n      { id: 2, title: \"셋톱박스\" },\n      { id: 3, title: \"카메라\" },\n      { id: 4, title: \"캠코더\" },\n      { id: 5, title: \"DSLR\" },\n    ],\n  },\n  {\n    mainCategory: \"음향\",\n    subCategory: [\n      { id: 1, title: \"스피커\" },\n      { id: 2, title: \"이어폰\" },\n      { id: 3, title: \"헤드폰\" },\n      { id: 4, title: \"마이크\" },\n    ],\n  },\n  {\n    mainCategory: \"게임 기기\",\n    subCategory: [\n      { id: 1, title: \"플레이스테이션\" },\n      { id: 2, title: \"닌텐도\" },\n      { id: 3, title: \"Wii\" },\n      { id: 4, title: \"XBOX\" },\n      { id: 5, title: \"기타\" },\n    ],\n  },\n];\nconst SEARCH_OPTIONS = [\n  \n  \"닉네임\", \"카테고리\"];\n\nconst SEARCH_OPTIONS_TEXT = [\n  \"검색어를 입력해주세요\",\n  \"닉네임을 입력해주세요\",\n  \"카테고리를 입력해주세요\",\n];\n\nconst AdminBoardPage = () => {\n  const navigate = useNavigate();\n  const moveToDetail = (mainCategory, subCategory, iproduct) => {\n    navigate(`/details?mc=${mainCategory}&sc=${subCategory}&productId=${iproduct}`)\n  }\n  // 전체 게시물 데이터\n  const [boardAllData, setBoardAllData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [selectedSearchOption, setSelectedSearchOption] = useState(0); // 선택된 검색 옵션 상태\n  const [inputValue, setInputValue] = useState(\"\"); // 검색어 상태\n  const [searchKeyword, setSearchKeyword] = useState(\"\"); // 검색어 상태\n  \n  const successFn = res => setBoardAllData(res);\n\n  const errorFn = res => alert(`${res.message} \\n 에러코드(${res.errorCode})`);\n\n  // 페이지네이션\n  const handlePageChange = _tempPage => {\n    setPage(_tempPage);\n    getAllProducts(\n      _tempPage,\n      successFn, \n      errorFn, \n      selectedSearchOption, \n      inputValue,\n      sortType\n      );\n  };\n\n\n  const handleSearchOptionChange = e => setSelectedSearchOption(e.target.value);\n\n  const handleSearchKeywordChange = e => setInputValue(e.target.value);\n\n  const handleSearchSubmit = () => {\n    getAllProducts(1, successFn, errorFn, selectedSearchOption, inputValue);\n    setSearchKeyword(inputValue);\n    setPage(1);\n  };\n  \n  // 게시글 삭제\n  const handleClickDelete = async iproduct => {\n    const confirmDelete = window.confirm(\"해당 게시물을 삭제하시겠습니까?\");\n    if (confirmDelete) {\n      try {\n        const reason = 1;\n        const res = await deleteProduct(iproduct, reason, errorFn);\n        getAllProducts(\n          page,\n          successFn,\n          errorFn,\n          selectedSearchOption,\n          inputValue,\n        );\n        setSearchKeyword(inputValue);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const [sortType, setSortType] = useState();\n  const getSortedData = newSortType => {\n    setSortType(newSortType); // 정렬 상태 변경\n    getAllProducts(\n      1, // 첫 페이지부터 데이터를 가져옴\n      successFn,\n      errorFn,\n      selectedSearchOption,\n      inputValue,\n      newSortType // 변경된 정렬 상태를 함께 전달\n    );\n  };\n\n  useEffect(() => {\n    console.log(\"인풋밸류\", inputValue, \"서치키워드\", searchKeyword);\n  }, [inputValue, searchKeyword]);\n  useEffect(() => {\n    getAllProducts(page, successFn, errorFn);\n  }, []);\n\n  return (\n    <BoardWrap>\n      <HeaderWrap>\n        <div className=\"header-title\">\n          <div className=\"title\">상품 게시판</div>\n          <div className=\"total\">총 {boardAllData.totalDisputeCount}개</div>\n        </div>\n        <div className=\"search-wrap\">\n          <select\n            onChange={handleSearchOptionChange}\n            value={selectedSearchOption}\n          >\n            {SEARCH_OPTIONS.map((option, index) => (\n              <option key={option} value={index}>\n                {option}\n              </option>\n            ))}\n          </select>\n          <input\n            type=\"text\"\n            placeholder={SEARCH_OPTIONS_TEXT[selectedSearchOption]}\n            value={inputValue}\n            onChange={handleSearchKeywordChange}\n            // disabled={selectedSearchOption === 0}\n          />\n          <button onClick={handleSearchSubmit} type=\"submit\">\n            <img src=\"/images/admin/bt_search.svg\" />\n          </button>\n        </div>\n        <div className=\"bt-wrap\">\n          <div>\n            <button onClick={() => getSortedData(0)}>최신순</button>\n            <img src=\"/images/admin/line.svg\" />\n            <button onClick={() => getSortedData(1)}>조회순</button>\n          </div>\n        </div>\n      </HeaderWrap>\n      <table style={{ width: \"100%\" }}>\n        <thead\n          style={{ height: \"50px\", background: \"#FFE6E6\", fontSize: \"16px\" }}\n        >\n          <tr>\n            <th>상품번호</th>\n            <th>카테고리</th>\n            <th>대여 가격</th>\n            <th>판매자 이름</th>\n            <th>조회수</th>\n            <th>등록일</th>\n            <th>상품 조회</th>\n            <th>상품 관리</th>\n          </tr>\n        </thead>\n        {boardAllData &&\n          boardAllData.products &&\n          boardAllData.products.map((item, index) => (\n            <React.Fragment key={index}>\n              <tbody\n                key={item.id}\n                style={{\n                  fontSize: \"16px\",\n                  background: index % 2 === 1 ? \"#FFF7F7\" : \"inherit\",\n                }}\n              >\n                <tr className=\"board-data\">\n                  <td>{item.iproduct}</td>\n                  <td>\n                    {\n                      category[item.mainCategory - 1].subCategory[\n                        item.subCategory - 1\n                      ].title\n                    }\n                  </td>\n                  <td>{item.pricePerDay.toLocaleString()}</td>\n                  <td>{item.nick}</td>\n                  <td>{item.view}</td>\n                  <td>{new Date(item.createdAt).toLocaleString()}</td>                  \n                  <td>\n                    {item.productInquiry}\n                    <button \n                    className=\"move\"\n                    onClick={() => moveToDetail(item.mainCategory,item.subCategory,item.iproduct)}\n                    >이동</button>\n                  </td>\n                  <td>\n                    {item.productManage}\n                    <button\n                      className=\"delete\"\n                      onClick={e => {\n                        handleClickDelete(item.iproduct);\n                      }}\n                    >\n                      삭제\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </React.Fragment>\n          ))}\n      </table>\n      <div>\n        <PaginationContent\n          current={page}\n          onChange={handlePageChange}\n          total={boardAllData.totalDisputeCount}\n          pageSize={12}\n          style={{paddingTop: \"30px\"}}\n        />\n      </div>\n    </BoardWrap>\n  );\n};\n\nexport default AdminBoardPage;\n","import styled from \"@emotion/styled\";\n\nexport const PaginationContainer = styled.div`\npadding-top: 50px;\ndisplay: flex;\njustify-content: center;\n.page-link {\n    color: #111;\n    width: 40px;\n    height: 40px;\n    font-size: 18px;\n    text-align: center;\n    border: none;\n}\n.pagination .page-item.active .page-link {\n    padding-top: 5px;\n  background-color: #FFE6E6;\n  border-radius: 5px;\n}\n`","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { BoardWrap, HeaderWrap } from '../../styles/admin/AdminBoardPageStyle'\nimport Pagination from '../../components/Pagination'\nimport { deleteFreeBoard, getFreeBoard } from '../../api/admin/admin_board_api'\nimport { PaginationContent } from '../../styles/admin/AdminReportPageStyle'\n\nconst boardData = {\n  \"totalBoardCount\": 11,\n  \"boards\": [\n    {\n      \"iboard\": 32,\n      \"nick\": \"hehe\",\n      \"view\": 20,\n      \"createdAt\": \"2024-02-28T11:00:46.575Z\"\n    }\n  ]\n}\n\nconst initFreeBoardData = {\n  \"totalBoardCount\": 11,\n  \"boards\": [\n    {\n      \"iboard\": 32,\n      \"nick\": \"hehe\",\n      \"view\": 20,\n      \"createdAt\": \"2024-02-28T11:00:46.575Z\"\n    }\n  ]\n}\nconst SEARCH_OPTIONS = [\"전체\", \"닉네임\", \"제목\"];\n\nconst SEARCH_OPTIONS_TEXT = [\n  \"검색어를 입력해주세요\",\n  \"닉네임을 입력해주세요\",\n  \"제목을 입력해주세요\",\n];\n\n\nconst AdminFreeBoardPage = () => {\n  // 게시물 이동\n  const navigate = useNavigate();\n  const moveToDetail = iboard => {\n    navigate(`/free/details?iboard=${iboard}`);\n  };\n  // 전체 자유게시판 데이터\n  const [freeBoardAllData, setFreeBoardAllData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [selectedSearchOption, setSelectedSearchOption] = useState(0); // 선택된 검색 옵션 상태\n  const [inputValue, setInputValue] = useState(\"\"); // 검색어 상태\n  const [searchKeyword, setSearchKeyword] = useState(\"\"); // 검색어 상태\n\n  const successFn = res => {\n    setFreeBoardAllData(res);\n    console.log(\"성공했을때\", res);\n  };\n  const errorFn = res => {\n    console.log(\"실패\", res);\n    alert(`${res.message} \\n 에러코드(${res.errorCode})`);\n  };\n\n// 페이지네이션\nconst handlePageChange = _tempPage => {\n  setPage(_tempPage);\n  getFreeBoard(\n    _tempPage,\n    successFn, \n    errorFn, \n    selectedSearchOption, \n    inputValue,\n    sortType\n    );\n};\n  \n  const handleSearchOptionChange = e => {\n  const selectedOption = e.target.value;\n  setSelectedSearchOption(selectedOption);\n  if (selectedOption === \"전체\") {\n    // 전체 옵션이 선택된 경우에는 모든 데이터를 요청합니다.\n    getFreeBoard(1, successFn, errorFn);\n    setSearchKeyword(\"\");\n    setInputValue(\"\");\n  }\n}\n\n  const handleSearchKeywordChange = e => setInputValue(e.target.value);\n\n  const handleSearchSubmit = () => {\n    getFreeBoard(1, successFn, errorFn, selectedSearchOption, inputValue);\n    setSearchKeyword(inputValue);\n    setPage(1);\n  };\n \n  \n  // 게시글 삭제\n  const handleClickDelete = async iboard => {\n    const confirmDelete = window.confirm(\"해당 게시물을 삭제하시겠습니까?\");\n    if (confirmDelete) {\n    try {\n      const reason = 1;\n      const res = await deleteFreeBoard(iboard, reason, errorFn);\n      getFreeBoard(\n        page,\n        successFn,\n        errorFn,\n        selectedSearchOption,\n        inputValue,\n      );\n      setSearchKeyword(inputValue);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  };\n\n  const [sortType, setSortType] = useState();\n  const getSortedData = newSortType => {\n    setSortType(newSortType); // 정렬 상태 변경\n    getFreeBoard(\n      1, // 첫 페이지부터 데이터를 가져옴\n      successFn,\n      errorFn,\n      selectedSearchOption,\n      inputValue,\n      newSortType // 변경된 정렬 상태를 함께 전달\n    );\n  };\n\n  useEffect(() => {\n    console.log(\"인풋밸류\", inputValue, \"서치키워드\", searchKeyword);\n  }, [inputValue, searchKeyword]);\n  useEffect(() => {\n    getFreeBoard(page, successFn, errorFn);\n  }, []);\n  \n\n  return (\n    <BoardWrap>\n        <HeaderWrap>\n            <div className='header-title'>\n                <div className='title'>자유 게시판</div>\n                <div className='total'>총 {freeBoardAllData.totalBoardCount}개</div>\n            </div>\n            <div className=\"search-wrap\">\n            <select\n              onChange={handleSearchOptionChange}\n              value={selectedSearchOption}\n            >\n              {SEARCH_OPTIONS.map((option, index) => (\n                <option key={option} value={index}>\n                  {option}\n                </option>\n              ))}\n            </select>\n            <input\n            type=\"text\"\n            placeholder={SEARCH_OPTIONS_TEXT[selectedSearchOption]}\n            value={inputValue}\n            onChange={handleSearchKeywordChange}\n            // disabled={selectedSearchOption === 0}\n          />\n            <button onClick={handleSearchSubmit} type=\"submit\">\n              <img src=\"/images/admin/bt_search.svg\" />\n            </button>\n        </div>\n            <div className=\"bt-wrap\">\n              <div>\n                <button onClick={() => getSortedData(0)}>최신순</button>\n                <img src=\"/images/admin/line.svg\" />\n                <button onClick={() => getSortedData(1)}>조회순</button>\n              </div>\n            </div>\n        </HeaderWrap>\n      <table style={{ width: \"100%\"}}>\n      <thead\n            style={{height: \"50px\", background: \"#FFE6E6\", fontSize: \"16px\" }}\n          >\n            <tr>\n              <th>게시글 번호</th>\n              <th>제목</th>\n              <th>작성자</th>\n              <th>조회수</th>\n              <th>등록일</th>\n              <th>게시글 조회</th>\n              <th>게시글 관리</th>\n            </tr>\n          </thead>\n          {freeBoardAllData && \n            freeBoardAllData.boards && \n            freeBoardAllData.boards.map((item, index) => (\n            <React.Fragment key={index}>\n            <tbody\n              key={item.id}\n              style={{\n                fontSize: \"16px\",\n                background: index % 2 === 1 ? \"#FFF7F7\" : \"inherit\",\n              }}\n              >\n              <tr className='board-data'>\n                <td>{item.iboard}</td>\n                <td>{item.title}</td>\n                <td>{item.nick}</td>\n                <td>{item.view}</td>\n                <td>{new Date(item.createdAt).toLocaleString()}</td>                \n                <td>{item.postInquiry}\n                <td>{item.postManage}</td>\n                  <button className='move' onClick={() => moveToDetail(item.iboard)}>이동</button>\n                </td>\n                <td>{item.productManage}\n                  <button className='delete' onClick={e => {handleClickDelete(item.iboard)}}>삭제</button>\n                </td>\n              </tr>\n            </tbody>\n            </React.Fragment>\n            ))}\n      </table>\n      <div>\n      <PaginationContent\n          current={page}\n          onChange={handlePageChange}\n          total={freeBoardAllData.totalBoardCount}\n          pageSize={12}\n          style={{paddingTop: \"30px\"}}\n        />\n      </div>\n    </BoardWrap>\n  )\n}\n\nexport default AdminFreeBoardPage;","import styled from \"@emotion/styled\";\n\nconst AdminChatHistoryModal = ({ toggleModal }) => {\n  return (\n    <>\n      <ModalOverlay onClick={toggleModal} />\n        <ModalContainer>\n        <div className=\"modal-content\">\n          <h2>신고된 채팅 내역</h2>\n          <div className=\"chat-wrap\">\n            <div className=\"admin-profile-wrap\">\n              <div className=\"admin-chat-content\">\n              <p>안녕하세요. 저희 거래는 어디서 할까요?</p>\n              </div>\n              <div className=\"profile-wrap\">\n                <div className=\"admin-profile\">\n                  <img src=\"/images/admin/admin_profile.png\" />\n                </div>\n                <div className=\"admin-nick\">준서</div>\n              </div>\n            </div>\n            <div className=\"user-profile-wrap\">\n              <div className=\"profile-wrap\">\n                <div className=\"user-profile\">\n                  <img src=\"/images/kong.jpg\" />\n                </div>\n                <div className=\"user-nick\">콩이</div>\n              </div>\n              <div className=\"user-chat-content\">\n                <p>중앙파출소 앞에서 만날까요</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"chat-wrap\">\n            <div className=\"admin-profile-wrap\">\n              <div className=\"admin-chat-content\">\n              <p>안녕하세요. 저희 거래는 어디서 할까요?</p>\n              </div>\n              <div className=\"profile-wrap\">\n                <div className=\"admin-profile\">\n                  <img src=\"/images/admin/admin_profile.png\" />\n                </div>\n                <div className=\"admin-nick\">준서</div>\n              </div>\n            </div>\n            <div className=\"user-profile-wrap\">\n              <div className=\"profile-wrap\">\n                <div className=\"user-profile\">\n                  <img src=\"/images/kong.jpg\" />\n                </div>\n                <div className=\"user-nick\">콩이</div>\n              </div>\n              <div className=\"user-chat-content\">\n                <p>중앙파출소 앞에서 만날까요</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div>\n          <div className=\"close-modal-wrap\">\n            <button className=\"close-modal\" onClick={toggleModal}>\n              <div className=\"close-text\">닫기</div>\n            </button>\n          </div>\n        </div>\n        </ModalContainer>\n    </>\n  );\n};\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* 반투명한 검은색 배경 */\n  z-index: 998; /* 모달보다 작은 값으로 설정하여 모달 뒤로 숨김 */\n`;\n\nconst ModalContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  border: 2px solid #777;\n  border-radius: 20px;\n  width: 600px;\n  height: 650px;\n  background-color: #fff;\n  z-index: 999;\n  padding-top: 20px;\n  .user-nick {\n    margin-top: 3px;\n    margin-right: 20px;\n  }\n  .profile-wrap {\n    display: block;\n    .admin-nick {\n      margin-top: 3px;\n      margin-left: 20px;\n      font-size: 13px;\n    }\n  }\n  .admin-profile-wrap {\n    position: absolute;\n    width: 500px;\n    display: flex;\n    justify-content: space-between;\n    top: 50px;\n    right: 20px;\n    .admin-chat-content {\n      width: 500px;\n      >p {\n        padding-top: 12px;\n      }\n    }\n    .admin-profile {\n      width: 50px;\n      height: 50px;\n      border: 1px solid #777;\n      border-radius: 25px;\n      margin-left: 20px;\n      \n    }\n    .admin-profile > img {\n      width: 48px;\n      height: 48px;\n      border-radius: 25px;\n    }\n  }\n  .admin-chat-content {\n    top: 50px;\n    right: 80px;\n    width: 450px;\n    height: 50px;\n    border: 2px solid #E9E9E9;\n    border-radius: 10px;\n    background-color: #ffe6e6;\n    font-size: 17px;\n    color: #555;\n  \n  }\n  .user-profile-wrap {\n    position: absolute;\n    width: 500px;\n    display: flex;\n    justify-content: space-between;\n    top: 130px;\n    left: 20px;\n    .user-nick {\n        font-size: 14px;\n      }\n    .user-profile {\n      width: 50px;\n      height: 50px;\n      border: 1px solid #777;\n      border-radius: 25px;\n      margin-right: 20px;\n      \n    }\n    .user-profile > img {\n      width: 50px;\n      height: 50px;\n      border-radius: 25px;\n    }\n    \n  }\n  .user-chat-content {\n    top: 120px;\n    left: 80px;\n    width: 450px;\n    height: 50px;\n    border: 2px solid #E9E9E9;\n    border-radius: 10px;\n    font-size: 17px;\n    color: #555;\n    >p {\n      padding-top: 12px;\n    }\n  }\n  \n  .close-modal-wrap {\n    position: absolute;\n    justify-content: center;\n    bottom: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    .close-modal {\n      width: 60px;\n      height: 30px;\n      font-size: 15px;\n      border: 1px solid #c14b45;\n      border-radius: 5px;\n      background-color: #c14b45;\n      .close-text {\n        color: #fff;\n      }\n      .close-text:hover {\n        color: #111;\n      }\n    }\n    .close-modal:hover {\n      background-color: #fff;\n      border: 1.5px solid #777;\n      \n    }\n  }\n`;\nexport default AdminChatHistoryModal;\n","import React, { useEffect, useState } from \"react\";\nimport { BoardWrap, HeaderWrap } from \"../../styles/admin/AdminBoardPageStyle\";\nimport Pagination from \"../../components/Pagination\";\nimport { Modal } from \"../../styles/admin/AdminChatHistoryStyle\";\nimport { getChatHistory } from \"../../api/admin/admin_board_api\";\nimport { PaginationContent } from \"../../styles/admin/AdminReportPageStyle\";\nimport AdminChatHistoryModal from \"../../components/admin/AdminChatHistoryModal\";\n\nconst chatData = {\n  totalChatCount: 124,\n  chats: [\n    {\n      ichat: 222,\n      category: \"사기\",\n      nick: \"우헤헹\",\n      createdAt: \"2024-02-28T06:28:38.904Z\",\n    },\n  ],\n};\n\nconst initChatData = {\n  totalChatCount: 0,\n  chats: [\n    {\n      ichat: 0,\n      category: \"string\",\n      nick: \"string\",\n      createdAt: \"2024-02-28T06:28:38.904Z\",\n    },\n  ],\n};\n\nconst AdminChatHistoryPage = () => {\n  // 채팅 내역 데이터\n  const [chatHistoryData, setChatHistoryData] = useState({});\n  console.log(\"chatHistoryData\", chatHistoryData);\n\n  const [page, setPage] = useState(1);\n  // const [limit, setLimit] = useState(5);\n  // const [selectedSearchOption, setSelectedSearchOption] = useState(\"전체\"); // 선택된 검색 옵션 상태\n  // const [searchKeyword, setSearchKeyword] = useState(\"\"); // 검색어 상태\n  const getLength = function () {\n    return chatHistoryData.length;\n  };\n\n  function handlePageChange(value) {\n    if (value === \"&laquo;\") {\n      setPage(1);\n    } else if (value === \"&lsaquo;\") {\n      if (page !== 1) {\n        setPage(page - 1);\n      }\n    } else if (value === \"&rsaquo;\") {\n      if (page !== totalPage) {\n        setPage(page + 1);\n      }\n    } else if (value === \"&raquo;\") {\n      setPage(totalPage);\n    } else {\n      setPage(value);\n    }\n  }\n\n  // 모달창\n  const [modal, setModal] = useState(false);\n  const [modalContent, setModalContent] = useState({});\n  const toggleModal = content => {\n    setModalContent(content); // 모달에 표시할 내용 업데이트\n    setModal(!modal);\n  };\n\n  useEffect(() => {\n    getChatHistory(page, successFn, errorFn);\n  }, [page]);\n\n  const successFn = res => {\n    console.log(\"성공했을때\", res);\n    setChatHistoryData(res);\n    console.log(res);\n  };\n\n  const errorFn = res => {\n    console.log(\"실패\", res);\n    alert(`${res.message} \\n 에러코드(${res.errorCode})`);\n  };\n\n  return (\n    <BoardWrap>\n      <HeaderWrap>\n        <div className=\"header-title\">\n          <div className=\"title\">신고 채팅 내역</div>\n          <div className=\"total\">총 {chatHistoryData.totalChatCount}개</div>\n        </div>\n      </HeaderWrap>\n\n      <table style={{ width: \"100%\" }}>\n        <thead\n          style={{ height: \"50px\", background: \"#FFE6E6\", fontSize: \"16px\" }}\n        >\n          <tr>\n            <th>번호</th>\n            <th>카테고리</th>\n            <th>닉네임</th>\n            <th>등록일</th>\n            <th>내역 관리</th>\n          </tr>\n        </thead>\n        {chatHistoryData &&\n          chatHistoryData.chats &&\n          chatHistoryData.chats.map((item, index) => (\n            <>\n              <tbody\n                key={item.id}\n                style={{\n                  fontSize: \"16px\",\n                  background: index % 2 === 1 ? \"#FFF7F7\" : \"inherit\",\n                }}\n              >\n                <tr className=\"board-data\">\n                  <td>{index + 1}</td>\n                  <td>{item.category}</td>\n                  <td>{item.nick}</td>\n                  <td>{new Date(item.createdAt).toLocaleString()}</td>\n                  <td>\n                    {item.productInquiry}\n                    <div>\n                      <button\n                        className=\"move\"\n                        onClick={() => toggleModal(item)}\n                      >\n                        내용\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </>\n          ))}\n      </table>\n      {modal && (\n        <AdminChatHistoryModal toggleModal={toggleModal} className={modal} \n        // data={res.data} \n        />\n      )}\n      <div>\n        <PaginationContent\n          current={page}\n          onChange={handlePageChange}\n          total={chatHistoryData.totalChatCount}\n          pageSize={12}\n          style={{paddingTop: \"30px\"}}\n        />\n      </div>\n    </BoardWrap>\n  );\n};\n\nexport default AdminChatHistoryPage;\n","import styled from '@emotion/styled';\nimport React from 'react'\n\nconst AdminCateDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 3.3rem;\n  width: 135px;\n  height: 482px;\n`;\n\nconst AdminCateUl = styled.ul`\n  display: block;\n  height: 104px;\n  border-radius: 3px;\n  p {\n    color: #000;\n    font-size: 1.8rem;\n    line-height: 2.2;\n    background-color: #FFD4D4;\n    padding-left: 1.8rem;\n  }\n`;\n\nconst AdminCateLi = styled.li`\n  color: ${props => (props.selected ? \"#C14B45\" : \"#777777\")};\n  font-weight: ${props => (props.selected ? \"500\" : \"400\")};\n  font-size: 1.6rem;\n  line-height: 1.9;\n  padding-left: 1.8rem;\n  cursor: pointer;\n`;\n\nconst AdminCategory = ({selectedItem, adminCate, onSubItemClick}) => {\n  return (\n    <AdminCateDiv>\n      {adminCate.map(item => (\n        <AdminCateUl key={item.title}>\n          <p>{item.title}</p>\n          {item.list.map(subItem => (\n            <AdminCateLi\n              key={subItem}\n              selected={selectedItem === subItem}\n              onClick={() => {\n                onSubItemClick(subItem);\n              }}\n            >\n              {subItem}\n            </AdminCateLi>\n          ))}\n        </AdminCateUl>\n      ))}\n    </AdminCateDiv>\n  )\n}\n\nexport default AdminCategory","import styled from \"@emotion/styled\";\n\nexport const AdminTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n  width: 1260px;\n  padding: 17px 0;\n  border-bottom: 1px solid #c14b45;\n  margin-bottom: 33px;\n  h1 {\n    font-size: 24px;\n    font-weight: 400;\n  }\n`;\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nconst MyModalDiv = styled.div`\n     position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n\n    width: 300px;\n    height: 180px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n    border-radius: 10px;\n    border: 1px solid #2c39b5;\n    background: #fff;\n    p {\n      color: #000;\n      text-align: center;\n      font-size: 20px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: normal;\n    }\n    div {\n        display: flex;\n        gap: 20px;\n        :nth-of-type(1) {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            img {\n                width: 25px;\n                height: 25px;\n                cursor: pointer;\n            }\n        }\n    }\n`\nexport const Confirm = styled.button`\n    width: 80px;\n    height: 40px;\n    border-radius: 5px;\n    border: none;\n    background: #2c39b5;\n    cursor: pointer;\n    color: #fff;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n`\nexport const Cancel = styled(Confirm)`\n    background-color: #fff;\n    color: #2c39b5;\n    border: 2px solid #2c39b5;\n`\n\nconst AdminReserve = ({ txt,onCancel, onConfirm, onClose }) => {\n  return (\n    <MyModalDiv>\n      <p>{txt}</p>\n      <div>\n        <img src=\"/images/admin/bt_close.svg\" onClick={onClose}></img>\n      </div>\n      <div>\n        <Cancel onClick={onCancel}>거절</Cancel>\n        <Confirm onClick={onConfirm}>수락</Confirm>\n      </div>\n    </MyModalDiv>\n  );\n};\n\nexport default AdminReserve;","import React, { useEffect, useState } from \"react\";\nimport {\n  PaginationContent,\n  ReportMain,\n  ReportTitle,\n} from \"../../styles/admin/AdminReportPageStyle\";\nimport { ModalBackground } from \"../../components/joinpopup/JoinPopUp\";\nimport { deleteIrefund, getAdminReserve } from \"../../api/admin/admin_reserve_api\";\nimport AdminReserve from \"../../components/admin/AdminReserve\";\n\nconst accidentCate = [\n  {\n    id: \"\",\n    title: \"전체\",\n  },\n  {\n    id: 1,\n    title: \"처리됨\",\n  },\n  {\n    id: 0,\n    title: \"대기중\",\n  },\n  {\n    id: -1,\n    title: \"반려됨\",\n  },\n];\n\nconst AdminReservePage = ({ activeBtn }) => {\n  const [reserveList, setReserveList] = useState([]);\n  const [reserveLength, setReserveLength] = useState([]);\n  const [state, setState] = useState(null);\n  const [showModal,setShowModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState();\n  const [page, setPage] = useState(1);\n\n  const handlePageChange = _tempPage => {\n    setPage(_tempPage);\n  };\n\n  const reserveListData = async () => {\n    await getAdminReserve(\n    page,\n    state,\n    setReserveList,\n    setReserveLength,\n    );\n  };\n    \n  useEffect(() => {\n    reserveListData();\n  }, [page, state]);\n\n    const handleSatus = (irefund) => {\n      setShowModal(true);\n      setItemToDelete(irefund);\n    }\n\n    const handleCancel = async () => {\n      if (itemToDelete) {\n        await handleReserveButton(itemToDelete, -1);\n        setShowModal(false);\n      }\n    };\n    const handleConfirm = async () => {\n      if (itemToDelete) {\n        await handleReserveButton(itemToDelete, 1);\n        setShowModal(false);\n      }\n    };\n\n    const handleReserveButton = async (irefund,div) => {\n      try {\n        const deleteReserve = await deleteIrefund(irefund,div);\n        \n      } catch (error) {\n        console.error(\"Error deleteIrefund:\", error);\n      }\n      reserveListData();\n    };\n\n    const closeModal = () => {\n      setShowModal(false);\n    }\n\n    const formatNumberWithCommas = (number) => {\n      return number.toLocaleString();\n    };\n\n  return (\n    <>\n      {showModal && (\n        <>\n        <AdminReserve onCancel={handleCancel} onConfirm={handleConfirm} onClose={closeModal}\n        txt={\n          <>\n            이 내역을  <br />\n            환불하시겠습니까?\n          </>\n        }/>\n        <ModalBackground></ModalBackground>\n        </>\n      )}\n      <ReportTitle>\n        <h1>{activeBtn}</h1>\n        <div style={{ display: \"flex\", gap: \"20px\", alignItems: \"center\" }}>\n          <select onChange={e => setState(e.target.value)} defaultValue=\"\">\n            <option value=\"\" disabled hidden>\n              상태 선택\n            </option>\n            {accidentCate.map(item => {\n              return (\n                <option key={item.id} value={item.id}>\n                  {item.title}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </ReportTitle>\n      <ReportMain>\n        <table>\n          <thead>\n            <tr>\n              <th>번호</th>\n              <th>아이디</th>\n              <th>닉네임</th>\n              <th>취소일자</th>\n              <th>환불금액</th>\n              <th>상태</th>\n              <th>변경</th>\n            </tr>\n          </thead>\n          {reserveList.map((item, index) => (\n            <tbody\n              key={item.refunds}\n              style={{\n                backgroundColor: index % 2 === 0 ? \"inherit\" : \"#FFF7F7\",\n              }}\n            >\n              <tr>\n                <td>{index+1}</td>\n                <td>{item.uid}</td>\n                <td>{item.nick}</td>\n                <td>{new Date(item.createdAt).toLocaleString()}</td>\n                <td>{formatNumberWithCommas(item.amount)} 원</td>\n                <td>\n                  {item.status === 1\n                    ? \"처리됨\"\n                    : item.status === 0\n                    ? \"대기중\"\n                    : item.status === -1\n                    ? \"반려됨\"\n                    : \"\"}\n                </td>\n                <td>{item.status === 1 && item.status === -1\n                    ? \"\"\n                    : item.status === 0\n                    ? <button onClick={() => handleSatus(item.irefund)}>\n                        확인\n                      </button>\n                    : \"확인(완)\"}\n                  \n                </td>\n              </tr>\n            </tbody>\n          ))}\n        </table>\n      </ReportMain>\n      <div style={{ margin: \"0 auto\" }}>\n        <PaginationContent\n          current={page}\n          onChange={handlePageChange}\n          total={reserveLength}\n          pageSize={12}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default AdminReservePage;\n","import { jwtAxios } from \"../../util/jwtUtil\";\nimport { SERVER_URL } from \"../config\";\n\nexport const getAdminReserve = async (\n    page,\n    state,\n    setReserveList,\n    setReserveLength,\n  ) => {\n    try {\n      let url = `${SERVER_URL}/api/admin/refund?page=${page}`\n      if (state!==null) {\n        url += `&status=${state}`;\n      }\n      const res = await jwtAxios.get(url);\n      setReserveList([...res.data.refunds]);\n      setReserveLength(res.data.totalRefundCount)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const deleteIrefund = async (irefund,div) => {\n    try {\n        const url = `${SERVER_URL}/api/admin/refund/${irefund}?div=${div}`\n        const res = await jwtAxios.delete(url);\n        return res.data;\n      } catch (error) {\n          console.log(error);\n      }\n}","import React, { useEffect, useState } from \"react\";\nimport AdminMemberPage from \"./AdminMemberPage\";\nimport AdminReportPage from \"./AdminReportPage\";\nimport AdminBoardPage from \"./AdminBoardPage\";\nimport AdminFreeBoardPage from \"./AdminFreeBoardPage\";\nimport AdminChatHistoryPage from \"./AdminChatHistoryPage\";\nimport styled from \"@emotion/styled\";\nimport AdminCategory from \"../../components/admin/AdminCategory\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { LoginState } from \"../../styles/header/HeaderStyle\";\nimport { DivisionLine } from \"../../styles/login/LoginPageStyle\";\nimport { AdminTitle } from \"../../styles/admin/AdminPageStyle\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport AdminReservepage from \"./AdminReservepage\";\n\nconst AllWidth = styled.div`\n  width: 1260px;\n  margin: 0 auto;\n`;\nconst Flex = styled.div`\n  display: flex;\n  margin-bottom: 9rem;\n  > div:nth-of-type(2) {\n    width: 1090px;\n    margin-left: 35px;\n    display: flex;\n    flex-direction: column;\n    gap: 3.3rem;\n  }\n`;\n\nconst AdminPage = () => {\n  const [activeBtn, setActiveBtn] = useState(\"개인 회원\");\n  const [selectedItem, setSelectedItem] = useState(\"개인 회원\");\n  const adminCate = [\n    {\n      title: \"회원 조회\",\n      name: [\"individual\", \"enterprise\"],\n      list: [\"개인 회원\"],\n    },\n    {\n      title: \"신고 내역\",\n      name: [\"conflict\", \"accident\"],\n      list: [\"분쟁 신고\", \"사고 신고\"],\n    },\n    {\n      title: \"게시판 내역\",\n      name: [\"prod\", \"free\"],\n      list: [\"상품 게시판\", \"자유 게시판\"],\n    },\n    {\n      title: \"내역 관리\",\n      name: [\"chat\",\"reserve\"],\n      list: [\"신고 채팅 내역\",\"예약 취소 내역\"],\n    },\n  ];\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // 로그아웃\n  const { moveToPath, isLogin, doLogout } = useCustomLogin();\n  const handleLogout = () => {\n    doLogout();\n    moveToPath(\"/\");\n  };\n\n  // 메인페이지로 이동\n  const handleMain = () => {\n    navigate(`/`);\n  };\n\n  // AdminCate 상태 변경\n  useEffect(() => {\n    const storedItem = sessionStorage.getItem(\"selectedItem\");\n    if (storedItem && storedItem !== selectedItem) {\n      setSelectedItem(storedItem);\n      setActiveBtn(storedItem);\n    } else {\n      const params = new URLSearchParams(location.search);\n      const item = params.get(\"item\") || selectedItem;\n      setSelectedItem(item);\n      setActiveBtn(item);\n    }\n  }, [location.search, selectedItem]);\n\n  const handleSubItemClick = subItem => {\n    setSelectedItem(subItem);\n    setActiveBtn(subItem);\n    const selectedCategory = adminCate.find(category =>\n      category.list.includes(subItem),\n    );\n\n    if (selectedCategory) {\n      const selectedName = selectedCategory.name.find(name => {\n        return (\n          (name === \"individual\" && subItem === \"개인 회원\") ||\n          (name === \"conflict\" && subItem === \"분쟁 신고\") ||\n          (name === \"accident\" && subItem === \"사고 신고\") ||\n          (name === \"prod\" && subItem === \"상품 게시판\") ||\n          (name === \"free\" && subItem === \"자유 게시판\") ||\n          (name === \"chat\" && subItem === \"신고 채팅 내역\") || \n          (name === \"reserve\" && subItem === \"예약 취소 내역\")\n        );\n      });\n\n      if (selectedName) {\n        navigate(`/admin?${selectedName}`, {\n          state: { selectedItem: subItem },\n        });\n        sessionStorage.setItem(\"selectedItem\", subItem);\n      }\n    }\n  };\n\n  return (\n    <AllWidth>\n      <div>\n        <AdminTitle>\n          <h1>관리자 페이지</h1>\n          <LoginState>\n            <button onClick={handleLogout}>로그아웃</button>\n            <DivisionLine color=\"#C14B45\"></DivisionLine>\n            <button onClick={handleMain}>메인페이지</button>\n          </LoginState>\n        </AdminTitle>\n        <Flex>\n          <AdminCategory\n            adminCate={adminCate}\n            selectedItem={selectedItem}\n            onSubItemClick={handleSubItemClick}\n          />\n          <div>\n            {activeBtn === \"개인 회원\" && (\n              <AdminMemberPage\n                activeBtn={activeBtn}\n              />\n            )}\n            {activeBtn === \"분쟁 신고\" || activeBtn === \"사고 신고\" ? (\n              <AdminReportPage\n                activeBtn={activeBtn}\n              />\n            ) : null}\n            {activeBtn === \"상품 게시판\" && <AdminBoardPage />}\n            {activeBtn === \"자유 게시판\" && <AdminFreeBoardPage />}\n            {activeBtn === \"신고 채팅 내역\" && <AdminChatHistoryPage />}\n            {activeBtn === \"예약 취소 내역\" && <AdminReservepage activeBtn={activeBtn} />}\n          </div>\n        </Flex>\n      </div>\n    </AllWidth>\n  );\n};\n\nexport default AdminPage;\n","import styled from \"@emotion/styled\";\n// 헤더\nexport const HeaderStyle = styled.div`\n  position: fixed;\n  z-index: 100;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #fff;\n  width: 100vw;\n  text-align: center;\n  padding-bottom: 15px;\n  height: 155px;\n`;\nexport const HeaderTop = styled.div`\n  margin: 30px auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 1300px;\n`;\nexport const HeaderLogo = styled.img`\n  width: 90px;\n  height: 60px;\n  background-color: transparent;\n  cursor: pointer;\n`;\nexport const SearchForm = styled.div`\n  display: flex;\n  position: relative;\n  width: 640px;\n  height: 60px;\n  align-items: center;\n  border-radius: 80px;\n  border: 1px solid #2c39b5;\n  input {\n    width: 350px;\n    height: 58px;\n    padding-left: 20px;\n  }\n  input:hover {\n    width: 350px;\n    background-color: #eee;\n    border-radius: 45px;\n  }\n  select {\n    width: 120px;\n    height: 22px;\n    font-size: 12px;\n    border: 1px solid #2c39b5;\n  }\n`;\n\nexport const SearchDiv = styled.div`\n    width: 290px;\n    height: 58px;\n    :hover {\n      background-color: #eee;\n      border-radius: 45px;\n    }\n    b {\n    display: flex;\n    height: 50%;\n    font-size: 16px;\n    color: #777;\n    font-weight: 400;\n    padding-top: 10px;\n    padding-left: 25px;\n    }\n    >div {\n      display: flex;\n      align-items: center;\n      gap: 5px;\n      height: 50%;\n      padding-left: 25px;\n      p {\n        display: block;\n        content: \"\";\n        width: 1px;\n        height: 10px;\n        background: #2c39b5;\n      }\n      span {\n        line-height: 1.6;\n        font-size: 12px;\n        cursor: pointer;\n      }\n    }\n`\n\nexport const SearchWord = styled.input`\n  display: flex;\n  width: 350px;\n  height: 60px;\n  flex-direction: column;\n  justify-content: center;\n  flex-shrink: 0;\n  border: none;\n  background-color: transparent;\n  color: rgb(0, 0, 0);\n  font-size: 16px;\n  font-style: normal;\n  line-height: 24px; /* 80% */\n  letter-spacing: 0.5px;\n`;\nexport const SearchDivisionLine = styled.div`\nwidth: 1px;\nheight: 26px;\nbackground: #eee;\n`;\nexport const SearchBt = styled.button`\n  position: absolute;\n  right: 10px;\n  width: 40px;\n  height: 40px;\n  border-radius: 100%;\n  flex-shrink: 0;\n  border: none;\n  background-image: url(\"/images/header/bt_search.svg\");\n  cursor: pointer;\n`;\nexport const LoginState = styled.div`\n  display: flex;\n  align-items: center;\n  width: 200px;\n  height: 20px;\n  justify-content: space-between;\n  button {\n    width: 80px;\n    background: transparent;\n    border: none;\n    color: #777;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 16px;\n    cursor: pointer;\n  }\n`;\nexport const HeaderMenu = styled.div`\n  margin: 0 auto;\n  width: 1300px;\n  display: flex;\n  gap: 40px;\n  ul {\n    gap: 40px;\n    display: flex;\n    list-style: none;\n  }\n  li {\n    color: #4b4b4b;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 16px;\n  }\n`;\nexport const HeaderMainMenu = styled.div`\n  display: block;\n  width: 35px;\n  height: 35px;\n  img {\n    padding: 7px;\n    cursor: pointer;\n  }\n`;\n\n// 카테고리 메뉴창\nexport const CategoryTab = styled.div`\n  display: flex;\n  gap: 5px;\n`;\nexport const MainCate = styled.div`\n  width: 100px;\n`;\nexport const MainCateTitle = styled.li`\n  height: 30px;\n  width: 85px;\n  margin: 0 auto 5px;\n  padding-top: 6px;\n  cursor: pointer;\n`;\nexport const SubCate = styled.div`\n  display: block;\n  border: 1px solid #2c39b5;\n  width: 100px;\n  padding-top: 10px;\n  background: #fff;\n  li {\n    margin-bottom: 10px;\n    padding: 7px 0;\n    color: #777;\n    cursor: pointer;\n  }\n`;\n\nexport const CateHover = styled.div`\n  display: block;\n  position: absolute;\n  top: 70px;\n  right: 20px;\n  border: 1px solid #2c39b5;\n  width: 245px;\n  height: 90px; \n  padding: 15px;\n  background: #fff;\n  div {\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n    h1 {\n      font-size: 12px;\n      font-weight: 400;\n      color: #777;\n    }\n  }\n`\n","import styled from \"@emotion/styled\";\n\nexport const LoginPageStyle = styled.div`\n  width: 1300px;\n  /* text-align: center; */\n  margin: 0 auto;\n  /* background: skyblue; */\n  padding-bottom: 120px;\n`;\nexport const LogoZone = styled.div`\nwidth: 100%;\ntext-align: center;\n`;\nexport const Logo = styled.img`\n  margin: 0px auto 30px auto;\n  width: 80px;\n  height: 60px;\n  background-color: transparent;\n`;\nexport const LoginBox = styled.div`\n  margin: 0 auto;\n  /* box-sizing: border-box; */\n  width: 450px;\n  height: ${props => (props.height ? props.height : \"540px\")};\n  /* height: 540px; */\n  border-radius: 10px;\n  border: 1px solid #2c39b5;\n  padding-left: 30px;\n  p {\n    margin-top: 50px;\n    margin-bottom: ${props => (props.mgbtm ? props.mgbtm : \"160px\")};\n\n    color: #000;\n    font-family: KyivType Sans;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 350;\n    line-height: normal;\n  }\n  li {\n    position: relative;\n    cursor: pointer;\n\n    color: #000;\n    font-family: KyivType Sans;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n  \n`;\nexport const IdBox = styled.input`\n  width: 390px;\n  height: 50px;\n  border-radius: 10px;\n  border: 1px solid #2c39b5;\n  padding-left: 20px;\n\n  color: #000;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  margin-bottom: 10px;\n`;\nexport const PwBox = styled(IdBox)`\n  margin-bottom: 30px;\n`;\nexport const LoginBt = styled.button`\n  width: 390px;\n  height: 50px;\n  border-radius: 10px;\n  background: #2c39b5;\n  margin-bottom: 20px;\n  border: 0;\n  color: #fff;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  cursor: pointer;\n`;\nexport const DivisionLine = styled.div`\n  width: 1px;\n  height: 15px;\n  background: ${props => (props.color ? props.color : \"#2c39b5\")};\n`;\n","import axios from \"axios\";\nimport { getCookie, setCookie } from \"./cookieUtil\";\nimport { SERVER_URL } from \"../api/config\";\n\nexport const jwtAxios = axios.create();\n\nconst beforeReq = config => {\n  // console.log(\"1. 요청전 전달\", config);\n  // console.log(\"2. 쿠키로 토큰가져오기\");\n  const memberInfo = getCookie(\"member\");\n\n  if (!memberInfo) {\n    // console.log(\"쿠키 정보 없네요.\");\n    return Promise.reject({ response: { data: { error: \"Login하세요.\" } } });\n  }\n  // console.log(\"3. 쿠키에서 토큰 정보를 뜯는다.\");\n  const { accessToken } = memberInfo;\n  // console.log(\"4. 엑세스토큰 정보\", accessToken);\n  config.headers.Authorization = `Bearer ${accessToken}`;\n  return config;\n};\n\nconst requestFail = error => {\n  // console.log(\"요청후 실패시\", error);\n  return Promise.reject(error);\n};\n\nconst refreshJWT = async (accessToken, refreshToken) => {\n  const host = SERVER_URL;\n  const header = { headers: { Authorization: `Bearer ${accessToken}` } };\n  const res = await axios.get(\n    `${host}/api/user/refresh-token?refreshToken=${refreshToken}`,\n    header,\n  );\n  // console.log(\"1. refreshToken 토큰 요청\");\n  // console.log(\"2. 백엔드에서 새로 준 값\", res.data);\n  return res.data;\n};\n\nconst beforeRes = async res => {\n  // console.log(\"Response 전처리\", res);\n  const data = res.data;\n  // console.log(\"1. Response 오기전 서버 전달해준 데이터, data\");\n  if (data && data.error === \"ERROR_ACCESS_TOKEN\") {\n    // console.log(\"2. 일반적 오류가 아닌 엑세스 토큰 에러입니다.\");\n    // console.log(\"3. 새로운 토큰을 요청해야 합니다.\");\n    // console.log(\"4. 쿠키에 있는 정보를 읽어서 다시 시도합니다.\");\n    const memberInfo = getCookie(\"member\");\n    // console.log(\"5. 쿠키 토큰 정보 AccessToken\", memberInfo.accessToken);\n    // console.log(\"6. 쿠키 토큰 정보 RefreshToken\", memberInfo.refreshToken);\n    // console.log(\"7. 위의 정보로 새로운 토큰을 요청합니다.\");\n    const result = await refreshJWT(\n      memberInfo.accessToken,\n      memberInfo.refreshToken,\n    );\n    // console.log(\"8. 요청 이후 되돌아와서 새로운 정보로 쿠키를 업데이트\");\n    (memberInfo.accessToken = result.accessToken),\n      (memberInfo.refreshToken = result.refreshToken),\n      setCookie(\"member\", JSON.stringify(memberInfo));\n\n    // console.log(\"9. 데이터 요청하던 API 재요청\");\n    const originalRequest = res.config;\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`;\n    return await axios(originalRequest);\n  }\n  return res;\n};\n\nconst responseFail = error => {\n  // console.log(\"Response Fail Err\", error);\n  return Promise.reject(error);\n};\n\njwtAxios.interceptors.request.use(beforeReq, requestFail);\njwtAxios.interceptors.response.use(beforeRes, responseFail);\n"],"names":["client_id","redirect_uri","authParam","URLSearchParams","response_type","getKakaoLoginLink","concat","toString","getAccessToken","async","params","grant_type","code","authCode","axios","post","headers","data","access_token","getMemberWithAccessToken","response","fetch","Authorization","accessToken","ok","json","Error","kakaoLogout","method","console","log","document","cookie","ModalBackground","styled","div","_templateObject","_taggedTemplateLiteral","_ref","txt","txt2","onConfirm","JoinPopUp","_templateObject2","_jsxs","children","_jsx","onClick","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","sessionStorage","getItem","doLogin","loginParam","successFn","failFn","errorFn","loginPostAsync","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","Navigate","to","userAuth","SERVER_URL","deleteUser","iuser","reason","_res$data$user","_res$data2","url","jwtAxios","delete","user","error","ReportTitle","ReportSearchForm","ReportSearchWord","input","_templateObject3","ReportSearchBt","button","_templateObject4","SearchOptionSelect","select","_templateObject5","MemberTitle","_templateObject6","MemberSearchWord","_templateObject7","MemberSearchForm","_templateObject8","MemberSearchBt","_templateObject9","ReportMain","_templateObject10","props","width","PaginationContent","Pagination","_templateObject11","searchOptions","id","title","membershipStatusOptions","tableHeaderStyle","padding","border","height","textAlign","backgroundColor","fontWeight","fontSize","tableCellStyle","managementButtonStyle","borderRadius","background","color","boxShadow","cursor","zIndex","activeBtn","type","setType","useState","setState","totalUserCount","setTotalUserCount","memberData","setMemberData","searchKeyword","setSearchKeyword","currentPage","setCurrentPage","useEffect","fetchData","page","search","status","_res$data$users","_res$data","res","get","users","getProducts","style","display","gap","alignItems","onChange","e","target","value","map","item","placeholder","borderCollapse","marginTop","member","index","uid","nick","Date","createdAt","toLocaleString","email","penalty","userId","reasonNumber","convertReasonToNumber","deletedUser","handleMemberWithdrawal","current","total","pageSize","showSizeChanger","ReportContentStyle","ContentTitle","ContentMain","BtSection","ReportYetContent","detail","onClose","Bt_No","Bt_Ok","src","className","ReportDoneContent","_ref2","stateCate","conflictCate","accidentCate","reportList","setReportList","reportLength","setReportLength","setPage","setDiv","setSearch","inputValue","setInputValue","category","setCategory","reportListData","disputes","totalDisputeCount","getDispute","idispute","setIdispute","stateData","postDispute","contentYetModal","setContentYetModal","contentDoneModal","setContentDoneModal","selectedDetail","setSelectedDetail","_Fragment","closeContentYetModal","handleClickNo","handleClickOk","closeContentDoneModal","defaultValue","disabled","hidden","reportedUserUid","reportedUserNick","reporterUid","handleClickYet","handleClickDone","margin","_tempPage","getAllProducts","sort","base_url","charAt","getFreeBoard","BoardWrap","HeaderWrap","mainCategory","subCategory","SEARCH_OPTIONS","SEARCH_OPTIONS_TEXT","AdminBoardPage","boardAllData","setBoardAllData","selectedSearchOption","setSelectedSearchOption","alert","message","errorCode","handleClickDelete","window","confirm","iproduct","deleteProduct","sortType","setSortType","getSortedData","newSortType","option","handleSearchSubmit","products","React","pricePerDay","view","productInquiry","moveToDetail","productManage","paddingTop","AdminFreeBoardPage","freeBoardAllData","setFreeBoardAllData","iboard","deleteFreeBoard","totalBoardCount","selectedOption","boards","postInquiry","postManage","ModalOverlay","ModalContainer","toggleModal","AdminChatHistoryPage","chatHistoryData","setChatHistoryData","modal","setModal","modalContent","setModalContent","content","getChatHistory","totalChatCount","chats","AdminChatHistoryModal","totalPage","AdminCateDiv","AdminCateUl","ul","AdminCateLi","li","selected","selectedItem","adminCate","onSubItemClick","list","subItem","AdminTitle","MyModalDiv","Confirm","Cancel","onCancel","reserveList","setReserveList","reserveLength","setReserveLength","showModal","setShowModal","itemToDelete","setItemToDelete","reserveListData","refunds","totalRefundCount","getAdminReserve","handleReserveButton","irefund","deleteIrefund","AdminReserve","closeModal","number","amount","handleSatus","AllWidth","Flex","AdminPage","setActiveBtn","setSelectedItem","name","location","useLocation","storedItem","LoginState","handleLogout","DivisionLine","handleMain","AdminCategory","selectedCategory","find","includes","selectedName","setItem","AdminMemberPage","AdminReportPage","AdminReservepage","HeaderStyle","HeaderTop","HeaderLogo","img","SearchForm","SearchDiv","SearchWord","SearchDivisionLine","SearchBt","HeaderMenu","HeaderMainMenu","CategoryTab","_templateObject12","MainCate","_templateObject13","MainCateTitle","_templateObject14","SubCate","_templateObject15","CateHover","_templateObject16","LoginPageStyle","LogoZone","Logo","LoginBox","mgbtm","IdBox","PwBox","LoginBt","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","result","refreshToken","host","header","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}