{"version":3,"file":"static/js/593.44f97bfe.chunk.js","mappings":"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","sources":["pages/main/MainMoreSearchPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { SideBar } from \"../../components/SideBar\";\nimport { MoreWrap } from \"../../styles/main/mainMoreStyle\";\nimport { Pagination } from \"antd\";\nimport Layout from \"../../layouts/Layout\";\nimport {\n  getCountSearchProduct,\n  getSearchProduct,\n} from \"../../api/main/mainMore_api\";\nimport Like from \"../../components/details/Like\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport JoinPopUp, {\n  ModalBackground,\n} from \"../../components/joinpopup/JoinPopUp\";\nimport { PaginationBlue } from \"../../styles/free/FreePageStyle\";\n\nconst region = [\n  {\n    id: 1,\n    title: \"대구\",\n  },\n  {\n    id: 2,\n    title: \"서울\",\n  },\n  {\n    id: 3,\n    title: \"부산\",\n  },\n  {\n    id: 4,\n    title: \"인천\",\n  },\n  {\n    id: 5,\n    title: \"광주\",\n  },\n  {\n    id: 6,\n    title: \"대전\",\n  },\n  {\n    id: 7,\n    title: \"울산\",\n  },\n];\nconst district = [\n  [\n    { id: 1, title: \"달서구\" },\n    { id: 2, title: \"중구\" },\n    { id: 3, title: \"동구\" },\n    { id: 4, title: \"서구\" },\n    { id: 5, title: \"북구\" },\n    { id: 6, title: \"수성구\" },\n    { id: 7, title: \"달성군\" },\n  ],\n  [\n    { id: 1, title: \"종로구\" },\n    { id: 2, title: \"중구\" },\n    { id: 3, title: \"용산구\" },\n    { id: 4, title: \"성동구\" },\n    { id: 5, title: \"광진구\" },\n    { id: 6, title: \"동대문구\" },\n    { id: 7, title: \"중랑구\" },\n    { id: 8, title: \"성북구\" },\n    { id: 9, title: \"강북구\" },\n    { id: 10, title: \"도봉구\" },\n    { id: 11, title: \"노원구\" },\n    { id: 12, title: \"은평구\" },\n    { id: 13, title: \"서대문구\" },\n    { id: 14, title: \"마포구\" },\n    { id: 15, title: \"양천구\" },\n    { id: 16, title: \"강서구\" },\n    { id: 17, title: \"구로구\" },\n    { id: 18, title: \"금천구\" },\n    { id: 19, title: \"영등포구\" },\n    { id: 20, title: \"동작구\" },\n    { id: 21, title: \"관약구\" },\n    { id: 22, title: \"서초구\" },\n    { id: 23, title: \"강남구\" },\n    { id: 24, title: \"송파구\" },\n    { id: 25, title: \"강동구\" },\n    { id: 26, title: \"강남구\" },\n  ],\n  [\n    { id: 1, title: \"중구\" },\n    { id: 2, title: \"서구\" },\n    { id: 3, title: \"동구\" },\n    { id: 4, title: \"영도구\" },\n    { id: 5, title: \"부산진구\" },\n    { id: 6, title: \"동래구\" },\n    { id: 7, title: \"남구\" },\n    { id: 8, title: \"북구\" },\n    { id: 9, title: \"해운대구\" },\n    { id: 10, title: \"사하구\" },\n    { id: 11, title: \"금정구\" },\n    { id: 12, title: \"강서구\" },\n    { id: 13, title: \"연제구\" },\n    { id: 14, title: \"수영구\" },\n    { id: 15, title: \"사상구\" },\n    { id: 16, title: \"기장군\" },\n  ],\n  [\n    { id: 1, title: \"중구\" },\n    { id: 2, title: \"동구\" },\n    { id: 3, title: \"미추홀구\" },\n    { id: 4, title: \"연수구\" },\n    { id: 5, title: \"남동구\" },\n    { id: 6, title: \"부평구\" },\n    { id: 7, title: \"계양구\" },\n    { id: 8, title: \"서구\" },\n  ],\n  [\n    { id: 1, title: \"동구\" },\n    { id: 2, title: \"서구\" },\n    { id: 3, title: \"남구\" },\n    { id: 4, title: \"북구\" },\n    { id: 5, title: \"광산구\" },\n  ],\n  [\n    { id: 1, title: \"동구\" },\n    { id: 2, title: \"서구\" },\n    { id: 3, title: \"중구\" },\n    { id: 4, title: \"유성구\" },\n    { id: 5, title: \"대덕구\" },\n  ],\n  [\n    { id: 1, title: \"중구\" },\n    { id: 2, title: \"남구\" },\n    { id: 3, title: \"동구\" },\n    { id: 4, title: \"북구\" },\n  ],\n];\n\nconst MainMoreSearchPage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { state } = location;\n  const searchValue = sessionStorage.getItem(\"searchValue\");\n  const searchParams = new URLSearchParams(location.search);\n  const parseMainCategory = parseInt(searchParams.get(\"mc\"));\n  const parseSubCategory = parseInt(searchParams.get(\"sc\"));\n\n  // 데이터 연동(목록 불러오기)\n  const fetchData = async (pageNum, _sortType, _addr) => {\n    try {\n      const res = await getSearchProduct(\n        searchValue,\n        pageNum,\n        parseMainCategory,\n        parseSubCategory,\n        _sortType,\n        _addr,\n      );\n      setDatas(res);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const [datas, setDatas] = useState(state.result);\n\n  // 지역 카테고리 선택\n  const [regionValue, setRegionValue] = useState(\"\");\n  const [selectedDistrict, setSelectedDistrict] = useState([\n    { id: 0, title: \"전체\" },\n  ]);\n\n  const handleRegionChange = e => {\n    const selectedRegionValueId = parseInt(e.target.value);\n    const selectedOption = region.find(\n      item => item.id === selectedRegionValueId,\n    );\n    setRegionValue(selectedOption ? selectedOption.title : \"\");\n    if (selectedOption) {\n      const selectedDistrictValueId = selectedRegionValueId - 1;\n      const selectedDistrictValue = district[selectedDistrictValueId];\n      setSelectedDistrict(selectedDistrictValue);\n    }\n  };\n\n  const [districtValue, setDistrictValue] = useState(\"\");\n  const handleDistrictChange = e => {\n    const selectedRegionValueId = parseInt(e.target.value);\n    const selectedOption = selectedDistrict.find(\n      item => item.id === selectedRegionValueId,\n    );\n    setDistrictValue(selectedOption ? selectedOption.title : \"\");\n  };\n\n  const [addr, setAddr] = useState(\"\");\n  useEffect(() => {\n    if (!regionValue && !districtValue) {\n      setAddr(null);\n    }\n    if (regionValue && !districtValue) {\n      setAddr(regionValue);\n    }\n    if (regionValue && districtValue) {\n      setAddr(`${regionValue}_${districtValue}`);\n    }\n  }, [regionValue, districtValue]);\n\n  console.log(addr);\n\n  // 데이터연동(페이지네이션)\n  const [pageNum, setPageNum] = useState(1);\n  const [totalPage, setTotalPage] = useState(null);\n\n  const handlePageChange = _tempPage => {\n    setPageNum(_tempPage);\n  };\n\n  const listCountData = async () => {\n    await getCountSearchProduct(\n      searchValue,\n      parseMainCategory,\n      parseSubCategory,\n      addr,\n      setTotalPage,\n    );\n  };\n  useEffect(() => {\n    listCountData();\n  }, [searchValue, parseMainCategory, parseSubCategory, addr]);\n\n  // 정렬\n  const [sortType, setSortType] = useState(null);\n\n  useEffect(() => {\n    if (!sortType && !addr) fetchData(pageNum, null, null);\n    if (!sortType && addr) fetchData(pageNum, null, addr);\n    if (sortType && !addr) fetchData(pageNum, sortType, null);\n    if (sortType && addr) fetchData(pageNum, sortType, addr);\n  }, [pageNum, sortType, addr]);\n\n  // useEffect(() => {\n  //   const regionData = datas.filter(item =>\n  //     item.addr.includes(region[regionNum].title.slice(0, 2)),\n  //   );\n  //   const districtData = regionData.filter(item =>\n  //     item.addr.includes(region[regionNum].list[districtNum]),\n  //   );\n  //   setFilterData(districtData);\n  // }, [districtNum, datas, regionNum]);\n\n  // details 페이지로 이동\n  const { isLogin } = useCustomLogin();\n  const [loginState, setLoginState] = useState(false);\n\n  const handlePageChangeDetails = async _item => {\n    if (isLogin) {\n      const url = `/details?mc=${_item.categories.mainCategory}&sc=${_item.categories.subCategory}&productId=${_item.iproduct}`;\n      navigate(url);\n    } else {\n      setLoginState(true);\n    }\n  };\n  const closeModal = () => {\n    setLoginState(false);\n    navigate(`/login`);\n  };\n\n  return (\n    <Layout>\n      {loginState && (\n        <>\n          <JoinPopUp txt=\"로그인 후 이용해주세요.\" onConfirm={closeModal} />\n          <ModalBackground></ModalBackground>\n        </>\n      )}\n      <SideBar />\n      <MoreWrap>\n        <div className=\"header-wrap\">\n          <div className=\"header-cate-wrap\" style={{ flexDirection: \"column\" }}>\n            <div>검색어 : {searchValue}</div>\n            <div>{totalPage}개</div>\n          </div>\n          <div>\n            <div className=\"bt-wrap\">\n              <div>\n                <button\n                  onClick={() => setSortType(0)}\n                  style={{\n                    fontWeight: sortType === 0 ? \"bold\" : \"normal\",\n                    color: sortType === 0 ? \"#2c39b5\" : \"\",\n                  }}\n                >\n                  최신순\n                </button>\n                <img src=\"/images/main/line.svg\" />\n                <button\n                  onClick={() => setSortType(2)}\n                  style={{\n                    fontWeight: sortType === 2 ? \"bold\" : \"normal\",\n                    color: sortType === 2 ? \"#2c39b5\" : \"\",\n                  }}\n                >\n                  조회순\n                </button>\n              </div>\n            </div>\n            <div className=\"region-wrap\">\n              <select onChange={handleRegionChange} defaultValue=\"\">\n                <option value=\"\" disabled hidden>\n                  전체\n                </option>\n                {region.map(item => {\n                  return (\n                    <option key={item.id} value={item.id}>\n                      {item.title}\n                    </option>\n                  );\n                })}\n              </select>\n              <select onChange={handleDistrictChange} defaultValue=\"\">\n                <option value=\"\" disabled hidden>\n                  전체\n                </option>\n                {selectedDistrict.map(item => {\n                  return (\n                    <option key={item.id} value={item.id}>\n                      {item.title}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"main-wrap\">\n          {datas &&\n            datas.map((item, index) => (\n              <div\n                className=\"item-wrap\"\n                key={`MainMore-item-${index}`}\n                onClick={() => {\n                  handlePageChangeDetails(item);\n                }}\n              >\n                <div className=\"like-wrap\">\n                  <Like\n                    isLiked={item.isLiked !== 0 ? true : false}\n                    productId={item.iproduct}\n                  />\n                </div>\n                <img\n                  className=\"item-image\"\n                  src={`/pic/${item.prodMainPic}`}\n                  alt=\"\"\n                />\n\n                <div className=\"desc-wrap\">\n                  <span className=\"desc-title\">{item.title}</span>\n                  <hr />\n                  <div className=\"desc-price\">\n                    {item.rentalPrice.toLocaleString()}\n                  </div>\n                  <div className=\"ad-view-wrap\">\n                    <div className=\"desc-ad\">{item.addr}</div>\n                    <div className=\"view\">조회수{item.view}</div>\n                  </div>\n                  {item.hashTags.map((tagData, tagIndex) => (\n                    <span key={tagIndex} className=\"hash-tag\">\n                      {tagData.tag}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            ))}\n        </div>\n        <div className=\"pagination\">\n          <PaginationBlue\n            current={pageNum}\n            onChange={handlePageChange}\n            total={totalPage}\n            pageSize={16}\n          />\n        </div>\n      </MoreWrap>\n    </Layout>\n  );\n};\n\nexport default MainMoreSearchPage;\n"],"names":["region","id","title","district","MainMoreSearchPage","navigate","useNavigate","location","useLocation","state","searchValue","sessionStorage","getItem","searchParams","URLSearchParams","search","parseMainCategory","parseInt","get","parseSubCategory","fetchData","async","pageNum","_sortType","_addr","res","getSearchProduct","setDatas","console","log","error","datas","useState","result","regionValue","setRegionValue","selectedDistrict","setSelectedDistrict","districtValue","setDistrictValue","addr","setAddr","useEffect","concat","setPageNum","totalPage","setTotalPage","getCountSearchProduct","listCountData","sortType","setSortType","isLogin","useCustomLogin","loginState","setLoginState","_jsxs","Layout","children","_Fragment","_jsx","JoinPopUp","txt","onConfirm","closeModal","ModalBackground","SideBar","MoreWrap","className","style","flexDirection","onClick","fontWeight","color","src","onChange","e","selectedRegionValueId","target","value","selectedOption","find","item","defaultValue","disabled","hidden","map","index","url","_item","categories","mainCategory","subCategory","iproduct","handlePageChangeDetails","Like","isLiked","productId","prodMainPic","alt","rentalPrice","toLocaleString","view","hashTags","tagData","tagIndex","tag","PaginationBlue","current","_tempPage","total","pageSize"],"sourceRoot":""}