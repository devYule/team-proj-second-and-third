{"version":3,"file":"static/js/989.3532ebbd.chunk.js","mappings":"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","sources":["api/free/free_api.js","components/sideBarStyle.js","components/SideBar.js","pages/free/FreePage.js","styles/CommonStyles.js","styles/free/FreePageStyle.js"],"sourcesContent":["import axios from \"axios\";\nimport { SERVER_URL } from \"../config\";\nimport { jwtAxios } from \"../../util/jwtUtil\";\n\n// FreePage 전체 게시글 호출\nexport const getFreeList = async ({\n  page,\n  search,\n  type,\n  sort,\n  setFreeList,\n  setFreeLength,\n}) => {\n  try {\n    let url = `${SERVER_URL}/api/board?page=${page}`;\n    if (search) {\n      url += `&search=${search}`;\n    }\n    if (type) {\n      url += `&type=${type}`;\n    }\n    if (sort) {\n      url += `&sort=${sort}`;\n    }\n\n    const res = await jwtAxios.get(url);\n    setFreeList([...res.data.boardList]);\n    setFreeLength(res.data.totalBoardCount);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// 게시글 DetailsPage\nexport const getFreeData = async iboard => {\n  try {\n    const url = `${SERVER_URL}/api/board/${iboard}`;\n\n    const res = await axios.get(url);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// 좋아요\nexport const getLike = async iboard => {\n  try {\n    const url = `${SERVER_URL}/api/board/like/${iboard}`;\n\n    const res = await jwtAxios.get(url);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// 게시글 등록\nexport const postFreeData = async ({ obj }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n\n    const url = `${SERVER_URL}/api/board`;\n    const res = await jwtAxios.post(url, obj, header);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// 게시글 수정\nexport const putFreeData = async ({ obj }) => {\n  try {\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n\n    const url = `${SERVER_URL}/api/board`;\n    const res = await jwtAxios.put(url, obj, header);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n// 게시글 삭제\nexport const deleteFreeData = async iboard => {\n  try {\n    const url = `${SERVER_URL}/api/board/${iboard}`;\n\n    const res = await jwtAxios.delete(url);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from \"@emotion/styled\";\nimport { Common } from \"../styles/CommonStyles\";\n\nexport const Wrap = styled.div`\n  z-index: 9999;\n  position: fixed;\n  top: 300px;\n  right: 50px;\n`;\n\nexport const SideBarWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 70px;\n  height: 500px;\n  background-color: #eeeef1;\n  border-radius: 30px;\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 40px;\n  padding: 10px;\n  div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    p {\n      padding-top: 3px;\n      font-size: 1.4rem;\n      color: ${Common.color.p300};\n    }\n  }\n`;\nexport const Write = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/plus.svg\");\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\nexport const Chat = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/chat.svg\") center;\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const FreeBoard = styled.button`\n  width: 25px;\n  height: 25px;\n  background: url(\"/images/main/board.svg\") center;\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\nexport const Profile = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/profile.svg\");\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\nexport const Call = styled.button`\n  width: 40px;\n  height: 40px;\n\n  background: url(\"/images/main/phone.svg\");\n\n  background-repeat: no-repeat;\n  border: none;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport {\n  ButtonWrap,\n  Call,\n  Chat,\n  FreeBoard,\n  Like,\n  Profile,\n  SideBarWrap,\n  Wrap,\n  Write,\n} from \"./sideBarStyle\";\nimport { Link } from \"react-router-dom\";\n\nexport const SideBar = ({ setSelectedItem, setActiveBtn }) => {\n  const handleLinkClick = subItem => {\n    if (setSelectedItem && setActiveBtn) {\n      setSelectedItem(subItem);\n      setActiveBtn(subItem);\n    }\n    sessionStorage.setItem(\"selectedItem\", subItem);\n  };\n\n  return (\n    <Wrap>\n      <SideBarWrap>\n        <ButtonWrap>\n          <Link to=\"/write\">\n            <div>\n              <Write></Write>\n              <p>등록</p>\n            </div>\n          </Link>\n          <Link to=\"/\">\n            <div>\n              <Chat></Chat>\n              <p>채팅</p>\n            </div>\n          </Link>\n          <Link to=\"/free\">\n            <div>\n              <FreeBoard></FreeBoard>\n              <p>게시판</p>\n            </div>\n          </Link>\n          <Link\n            to=\"/my\"\n            onClick={() => {\n              handleLinkClick(\"대여중\");\n            }}\n          >\n            <div>\n              <Profile></Profile>\n              <p>MY</p>\n            </div>\n          </Link>\n          <Link to=\"/customer\">\n            <div>\n              <Call></Call>\n              <p>고객센터</p>\n            </div>\n          </Link>\n        </ButtonWrap>\n      </SideBarWrap>\n    </Wrap>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Layout from \"../../layouts/Layout\";\nimport {\n  BtSection,\n  FreeHeader,\n  FreeMain,\n  FreePageStyle,\n  FreeSearchForm,\n  PaginationBlue,\n  SearchSection,\n  SortWrap,\n} from \"../../styles/free/FreePageStyle\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getFreeList } from \"../../api/free/free_api\";\nimport { SideBar } from \"../../components/SideBar\";\n\n// search 카테고리\nconst searchCate = [\n  {\n    id: 1,\n    title: \"제목\",\n  },\n  // {\n  //   id: 2,\n  //   title: \"내용\",\n  // },\n  {\n    id: 2,\n    title: \"제목+내용\",\n  },\n  {\n    id: 3,\n    title: \"닉네임\",\n  },\n];\n\n// 더미데이터\nconst freeData = [\n  {\n    id: 1,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"650\",\n    look: \"650\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 2,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"600\",\n    look: \"600\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 3,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"350\",\n    look: \"350\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 4,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"250\",\n    look: \"250\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 5,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"150\",\n    look: \"150\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 6,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"120\",\n    look: \"120\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 7,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"50\",\n    look: \"50\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 8,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"8\",\n    look: \"8\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 9,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"9\",\n    look: \"9\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 10,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"10\",\n    look: \"10\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 11,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"11\",\n    look: \"11\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 12,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"12\",\n    look: \"12\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 13,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"13\",\n    look: \"13\",\n    date: \"2024.02.20\",\n  },\n  {\n    id: 14,\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\n    nick: \"콩이\",\n    like: \"14\",\n    look: \"14\",\n    date: \"2024.02.20\",\n  },\n];\n\nconst FreePage = () => {\n  // 데이터 연동\n  const [type, setType] = useState(1);\n  const [search, setSearch] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const [sort, setSort] = useState(null);\n\n  const [page, setPage] = useState(1);\n\n  const [freeList, setFreeList] = useState([]);\n  const [freeLength, setFreeLength] = useState([]);\n\n  const freeListData = async () => {\n    await getFreeList({ page, search, type, sort, setFreeList, setFreeLength });\n  };\n  useEffect(() => {\n    freeListData();\n  }, [page, search, type, sort]);\n\n  // table 헤더\n  const columns = React.useMemo(() => [\n    {\n      Header: \"제목\",\n      accessor: \"title\",\n      width: '45%',\n    },\n    {\n      Header: \"닉네임\",\n      accessor: \"nick\",\n      width: '10%',\n    },\n    {\n      Header: \"좋아요\",\n      accessor: \"boardLikeCnt\",\n      width: '10%',\n    },\n    {\n      Header: \"조회수\",\n      accessor: \"view\",\n      width: '10%',\n    },\n    {\n      Header: \"업로드 날짜\",\n      accessor: \"createdAt\",\n      width: '25%',\n    },\n  ]);\n  const headerKey = columns.map(header => header.accessor);\n\n  // 페이지네이션\n  const handlePageChange = _tempPage => {\n    setPage(_tempPage);\n  };\n\n  // 페이지 이동\n  const navigate = useNavigate();\n  const moveToRegister = () => {\n    navigate(`/free/register`);\n  };\n  const moveToDetail = async _item => {\n    const url = `/free/details?iboard=${_item.iboard}`;\n    navigate(url);\n  };\n\n  console.log(search, type, sort);\n  return (\n    <Layout>\n      <SideBar />\n      <FreePageStyle>\n        <FreeHeader>\n          <p>자유게시판</p>\n          <SearchSection>\n            <select onChange={e => setType(e.target.value)}>\n              {searchCate.map(item => {\n                return (\n                  <option key={item.id} value={item.id}>\n                    {item.title}\n                  </option>\n                );\n              })}\n            </select>\n            <FreeSearchForm>\n              <input\n                type=\"text\"\n                placeholder=\"검색어를 입력하세요\"\n                value={inputValue}\n                onChange={e => setInputValue(e.target.value)}\n                onKeyPress={e => {\n                  if (e.key === \"Enter\") {\n                    e.preventDefault();\n                    setSearch(inputValue);\n                  }\n                }}\n              ></input>\n              <button\n                type=\"button\"\n                onClick={() => setSearch(inputValue)}\n              ></button>\n            </FreeSearchForm>\n          </SearchSection>\n        </FreeHeader>\n        <FreeMain>\n          <SortWrap>\n            <button\n              onClick={() => setSort(0)}\n              style={{\n                fontWeight: sort === 0 ? \"bold\" : \"normal\",\n                color: sort === 0 ? \"#2c39b5\" : \"\",\n              }}\n            >\n              최신순\n            </button>\n            <img src=\"/images/main/line.svg\" />\n            <button\n              onClick={() => setSort(1)}\n              style={{ fontWeight: sort === 1 ? \"bold\" : \"normal\",\n              color: sort === 1 ? \"#2c39b5\" : \"\", }}\n            >\n              좋아요순\n            </button>\n            <img src=\"/images/main/line.svg\" />\n            <button\n              onClick={() => setSort(2)}\n              style={{ fontWeight: sort === 2 ? \"bold\" : \"normal\",\n              color: sort === 2 ? \"#2c39b5\" : \"\", }}\n            >\n              조회순\n            </button>\n          </SortWrap>\n          <table>\n            <thead>\n              <tr>\n                {columns.map(header => (\n                  <th key={header.accessor} style={{ width: header.width }}>{header.Header}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {freeList.map((item, index) => (\n                <tr key={index} onClick={() => moveToDetail(item)}>\n                  {/* headerKey를 순회하면서 key를 가져옴 */}\n                  {headerKey.map(key => (\n                    <td key={key + index}>\n                      {item[key]} {/* key로 객체의 값을 출력 */}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <BtSection>\n            <button onClick={moveToRegister}>글쓰기</button>\n          </BtSection>\n          <div style={{ textAlign: \"center\", margin: \"20px 0\" }}>\n            <PaginationBlue\n              current={page}\n              onChange={handlePageChange}\n              total={freeLength}\n              pageSize={12}\n            />\n          </div>\n        </FreeMain>\n      </FreePageStyle>\n    </Layout>\n  );\n};\n\nexport default FreePage;\n","export const Common = {\n  // 숫자가 높을수록 밝은 색\n  color: {\n    primary: \"#2C39B5\",\n    p100: \"#000000\",\n    p200: \"#4B4B4B\",\n    p300: \"#777777\",\n    p400: \"#E4E7FF\",\n    p500: \"#F2F2FF\",\n    p600: \"#FFFFFF\",\n  },\n};\n","import styled from \"@emotion/styled\";\nimport { Pagination } from \"antd\";\n\nexport const FreePageStyle = styled.div`\n  width: 1260px;\n  margin: 0 auto;\n`;\nexport const FreeHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #2c39b5;\n  padding-bottom: 17px;\n  p {\n    color: #000;\n    font-size: 24px;\n    font-weight: 400;\n    font-style: normal;\n    line-height: normal;\n  }\n`;\nexport const SearchSection = styled.div`\n  display: flex;\n  width: 330px;\n  height: 35px;\n  border: 1px solid #bebebe;\n  select {\n    width: 100px;\n    border: none;\n    border-right: 1px solid #bebebe;\n  }\n`;\nexport const FreeSearchForm = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 230px;\n  height: 35px;\n  padding: 0 10px;\n  /* border: 1px solid #BEBEBE; */\n  input {\n    border: none;\n    width: 180px;\n    height: 30px;\n    font-size: 16px;\n    font-weight: 400;\n  }\n  button {\n    width: 16px;\n    height: 16px;\n    background-image: url(\"/images/free/bt_search.svg\");\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n  }\n`;\n\nexport const FreeMain = styled.div`\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  th {\n    height: 50px;\n    border-bottom: 1px solid #bebebe;\n    text-align: center;\n    background: #e4e7ff;\n    font-size: 16px;\n    font-weight: normal;\n  }\n  td {\n    height: 60px;\n    padding: 10px;\n    border-bottom: 1px solid #bebebe;\n    text-align: center;\n    font-size: 14px;\n    background: #fff;\n    cursor: pointer;\n  }\n`;\n\nexport const SortWrap = styled.div`\n  margin-top: 25px;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 10px;\n  button {\n    border: none;\n    background: transparent;\n    font-size: 15px;\n    color: #777;\n    cursor: pointer;\n  }\n  img {\n    width: 2px;\n    height: 15px;\n  }\n`;\n\nexport const BtSection = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n  button {\n    width: 150px;\n    height: 40px;\n    background: #2c39b5;\n    border: none;\n\n    color: #fff;\n    font-size: 16px;\n    cursor: pointer;\n  }\n`;\n\nexport const PaginationBlue = styled(Pagination)`\n  .ant-pagination-item-active {\n    border-color: #2c39b5;\n    background-color: #2c39b5;\n  }\n  .ant-pagination-item-active a {\n    color: #fff;\n  }\n  .ant-pagination-item-active:hover {\n    border-color: #2c39b5;\n    background-color: #2c39b5;\n  }\n  .ant-pagination-item-active a:hover {\n    color: #fff;\n  }\n  .ant-pagination-options {\n    display: none;\n  }\n`;\n"],"names":["getFreeList","async","page","search","type","sort","setFreeList","setFreeLength","_ref","url","concat","SERVER_URL","res","jwtAxios","get","data","boardList","totalBoardCount","error","console","log","getFreeData","iboard","axios","getLike","postFreeData","obj","_ref2","header","headers","post","putFreeData","_ref3","put","deleteFreeData","delete","Wrap","styled","div","_templateObject","_taggedTemplateLiteral","SideBarWrap","_templateObject2","ButtonWrap","_templateObject3","Common","color","p300","Write","button","_templateObject4","Chat","_templateObject5","FreeBoard","_templateObject6","Profile","_templateObject7","Call","_templateObject8","SideBar","setSelectedItem","setActiveBtn","_jsx","children","_jsxs","Link","to","onClick","subItem","sessionStorage","setItem","searchCate","id","title","FreePage","setType","useState","setSearch","inputValue","setInputValue","setSort","setPage","freeList","freeLength","useEffect","freeListData","columns","React","Header","accessor","width","headerKey","map","navigate","useNavigate","Layout","FreePageStyle","FreeHeader","SearchSection","onChange","e","target","value","item","FreeSearchForm","placeholder","onKeyPress","key","preventDefault","FreeMain","SortWrap","style","fontWeight","src","index","_item","moveToDetail","BtSection","moveToRegister","textAlign","margin","PaginationBlue","current","_tempPage","total","pageSize","primary","p100","p200","p400","p500","p600","Pagination"],"sourceRoot":""}